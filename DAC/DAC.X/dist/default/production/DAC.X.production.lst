

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Sep 14 22:29:41 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F690
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "DAC.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "DAC.c"
    45  2007  F0C4               	dw 0xFFFC & 0xFFF7 & 0xFFEF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF ;#
    46                           	FNROOT	_main
    47                           	FNCALL	intlevel1,_xandi
    48                           	global	intlevel1
    49                           	FNROOT	intlevel1
    50                           	global	_a
    51                           	global	_cont
    52                           	global	_forma
    53                           	global	_ADCON0
    54                           psect	text106,local,class=CODE,delta=2
    55                           global __ptext106
    56  0000                     __ptext106:
    57  001F                     _ADCON0	set	31
    58                           	global	_ADRESH
    59  001E                     _ADRESH	set	30
    60                           	global	_INTCON
    61  000B                     _INTCON	set	11
    62                           	global	_PORTC
    63  0007                     _PORTC	set	7
    64                           	global	_ADIF
    65  0066                     _ADIF	set	102
    66                           	global	_CARRY
    67  0018                     _CARRY	set	24
    68                           	global	_GIE
    69  005F                     _GIE	set	95
    70                           	global	_GO
    71  00F9                     _GO	set	249
    72                           	global	_INTF
    73  0059                     _INTF	set	89
    74                           	global	_ADCON1
    75  009F                     _ADCON1	set	159
    76                           	global	_OPTION_REG
    77  0081                     _OPTION_REG	set	129
    78                           	global	_TRISC
    79  0087                     _TRISC	set	135
    80                           	global	_ADIE
    81  0466                     _ADIE	set	1126
    82                           	global	_TRISA0
    83  0428                     _TRISA0	set	1064
    84                           	global	_TRISA2
    85  042A                     _TRISA2	set	1066
    86                           	global	_ANSEL
    87  011E                     _ANSEL	set	286
    88                           	global	_ANSELH
    89  011F                     _ANSELH	set	287
    90                           	global	_EEADR
    91  010D                     _EEADR	set	269
    92                           	global	_EEDATA
    93  010C                     _EEDATA	set	268
    94                           	global	_EECON1
    95  018C                     _EECON1	set	396
    96                           	global	_EECON2
    97  018D                     _EECON2	set	397
    98                           	global	_RD
    99  0C60                     _RD	set	3168
   100                           	global	_WR
   101  0C61                     _WR	set	3169
   102                           	global	_WREN
   103  0C62                     _WREN	set	3170
   104                           	file	"C:\Users\ALEXAN~1\AppData\Local\Temp\sas8."
   105                           	line	#
   106                           psect cinit,class=CODE,delta=2
   107                           global start_initialization
   108  0174                     start_initialization:
   109                           
   110                           psect	bssBANK0,class=BANK0,space=1
   111                           global __pbssBANK0
   112  0020                     __pbssBANK0:
   113  0020                     _a:
   114  0020                            ds      2
   115                           
   116  0022                     _cont:
   117  0022                            ds      2
   118                           
   119  0024                     _forma:
   120  0024                            ds      1
   121                           
   122                           ; Clear objects allocated to BANK0
   123                           psect cinit,class=CODE,delta=2
   124  0174  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   125  0175  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   126  0176  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   127  0177  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   128  0178  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   129                           psect cinit,class=CODE,delta=2
   130                           global end_of_initialization
   131                           
   132                           ;End of C runtime variable initialization code
   133                           
   134  0179                     end_of_initialization:
   135  0179  0183               clrf status
   136  017A  118A  2813         ljmp _main	;jump to C main() function
   137                           psect	cstackCOMMON,class=COMMON,space=1
   138                           global __pcstackCOMMON
   139  0070                     __pcstackCOMMON:
   140                           	global	?_xandi
   141  0070                     ?_xandi:	; 0 bytes @ 0x0
   142                           	global	??_xandi
   143  0070                     ??_xandi:	; 0 bytes @ 0x0
   144                           	global	?_main
   145  0070                     ?_main:	; 0 bytes @ 0x0
   146  0070                     	ds	6
   147                           	global	??_main
   148  0076                     ??_main:	; 0 bytes @ 0x6
   149  0076                     	ds	1
   150                           psect	cstackBANK0,class=BANK0,space=1
   151                           global __pcstackBANK0
   152  0025                     __pcstackBANK0:
   153                           	global	main@b
   154  0025                     main@b:	; 1 bytes @ 0x0
   155  0025                     	ds	1
   156                           	global	main@b_1579
   157  0026                     main@b_1579:	; 1 bytes @ 0x1
   158  0026                     	ds	1
   159                           	global	main@b_1580
   160  0027                     main@b_1580:	; 1 bytes @ 0x2
   161  0027                     	ds	1
   162                           	global	main@b_1581
   163  0028                     main@b_1581:	; 1 bytes @ 0x3
   164  0028                     	ds	1
   165 ;;Data sizes: Strings 0, constant 0, data 0, bss 5, persistent 0 stack 0
   166 ;;Auto spaces:   Size  Autos    Used
   167 ;; COMMON          14      7       7
   168 ;; BANK0           80      4       9
   169 ;; BANK1           80      0       0
   170 ;; BANK2           80      0       0
   171                           
   172 ;;
   173 ;; Pointer list with targets:
   174                           
   175                           
   176                           
   177 ;;
   178 ;; Critical Paths under _main in COMMON
   179 ;;
   180 ;;   None.
   181 ;;
   182 ;; Critical Paths under _xandi in COMMON
   183 ;;
   184 ;;   None.
   185 ;;
   186 ;; Critical Paths under _main in BANK0
   187 ;;
   188 ;;   None.
   189 ;;
   190 ;; Critical Paths under _xandi in BANK0
   191 ;;
   192 ;;   None.
   193 ;;
   194 ;; Critical Paths under _main in BANK1
   195 ;;
   196 ;;   None.
   197 ;;
   198 ;; Critical Paths under _xandi in BANK1
   199 ;;
   200 ;;   None.
   201 ;;
   202 ;; Critical Paths under _main in BANK2
   203 ;;
   204 ;;   None.
   205 ;;
   206 ;; Critical Paths under _xandi in BANK2
   207 ;;
   208 ;;   None.
   209                           
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   212 ;;
   213                           
   214 ;;
   215 ;;Call Graph Tables:
   216 ;;
   217 ;; ---------------------------------------------------------------------------------
   218 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   219 ;; ---------------------------------------------------------------------------------
   220 ;; (0) _main                                                 5     5      0      96
   221 ;;                                              6 COMMON     1     1      0
   222 ;;                                              0 BANK0      4     4      0
   223 ;; ---------------------------------------------------------------------------------
   224 ;; Estimated maximum stack depth 0
   225 ;; ---------------------------------------------------------------------------------
   226 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   227 ;; ---------------------------------------------------------------------------------
   228 ;; (1) _xandi                                                6     6      0       0
   229 ;;                                              0 COMMON     6     6      0
   230 ;; ---------------------------------------------------------------------------------
   231 ;; Estimated maximum stack depth 1
   232 ;; ---------------------------------------------------------------------------------
   233                           
   234 ;; Call Graph Graphs:
   235                           
   236 ;; _main (ROOT)
   237 ;;
   238 ;; _xandi (ROOT)
   239 ;;
   240                           
   241 ;; Address spaces:
   242                           
   243 ;;Name               Size   Autos  Total    Cost      Usage
   244 ;;BITCOMMON            E      0       0       0        0.0%
   245 ;;EEDATA             100      0       0       0        0.0%
   246 ;;NULL                 0      0       0       0        0.0%
   247 ;;CODE                 0      0       0       0        0.0%
   248 ;;COMMON               E      7       7       1       50.0%
   249 ;;BITSFR0              0      0       0       1        0.0%
   250 ;;SFR0                 0      0       0       1        0.0%
   251 ;;BITSFR1              0      0       0       2        0.0%
   252 ;;SFR1                 0      0       0       2        0.0%
   253 ;;STACK                0      0       0       2        0.0%
   254 ;;BANK0               50      4       9       3       11.3%
   255 ;;BITBANK1            50      0       0       4        0.0%
   256 ;;BITSFR3              0      0       0       4        0.0%
   257 ;;SFR3                 0      0       0       4        0.0%
   258 ;;BANK1               50      0       0       5        0.0%
   259 ;;BITSFR2              0      0       0       5        0.0%
   260 ;;SFR2                 0      0       0       5        0.0%
   261 ;;BITBANK2            50      0       0       6        0.0%
   262 ;;BANK2               50      0       0       7        0.0%
   263 ;;ABS                  0      0      10       8        0.0%
   264 ;;BITBANK0            50      0       0       9        0.0%
   265 ;;DATA                 0      0      10      10        0.0%
   266                           
   267                           	global	_main
   268                           psect	maintext,global,class=CODE,delta=2
   269                           global __pmaintext
   270  0013                     __pmaintext:
   271                           
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 30 in file "DAC.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  b               1    3[BANK0 ] unsigned char 
   279 ;;  b               1    2[BANK0 ] unsigned char 
   280 ;;  b               1    1[BANK0 ] unsigned char 
   281 ;;  b               1    0[BANK0 ] unsigned char 
   282 ;; Return value:  Size  Location     Type
   283 ;;		None               void
   284 ;; Registers used:
   285 ;;		wreg, status,2, status,0
   286 ;; Tracked objects:
   287 ;;		On entry : 17F/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   291 ;;      Params:         0       0       0       0
   292 ;;      Locals:         0       4       0       0
   293 ;;      Temps:          1       0       0       0
   294 ;;      Totals:         1       4       0       0
   295 ;;Total ram usage:        5 bytes
   296 ;; Hardware stack levels required when called:    1
   297 ;; This function calls:
   298 ;;		Nothing
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           psect	maintext
   304                           	file	"DAC.c"
   305                           	line	30
   306                           	global	__size_of_main
   307  0126                     	__size_of_main	equ	__end_of_main-_main
   308                           	
   309  0013                     _main:	
   310                           	opt	stack 7
   311                           ; Regs used in _main: [wreg+status,2+status,0]
   312                           	line	31
   313                           	
   314  0013                     l3165:	
   315                           ;DAC.c: 31: ANSEL=0;
   316  0013  1283               	bcf	status, 5	;RP0=0, select bank2
   317  0014  1703               	bsf	status, 6	;RP1=1, select bank2
   318  0015  019E               	clrf	(286)^0100h	;volatile
   319                           	line	32
   320                           ;DAC.c: 32: ANSELH=0;
   321  0016  019F               	clrf	(287)^0100h	;volatile
   322                           	line	33
   323                           ;DAC.c: 33: OPTION_REG=0;
   324  0017  1683               	bsf	status, 5	;RP0=1, select bank1
   325  0018  1303               	bcf	status, 6	;RP1=0, select bank1
   326  0019  0181               	clrf	(129)^080h	;volatile
   327                           	line	34
   328                           	
   329  001A                     l3167:	
   330                           ;DAC.c: 34: INTCON=0b11010000;
   331  001A  30D0               	movlw	(0D0h)
   332  001B  008B               	movwf	(11)	;volatile
   333                           	line	35
   334                           	
   335  001C                     l3169:	
   336                           ;DAC.c: 35: ADCON0=0b01000001;
   337  001C  3041               	movlw	(041h)
   338  001D  1283               	bcf	status, 5	;RP0=0, select bank0
   339  001E  1303               	bcf	status, 6	;RP1=0, select bank0
   340  001F  009F               	movwf	(31)	;volatile
   341                           	line	36
   342                           	
   343  0020                     l3171:	
   344                           ;DAC.c: 36: ADCON1=0b01100000;
   345  0020  3060               	movlw	(060h)
   346  0021  1683               	bsf	status, 5	;RP0=1, select bank1
   347  0022  1303               	bcf	status, 6	;RP1=0, select bank1
   348  0023  009F               	movwf	(159)^080h	;volatile
   349                           	line	37
   350                           	
   351  0024                     l3173:	
   352                           ;DAC.c: 37: ADIE=1;
   353  0024  170C               	bsf	(1126/8)^080h,(1126)&7
   354                           	line	38
   355                           	
   356  0025                     l3175:	
   357                           ;DAC.c: 38: TRISA0=1;
   358  0025  1405               	bsf	(1064/8)^080h,(1064)&7
   359                           	line	39
   360                           	
   361  0026                     l3177:	
   362                           ;DAC.c: 39: TRISA2=1;
   363  0026  1505               	bsf	(1066/8)^080h,(1066)&7
   364                           	line	40
   365                           	
   366  0027                     l3179:	
   367                           ;DAC.c: 40: TRISC=0;
   368  0027  0187               	clrf	(135)^080h	;volatile
   369                           	line	41
   370                           	
   371  0028                     l3181:	
   372                           ;DAC.c: 41: PORTC=0;
   373  0028  1283               	bcf	status, 5	;RP0=0, select bank0
   374  0029  1303               	bcf	status, 6	;RP1=0, select bank0
   375  002A  0187               	clrf	(7)	;volatile
   376  002B  28E3               	goto	l3235
   377                           	line	42
   378                           ;DAC.c: 42: while(1){
   379                           	
   380  002C                     l901:	
   381                           	line	43
   382                           ;DAC.c: 43: while(forma==0){
   383  002C  28E3               	goto	l3235
   384                           	
   385  002D                     l903:	
   386                           	line	44
   387                           ;DAC.c: 44: while(PORTC<128){
   388  002D  2850               	goto	l3193
   389                           	
   390  002E                     l905:	
   391                           	line	45
   392                           	
   393  002E                     l3183:	
   394                           ;DAC.c: 45: a++;
   395  002E  3001               	movlw	low(01h)
   396  002F  07A0               	addwf	(_a),f
   397  0030  1803               	skipnc
   398  0031  0AA1               	incf	(_a+1),f
   399  0032  3000               	movlw	high(01h)
   400  0033  07A1               	addwf	(_a+1),f
   401                           	line	46
   402                           	
   403  0034                     l3185:	
   404                           ;DAC.c: 46: PORTC=(PORTC+a);
   405  0034  0820               	movf	(_a),w
   406  0035  0707               	addwf	(7),w	;volatile
   407  0036  0087               	movwf	(7)	;volatile
   408                           	line	47
   409                           	
   410  0037                     l3187:	
   411                           ;DAC.c: 47: for(char b=0;b<cont;b++) _delay((unsigned long)((1)*(20000000/4000000.0)));
   412  0037  01A5               	clrf	(main@b)
   413  0038  2843               	goto	l3191
   414                           	
   415  0039                     l907:	
   416                           		opt asmopt_off
   417  0039  283A               	nop2	;2 cycle nop
   418                           	opt asmopt_on
   419                           	opt asmopt_off
   420  003A  283B               	nop2	;2 cycle nop
   421                           	opt asmopt_on
   422                           	opt asmopt_off
   423  003B  0064               	clrwdt
   424                           	opt asmopt_on
   425                           
   426                           	
   427  003C                     l3189:	
   428  003C  3001               	movlw	(01h)
   429  003D  00F6               	movwf	(??_main+0)+0
   430  003E  0876               	movf	(??_main+0)+0,w
   431  003F  1283               	bcf	status, 5	;RP0=0, select bank0
   432  0040  1303               	bcf	status, 6	;RP1=0, select bank0
   433  0041  07A5               	addwf	(main@b),f
   434  0042  2843               	goto	l3191
   435                           	
   436  0043                     l906:	
   437                           	
   438  0043                     l3191:	
   439  0043  0823               	movf	(_cont+1),w
   440  0044  3A80               	xorlw	80h
   441  0045  3C80               	sublw	080h
   442  0046  1D03               	skipz
   443  0047  284A               	goto	u2465
   444  0048  0822               	movf	(_cont),w
   445  0049  0225               	subwf	(main@b),w
   446  004A                     u2465:
   447                           
   448  004A  1C03               	skipc
   449  004B  284D               	goto	u2461
   450  004C  284E               	goto	u2460
   451  004D                     u2461:
   452  004D  2839               	goto	l907
   453  004E                     u2460:
   454  004E  2850               	goto	l3193
   455                           	
   456  004F                     l908:	
   457  004F  2850               	goto	l3193
   458                           	line	48
   459                           	
   460  0050                     l904:	
   461                           	line	44
   462                           	
   463  0050                     l3193:	
   464  0050  3080               	movlw	(080h)
   465  0051  1283               	bcf	status, 5	;RP0=0, select bank0
   466  0052  1303               	bcf	status, 6	;RP1=0, select bank0
   467  0053  0207               	subwf	(7),w	;volatile
   468  0054  1C03               	skipc
   469  0055  2857               	goto	u2471
   470  0056  2858               	goto	u2470
   471  0057                     u2471:
   472  0057  282E               	goto	l3183
   473  0058                     u2470:
   474  0058  287C               	goto	l3205
   475                           	
   476  0059                     l909:	
   477                           	line	49
   478                           ;DAC.c: 48: }
   479                           ;DAC.c: 49: while(PORTC<255){
   480  0059  287C               	goto	l3205
   481                           	
   482  005A                     l911:	
   483                           	line	50
   484                           	
   485  005A                     l3195:	
   486                           ;DAC.c: 50: a--;
   487  005A  30FF               	movlw	low(-1)
   488  005B  07A0               	addwf	(_a),f
   489  005C  1803               	skipnc
   490  005D  0AA1               	incf	(_a+1),f
   491  005E  30FF               	movlw	high(-1)
   492  005F  07A1               	addwf	(_a+1),f
   493                           	line	51
   494                           	
   495  0060                     l3197:	
   496                           ;DAC.c: 51: PORTC=(PORTC+a);
   497  0060  0820               	movf	(_a),w
   498  0061  0707               	addwf	(7),w	;volatile
   499  0062  0087               	movwf	(7)	;volatile
   500                           	line	52
   501                           	
   502  0063                     l3199:	
   503                           ;DAC.c: 52: for(char b=0;b<cont;b++) _delay((unsigned long)((1)*(20000000/4000000.0)));
   504  0063  01A6               	clrf	(main@b_1579)
   505  0064  286F               	goto	l3203
   506                           	
   507  0065                     l913:	
   508                           		opt asmopt_off
   509  0065  2866               	nop2	;2 cycle nop
   510                           	opt asmopt_on
   511                           	opt asmopt_off
   512  0066  2867               	nop2	;2 cycle nop
   513                           	opt asmopt_on
   514                           	opt asmopt_off
   515  0067  0064               	clrwdt
   516                           	opt asmopt_on
   517                           
   518                           	
   519  0068                     l3201:	
   520  0068  3001               	movlw	(01h)
   521  0069  00F6               	movwf	(??_main+0)+0
   522  006A  0876               	movf	(??_main+0)+0,w
   523  006B  1283               	bcf	status, 5	;RP0=0, select bank0
   524  006C  1303               	bcf	status, 6	;RP1=0, select bank0
   525  006D  07A6               	addwf	(main@b_1579),f
   526  006E  286F               	goto	l3203
   527                           	
   528  006F                     l912:	
   529                           	
   530  006F                     l3203:	
   531  006F  0823               	movf	(_cont+1),w
   532  0070  3A80               	xorlw	80h
   533  0071  3C80               	sublw	080h
   534  0072  1D03               	skipz
   535  0073  2876               	goto	u2485
   536  0074  0822               	movf	(_cont),w
   537  0075  0226               	subwf	(main@b_1579),w
   538  0076                     u2485:
   539                           
   540  0076  1C03               	skipc
   541  0077  2879               	goto	u2481
   542  0078  287A               	goto	u2480
   543  0079                     u2481:
   544  0079  2865               	goto	l913
   545  007A                     u2480:
   546  007A  287C               	goto	l3205
   547                           	
   548  007B                     l914:	
   549  007B  287C               	goto	l3205
   550                           	line	53
   551                           	
   552  007C                     l910:	
   553                           	line	49
   554                           	
   555  007C                     l3205:	
   556  007C  1283               	bcf	status, 5	;RP0=0, select bank0
   557  007D  1303               	bcf	status, 6	;RP1=0, select bank0
   558  007E  0807               	movf	(7),w	;volatile
   559  007F  3AFF               	xorlw	0FFh
   560  0080  1D03               	skipz
   561  0081  2883               	goto	u2491
   562  0082  2884               	goto	u2490
   563  0083                     u2491:
   564  0083  285A               	goto	l3195
   565  0084                     u2490:
   566  0084  2885               	goto	l3207
   567                           	
   568  0085                     l915:	
   569                           	line	54
   570                           	
   571  0085                     l3207:	
   572                           ;DAC.c: 53: }
   573                           ;DAC.c: 54: a=0;
   574  0085  01A0               	clrf	(_a)
   575  0086  01A1               	clrf	(_a+1)
   576                           	line	55
   577                           ;DAC.c: 55: while(PORTC>128){
   578  0087  28AB               	goto	l3219
   579                           	
   580  0088                     l917:	
   581                           	line	56
   582                           	
   583  0088                     l3209:	
   584                           ;DAC.c: 56: a++;
   585  0088  3001               	movlw	low(01h)
   586  0089  07A0               	addwf	(_a),f
   587  008A  1803               	skipnc
   588  008B  0AA1               	incf	(_a+1),f
   589  008C  3000               	movlw	high(01h)
   590  008D  07A1               	addwf	(_a+1),f
   591                           	line	57
   592                           	
   593  008E                     l3211:	
   594                           ;DAC.c: 57: PORTC=(PORTC-a);
   595  008E  0320               	decf	(_a),w
   596  008F  3AFF               	xorlw	0ffh
   597  0090  0707               	addwf	(7),w	;volatile
   598  0091  0087               	movwf	(7)	;volatile
   599                           	line	58
   600                           	
   601  0092                     l3213:	
   602                           ;DAC.c: 58: for(char b=0;b<cont;b++) _delay((unsigned long)((1)*(20000000/4000000.0)));
   603  0092  01A7               	clrf	(main@b_1580)
   604  0093  289E               	goto	l3217
   605                           	
   606  0094                     l919:	
   607                           		opt asmopt_off
   608  0094  2895               	nop2	;2 cycle nop
   609                           	opt asmopt_on
   610                           	opt asmopt_off
   611  0095  2896               	nop2	;2 cycle nop
   612                           	opt asmopt_on
   613                           	opt asmopt_off
   614  0096  0064               	clrwdt
   615                           	opt asmopt_on
   616                           
   617                           	
   618  0097                     l3215:	
   619  0097  3001               	movlw	(01h)
   620  0098  00F6               	movwf	(??_main+0)+0
   621  0099  0876               	movf	(??_main+0)+0,w
   622  009A  1283               	bcf	status, 5	;RP0=0, select bank0
   623  009B  1303               	bcf	status, 6	;RP1=0, select bank0
   624  009C  07A7               	addwf	(main@b_1580),f
   625  009D  289E               	goto	l3217
   626                           	
   627  009E                     l918:	
   628                           	
   629  009E                     l3217:	
   630  009E  0823               	movf	(_cont+1),w
   631  009F  3A80               	xorlw	80h
   632  00A0  3C80               	sublw	080h
   633  00A1  1D03               	skipz
   634  00A2  28A5               	goto	u2505
   635  00A3  0822               	movf	(_cont),w
   636  00A4  0227               	subwf	(main@b_1580),w
   637  00A5                     u2505:
   638                           
   639  00A5  1C03               	skipc
   640  00A6  28A8               	goto	u2501
   641  00A7  28A9               	goto	u2500
   642  00A8                     u2501:
   643  00A8  2894               	goto	l919
   644  00A9                     u2500:
   645  00A9  28AB               	goto	l3219
   646                           	
   647  00AA                     l920:	
   648  00AA  28AB               	goto	l3219
   649                           	line	59
   650                           	
   651  00AB                     l916:	
   652                           	line	55
   653                           	
   654  00AB                     l3219:	
   655  00AB  3081               	movlw	(081h)
   656  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
   657  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
   658  00AE  0207               	subwf	(7),w	;volatile
   659  00AF  1803               	skipnc
   660  00B0  28B2               	goto	u2511
   661  00B1  28B3               	goto	u2510
   662  00B2                     u2511:
   663  00B2  2888               	goto	l3209
   664  00B3                     u2510:
   665  00B3  28D8               	goto	l3231
   666                           	
   667  00B4                     l921:	
   668                           	line	60
   669                           ;DAC.c: 59: }
   670                           ;DAC.c: 60: while(PORTC>0){
   671  00B4  28D8               	goto	l3231
   672                           	
   673  00B5                     l923:	
   674                           	line	61
   675                           	
   676  00B5                     l3221:	
   677                           ;DAC.c: 61: a--;
   678  00B5  30FF               	movlw	low(-1)
   679  00B6  07A0               	addwf	(_a),f
   680  00B7  1803               	skipnc
   681  00B8  0AA1               	incf	(_a+1),f
   682  00B9  30FF               	movlw	high(-1)
   683  00BA  07A1               	addwf	(_a+1),f
   684                           	line	62
   685                           	
   686  00BB                     l3223:	
   687                           ;DAC.c: 62: PORTC=(PORTC-a);
   688  00BB  0320               	decf	(_a),w
   689  00BC  3AFF               	xorlw	0ffh
   690  00BD  0707               	addwf	(7),w	;volatile
   691  00BE  0087               	movwf	(7)	;volatile
   692                           	line	63
   693                           	
   694  00BF                     l3225:	
   695                           ;DAC.c: 63: for(char b=0;b<cont;b++) _delay((unsigned long)((1)*(20000000/4000000.0)));
   696  00BF  01A8               	clrf	(main@b_1581)
   697  00C0  28CB               	goto	l3229
   698                           	
   699  00C1                     l925:	
   700                           		opt asmopt_off
   701  00C1  28C2               	nop2	;2 cycle nop
   702                           	opt asmopt_on
   703                           	opt asmopt_off
   704  00C2  28C3               	nop2	;2 cycle nop
   705                           	opt asmopt_on
   706                           	opt asmopt_off
   707  00C3  0064               	clrwdt
   708                           	opt asmopt_on
   709                           
   710                           	
   711  00C4                     l3227:	
   712  00C4  3001               	movlw	(01h)
   713  00C5  00F6               	movwf	(??_main+0)+0
   714  00C6  0876               	movf	(??_main+0)+0,w
   715  00C7  1283               	bcf	status, 5	;RP0=0, select bank0
   716  00C8  1303               	bcf	status, 6	;RP1=0, select bank0
   717  00C9  07A8               	addwf	(main@b_1581),f
   718  00CA  28CB               	goto	l3229
   719                           	
   720  00CB                     l924:	
   721                           	
   722  00CB                     l3229:	
   723  00CB  0823               	movf	(_cont+1),w
   724  00CC  3A80               	xorlw	80h
   725  00CD  3C80               	sublw	080h
   726  00CE  1D03               	skipz
   727  00CF  28D2               	goto	u2525
   728  00D0  0822               	movf	(_cont),w
   729  00D1  0228               	subwf	(main@b_1581),w
   730  00D2                     u2525:
   731                           
   732  00D2  1C03               	skipc
   733  00D3  28D5               	goto	u2521
   734  00D4  28D6               	goto	u2520
   735  00D5                     u2521:
   736  00D5  28C1               	goto	l925
   737  00D6                     u2520:
   738  00D6  28D8               	goto	l3231
   739                           	
   740  00D7                     l926:	
   741  00D7  28D8               	goto	l3231
   742                           	line	64
   743                           	
   744  00D8                     l922:	
   745                           	line	60
   746                           	
   747  00D8                     l3231:	
   748  00D8  1283               	bcf	status, 5	;RP0=0, select bank0
   749  00D9  1303               	bcf	status, 6	;RP1=0, select bank0
   750  00DA  0887               	movf	(7),f
   751  00DB  1D03               	skipz	;volatile
   752  00DC  28DE               	goto	u2531
   753  00DD  28DF               	goto	u2530
   754  00DE                     u2531:
   755  00DE  28B5               	goto	l3221
   756  00DF                     u2530:
   757  00DF  28E0               	goto	l3233
   758                           	
   759  00E0                     l927:	
   760                           	line	66
   761                           	
   762  00E0                     l3233:	
   763                           ;DAC.c: 64: }
   764                           ;DAC.c: 66: a=0;
   765  00E0  01A0               	clrf	(_a)
   766  00E1  01A1               	clrf	(_a+1)
   767  00E2  28E3               	goto	l3235
   768                           	line	68
   769                           	
   770  00E3                     l902:	
   771                           	line	43
   772                           	
   773  00E3                     l3235:	
   774  00E3  0824               	movf	(_forma),w
   775  00E4  1D03               	skipz
   776  00E5  28E7               	goto	u2540
   777  00E6  2850               	goto	l3193
   778  00E7                     u2540:
   779  00E7  2902               	goto	l3247
   780                           	
   781  00E8                     l928:	
   782                           	line	69
   783                           ;DAC.c: 68: }
   784                           ;DAC.c: 69: while(forma==1){
   785  00E8  2902               	goto	l3247
   786                           	
   787  00E9                     l930:	
   788                           	line	70
   789                           	
   790  00E9                     l3237:	
   791                           ;DAC.c: 70: PORTC=0;
   792  00E9  0187               	clrf	(7)	;volatile
   793                           	line	71
   794                           ;DAC.c: 71: while(PORTC!=0xFF){
   795  00EA  28F0               	goto	l3241
   796                           	
   797  00EB                     l932:	
   798                           	line	72
   799                           	
   800  00EB                     l3239:	
   801                           ;DAC.c: 72: PORTC++;
   802  00EB  3001               	movlw	(01h)
   803  00EC  00F6               	movwf	(??_main+0)+0
   804  00ED  0876               	movf	(??_main+0)+0,w
   805  00EE  0787               	addwf	(7),f	;volatile
   806  00EF  28F0               	goto	l3241
   807                           	line	73
   808                           	
   809  00F0                     l931:	
   810                           	line	71
   811                           	
   812  00F0                     l3241:	
   813  00F0  0807               	movf	(7),w	;volatile
   814  00F1  3AFF               	xorlw	0FFh
   815  00F2  1D03               	skipz
   816  00F3  28F5               	goto	u2551
   817  00F4  28F6               	goto	u2550
   818  00F5                     u2551:
   819  00F5  28EB               	goto	l3239
   820  00F6                     u2550:
   821  00F6  28FB               	goto	l3245
   822                           	
   823  00F7                     l933:	
   824                           	line	74
   825                           ;DAC.c: 73: }
   826                           ;DAC.c: 74: while(PORTC){
   827  00F7  28FB               	goto	l3245
   828                           	
   829  00F8                     l935:	
   830                           	line	75
   831                           	
   832  00F8                     l3243:	
   833                           ;DAC.c: 75: PORTC--;
   834  00F8  3001               	movlw	low(01h)
   835  00F9  0287               	subwf	(7),f	;volatile
   836  00FA  28FB               	goto	l3245
   837                           	line	76
   838                           	
   839  00FB                     l934:	
   840                           	line	74
   841                           	
   842  00FB                     l3245:	
   843  00FB  0887               	movf	(7),f
   844  00FC  1D03               	skipz	;volatile
   845  00FD  28FF               	goto	u2561
   846  00FE  2900               	goto	u2560
   847  00FF                     u2561:
   848  00FF  28F8               	goto	l3243
   849  0100                     u2560:
   850  0100  2902               	goto	l3247
   851                           	
   852  0101                     l936:	
   853  0101  2902               	goto	l3247
   854                           	line	77
   855                           	
   856  0102                     l929:	
   857                           	line	69
   858                           	
   859  0102                     l3247:	
   860  0102  0824               	movf	(_forma),w
   861  0103  3A01               	xorlw	01h
   862  0104  1903               	skipnz
   863  0105  2907               	goto	u2571
   864  0106  2908               	goto	u2570
   865  0107                     u2571:
   866  0107  28E9               	goto	l3237
   867  0108                     u2570:
   868  0108  2919               	goto	l3255
   869                           	
   870  0109                     l937:	
   871                           	line	78
   872                           ;DAC.c: 76: }
   873                           ;DAC.c: 77: }
   874                           ;DAC.c: 78: while(forma==2){
   875  0109  2919               	goto	l3255
   876                           	
   877  010A                     l939:	
   878                           	line	79
   879                           	
   880  010A                     l3249:	
   881                           ;DAC.c: 79: PORTC=0;
   882  010A  0187               	clrf	(7)	;volatile
   883                           	line	80
   884                           ;DAC.c: 80: while(PORTC!=0xFF){
   885  010B  2911               	goto	l3253
   886                           	
   887  010C                     l941:	
   888                           	line	81
   889                           	
   890  010C                     l3251:	
   891                           ;DAC.c: 81: PORTC++;
   892  010C  3001               	movlw	(01h)
   893  010D  00F6               	movwf	(??_main+0)+0
   894  010E  0876               	movf	(??_main+0)+0,w
   895  010F  0787               	addwf	(7),f	;volatile
   896  0110  2911               	goto	l3253
   897                           	line	82
   898                           	
   899  0111                     l940:	
   900                           	line	80
   901                           	
   902  0111                     l3253:	
   903  0111  0807               	movf	(7),w	;volatile
   904  0112  3AFF               	xorlw	0FFh
   905  0113  1D03               	skipz
   906  0114  2916               	goto	u2581
   907  0115  2917               	goto	u2580
   908  0116                     u2581:
   909  0116  290C               	goto	l3251
   910  0117                     u2580:
   911  0117  2919               	goto	l3255
   912                           	
   913  0118                     l942:	
   914  0118  2919               	goto	l3255
   915                           	line	83
   916                           	
   917  0119                     l938:	
   918                           	line	78
   919                           	
   920  0119                     l3255:	
   921  0119  0824               	movf	(_forma),w
   922  011A  3A02               	xorlw	02h
   923  011B  1903               	skipnz
   924  011C  291E               	goto	u2591
   925  011D  291F               	goto	u2590
   926  011E                     u2591:
   927  011E  290A               	goto	l3249
   928  011F                     u2590:
   929  011F  292E               	goto	l3263
   930                           	
   931  0120                     l943:	
   932                           	line	84
   933                           ;DAC.c: 82: }
   934                           ;DAC.c: 83: }
   935                           ;DAC.c: 84: while(forma==3){
   936  0120  292E               	goto	l3263
   937                           	
   938  0121                     l945:	
   939                           	line	85
   940                           	
   941  0121                     l3257:	
   942                           ;DAC.c: 85: PORTC=0xFF;
   943  0121  30FF               	movlw	(0FFh)
   944  0122  0087               	movwf	(7)	;volatile
   945                           	line	86
   946                           ;DAC.c: 86: while(PORTC){
   947  0123  2927               	goto	l3261
   948                           	
   949  0124                     l947:	
   950                           	line	87
   951                           	
   952  0124                     l3259:	
   953                           ;DAC.c: 87: PORTC--;
   954  0124  3001               	movlw	low(01h)
   955  0125  0287               	subwf	(7),f	;volatile
   956  0126  2927               	goto	l3261
   957                           	line	88
   958                           	
   959  0127                     l946:	
   960                           	line	86
   961                           	
   962  0127                     l3261:	
   963  0127  0887               	movf	(7),f
   964  0128  1D03               	skipz	;volatile
   965  0129  292B               	goto	u2601
   966  012A  292C               	goto	u2600
   967  012B                     u2601:
   968  012B  2924               	goto	l3259
   969  012C                     u2600:
   970  012C  292E               	goto	l3263
   971                           	
   972  012D                     l948:	
   973  012D  292E               	goto	l3263
   974                           	line	89
   975                           	
   976  012E                     l944:	
   977                           	line	84
   978                           	
   979  012E                     l3263:	
   980  012E  0824               	movf	(_forma),w
   981  012F  3A03               	xorlw	03h
   982  0130  1903               	skipnz
   983  0131  2933               	goto	u2611
   984  0132  2934               	goto	u2610
   985  0133                     u2611:
   986  0133  2921               	goto	l3257
   987  0134                     u2610:
   988                           	
   989  0134                     l949:	
   990                           	line	90
   991                           ;DAC.c: 88: }
   992                           ;DAC.c: 89: }
   993                           ;DAC.c: 90: GO=1;
   994  0134  149F               	bsf	(249/8),(249)&7
   995  0135  28E3               	goto	l3235
   996                           	line	91
   997                           	
   998  0136                     l950:	
   999                           	line	42
  1000  0136  28E3               	goto	l3235
  1001                           	
  1002  0137                     l951:	
  1003                           	line	92
  1004                           	
  1005  0137                     l952:	
  1006                           	global	start
  1007  0137  118A  2811         	ljmp	start
  1008                           	opt stack 0
  1009                           GLOBAL	__end_of_main
  1010  0139                     	__end_of_main:
  1011 ;; =============== function _main ends ============
  1012                           
  1013                           	signat	_main,88
  1014                           	global	_xandi
  1015                           psect	text107,local,class=CODE,delta=2
  1016                           global __ptext107
  1017  0139                     __ptext107:
  1018                           
  1019 ;; *************** function _xandi *****************
  1020 ;; Defined at:
  1021 ;;		line 15 in file "DAC.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, btemp+1
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1035 ;;      Params:         0       0       0       0
  1036 ;;      Locals:         0       0       0       0
  1037 ;;      Temps:          6       0       0       0
  1038 ;;      Totals:         6       0       0       0
  1039 ;;Total ram usage:        6 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		Interrupt level 1
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           psect	text107
  1048                           	file	"DAC.c"
  1049                           	line	15
  1050                           	global	__size_of_xandi
  1051  003B                     	__size_of_xandi	equ	__end_of_xandi-_xandi
  1052                           	
  1053  0139                     _xandi:	
  1054                           	opt	stack 7
  1055                           ; Regs used in _xandi: [wreg+status,2+status,0+btemp+1]
  1056                           psect	intentry,class=CODE,delta=2
  1057                           global __pintentry
  1058  0004                     __pintentry:
  1059                           global interrupt_function
  1060  0004                     interrupt_function:
  1061                           	global saved_w
  1062  007E                     	saved_w	set	btemp+0
  1063  0004  00FE               	movwf	saved_w
  1064  0005  0E03               	swapf	status,w
  1065  0006  00F2               	movwf	(??_xandi+2)
  1066  0007  0804               	movf	fsr0,w
  1067  0008  00F3               	movwf	(??_xandi+3)
  1068  0009  080A               	movf	pclath,w
  1069  000A  00F4               	movwf	(??_xandi+4)
  1070  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1071  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1072  000D  087F               	movf	btemp+1,w
  1073  000E  00F5               	movwf	(??_xandi+5)
  1074  000F  118A  2939         	ljmp	_xandi
  1075                           psect	text107
  1076                           	line	16
  1077                           	
  1078  0139                     i1l3149:	
  1079                           ;DAC.c: 16: if(INTF){
  1080  0139  1C8B               	btfss	(89/8),(89)&7
  1081  013A  293C               	goto	u242_21
  1082  013B  293D               	goto	u242_20
  1083  013C                     u242_21:
  1084  013C  2955               	goto	i1l895
  1085  013D                     u242_20:
  1086                           	line	17
  1087                           	
  1088  013D                     i1l3151:	
  1089                           ;DAC.c: 17: _delay((unsigned long)((20)*(20000000/4000.0)));
  1090                           	opt asmopt_off
  1091  013D  3082               movlw	130
  1092  013E  00F1               movwf	((??_xandi+0)+0+1),f
  1093  013F  30DD               	movlw	221
  1094  0140  00F0               movwf	((??_xandi+0)+0),f
  1095  0141                     u262_27:
  1096  0141  0BF0               	decfsz	((??_xandi+0)+0),f
  1097  0142  2941               	goto	u262_27
  1098  0143  0BF1               	decfsz	((??_xandi+0)+0+1),f
  1099  0144  2941               	goto	u262_27
  1100  0145  2946               	nop2
  1101                           opt asmopt_on
  1102                           
  1103                           	line	18
  1104                           	
  1105  0146                     i1l3153:	
  1106                           ;DAC.c: 18: INTF=0;
  1107  0146  108B               	bcf	(89/8),(89)&7
  1108                           	line	19
  1109                           	
  1110  0147                     i1l3155:	
  1111                           ;DAC.c: 19: forma++;
  1112  0147  3001               	movlw	(01h)
  1113  0148  00F0               	movwf	(??_xandi+0)+0
  1114  0149  0870               	movf	(??_xandi+0)+0,w
  1115  014A  1283               	bcf	status, 5	;RP0=0, select bank0
  1116  014B  1303               	bcf	status, 6	;RP1=0, select bank0
  1117  014C  07A4               	addwf	(_forma),f
  1118                           	line	20
  1119                           	
  1120  014D                     i1l3157:	
  1121                           ;DAC.c: 20: if(forma==4) forma=0;
  1122  014D  0824               	movf	(_forma),w
  1123  014E  3A04               	xorlw	04h
  1124  014F  1D03               	skipz
  1125  0150  2952               	goto	u243_21
  1126  0151  2953               	goto	u243_20
  1127  0152                     u243_21:
  1128  0152  2955               	goto	i1l895
  1129  0153                     u243_20:
  1130                           	
  1131  0153                     i1l3159:	
  1132  0153  01A4               	clrf	(_forma)
  1133  0154  2955               	goto	i1l895
  1134                           	
  1135  0155                     i1l896:	
  1136                           	line	21
  1137                           	
  1138  0155                     i1l895:	
  1139                           	line	22
  1140                           ;DAC.c: 21: }
  1141                           ;DAC.c: 22: if(ADIF){
  1142  0155  1F0C               	btfss	(102/8),(102)&7
  1143  0156  2958               	goto	u244_21
  1144  0157  2959               	goto	u244_20
  1145  0158                     u244_21:
  1146  0158  2969               	goto	i1l898
  1147  0159                     u244_20:
  1148                           	line	23
  1149                           	
  1150  0159                     i1l3161:	
  1151                           ;DAC.c: 23: ADIF=0;
  1152  0159  130C               	bcf	(102/8),(102)&7
  1153                           	line	24
  1154                           	
  1155  015A                     i1l3163:	
  1156                           ;DAC.c: 24: cont=(ADRESH*4);
  1157  015A  081E               	movf	(30),w	;volatile
  1158  015B  00F0               	movwf	(??_xandi+0)+0
  1159  015C  01F1               	clrf	(??_xandi+0)+0+1
  1160  015D  3002               	movlw	02h
  1161  015E  00FF               	movwf	btemp+1
  1162  015F                     u245_25:
  1163  015F  1003               	clrc
  1164  0160  0DF0               	rlf	(??_xandi+0)+0,f
  1165  0161  0DF1               	rlf	(??_xandi+0)+1,f
  1166  0162  0BFF               	decfsz	btemp+1,f
  1167  0163  295F               	goto	u245_25
  1168  0164  0870               	movf	0+(??_xandi+0)+0,w
  1169  0165  00A2               	movwf	(_cont)
  1170  0166  0871               	movf	1+(??_xandi+0)+0,w
  1171  0167  00A3               	movwf	(_cont+1)
  1172  0168  2969               	goto	i1l898
  1173                           	line	25
  1174                           	
  1175  0169                     i1l897:	
  1176                           	line	26
  1177                           	
  1178  0169                     i1l898:	
  1179  0169  0875               	movf	(??_xandi+5),w
  1180  016A  00FF               	movwf	btemp+1
  1181  016B  0874               	movf	(??_xandi+4),w
  1182  016C  008A               	movwf	pclath
  1183  016D  0873               	movf	(??_xandi+3),w
  1184  016E  0084               	movwf	fsr0
  1185  016F  0E72               	swapf	(??_xandi+2)^0FFFFFF80h,w
  1186  0170  0083               	movwf	status
  1187  0171  0EFE               	swapf	saved_w,f
  1188  0172  0E7E               	swapf	saved_w,w
  1189  0173  0009               	retfie
  1190                           	opt stack 0
  1191                           GLOBAL	__end_of_xandi
  1192  0174                     	__end_of_xandi:
  1193 ;; =============== function _xandi ends ============
  1194                           
  1195                           	signat	_xandi,88
  1196                           psect	text108,local,class=CODE,delta=2
  1197                           global __ptext108
  1198  0000                     __ptext108:
  1199                           	global	btemp
  1200  007E                     	btemp set 07Eh
  1201                           
  1202                           	DABS	1,126,2	;btemp
  1203                           	global	wtemp0
  1204  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Sep 14 22:29:41 2013

                   _a 0020                    _GO 00F9                    _RD 0C60                    _WR 0C61  
                 l901 002C                   l902 00E3                   l910 007C                   l911 005A  
                 l903 002D                   l920 00AA                   l912 006F                   l904 0050  
                 l921 00B4                   l913 0065                   l905 002E                   l930 00E9  
                 l922 00D8                   l914 007B                   l906 0043                   l931 00F0  
                 l923 00B5                   l915 0085                   l907 0039                   l940 0111  
                 l932 00EB                   l924 00CB                   l916 00AB                   l908 004F  
                 l941 010C                   l933 00F7                   l925 00C1                   l917 0088  
                 l909 0059                   l950 0136                   l942 0118                   l934 00FB  
                 l926 00D7                   l918 009E                   l951 0137                   l943 0120  
                 l935 00F8                   l927 00E0                   l919 0094                   l952 0137  
                 l944 012E                   l936 0101                   l928 00E8                   l945 0121  
                 l937 0109                   l929 0102                   l946 0127                   l938 0119  
                 l947 0124                   l939 010A                   l948 012D                   l949 0134  
                 _GIE 005F                   fsr0 0004                  l3201 0068                  l3211 008E  
                l3203 006F                  l3221 00B5                  l3213 0092                  l3205 007C  
                l3223 00BB                  l3231 00D8                  l3215 0097                  l3207 0085  
                l3241 00F0                  l3233 00E0                  l3225 00BF                  l3217 009E  
                l3209 0088                  l3251 010C                  l3243 00F8                  l3227 00C4  
                l3219 00AB                  l3235 00E3                  l3171 0020                  l3261 0127  
                l3253 0111                  l3245 00FB                  l3237 00E9                  l3229 00CB  
                l3181 0028                  l3173 0024                  l3165 0013                  l3263 012E  
                l3255 0119                  l3239 00EB                  l3247 0102                  l3191 0043  
                l3183 002E                  l3175 0025                  l3167 001A                  l3257 0121  
                l3249 010A                  l3185 0034                  l3193 0050                  l3177 0026  
                l3169 001C                  l3259 0124                  l3195 005A                  l3187 0037  
                l3179 0027                  l3197 0060                  l3189 003C                  l3199 0063  
                _ADIE 0466                  _ADIF 0066                  u2500 00A9                  u2501 00A8  
                u2510 00B3                  u2511 00B2                  u2600 012C                  u2520 00D6  
                u2601 012B                  u2521 00D5                  u2505 00A5                  u2610 0134  
                u2530 00DF                  u2611 0133                  u2531 00DE                  u2540 00E7  
                u2460 004E                  u2525 00D2                  u2461 004D                  u2550 00F6  
                u2470 0058                  u2551 00F5                  u2471 0057                  u2560 0100  
                u2480 007A                  u2561 00FF                  u2481 0079                  u2465 004A  
                u2570 0108                  u2490 0084                  u2571 0107                  u2491 0083  
                u2580 0117                  u2581 0116                  u2485 0076                  u2590 011F  
                u2591 011E                  _INTF 0059                  _WREN 0C62                  _cont 0022  
                _main 0013                  btemp 007E                  start 0011                 ?_main 0070  
               _EEADR 010D                 _CARRY 0018                 _ANSEL 011E                 i1l895 0155  
               i1l896 0155                 i1l897 0169                 i1l898 0169                 _PORTC 0007  
               _TRISC 0087                 _forma 0024                 _xandi 0139                 main@b 0025  
               pclath 000A                 status 0003                 wtemp0 007E          __end_of_main 0139  
              ??_main 0076                _ADCON0 001F                _ADCON1 009F                _ADRESH 001E  
              _EEDATA 010C                _EECON1 018C                _EECON2 018D                ?_xandi 0070  
              _ANSELH 011F                i1l3151 013D                i1l3161 0159                i1l3153 0146  
              i1l3163 015A                i1l3155 0147                i1l3157 014D                i1l3149 0139  
              i1l3159 0153                _INTCON 000B                u242_20 013D                u242_21 013C  
              u243_20 0153                u243_21 0152                u244_20 0159                u244_21 0158  
              u245_25 015F                u262_27 0141                _TRISA0 0428                _TRISA2 042A  
              saved_w 007E        __pcstackCOMMON 0070         __end_of_xandi 0174               ??_xandi 0070  
          __pbssBANK0 0020            __pmaintext 0013            __pintentry 0004  end_of_initialization 0179  
          main@b_1580 0027            main@b_1581 0028            main@b_1579 0026   start_initialization 0174  
       __pcstackBANK0 0025             __ptext106 0000             __ptext107 0139             __ptext108 0000  
      __size_of_xandi 003B     interrupt_function 0004         __size_of_main 0126              intlevel1 0000  
          _OPTION_REG 0081  
