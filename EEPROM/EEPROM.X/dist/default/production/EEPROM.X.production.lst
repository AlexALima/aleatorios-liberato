

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Mon Oct 07 08:47:05 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  0086                     	;# 
    67  0087                     	;# 
    68  0089                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008F                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0093                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  0105                     	;# 
    92  0107                     	;# 
    93  0108                     	;# 
    94  0109                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  0185                     	;# 
   101  0187                     	;# 
   102  0188                     	;# 
   103  0189                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008F                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0093                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  0105                     	;# 
   168  0107                     	;# 
   169  0108                     	;# 
   170  0109                     	;# 
   171  010C                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0185                     	;# 
   177  0187                     	;# 
   178  0188                     	;# 
   179  0189                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182                           
   183                           	psect	idataBANK0
   184  04E5                     __pidataBANK0:	
   185                           
   186                           ;initializer for _buffer
   187  04E5  34FF               	retlw	255
   188                           
   189                           ;initializer for _senha_1
   190  04E6  34FF               	retlw	255
   191                           
   192                           ;initializer for _senha_2
   193  04E7  34FF               	retlw	255
   194                           
   195                           ;initializer for _senha_3
   196  04E8  34FF               	retlw	255
   197                           
   198                           ;initializer for _senhar_1
   199  04E9  34FF               	retlw	255
   200                           
   201                           ;initializer for _senhar_2
   202  04EA  34FF               	retlw	255
   203                           
   204                           ;initializer for _senhar_3
   205  04EB  34FF               	retlw	255
   206                           
   207                           	psect	strings
   208  0500                     __pstrings:	
   209  0500                     stringtab:	
   210  0500                     __stringtab:	
   211  0500                     stringcode:	
   212                           ;	String table - string pointers are 1 byte each
   213                           
   214  0500                     stringdir:	
   215  0500  3005               	movlw	high stringdir
   216  0501  008A               	movwf	10
   217  0502  0804               	movf	4,w
   218  0503  0A84               	incf	4,f
   219  0504  0782               	addwf	2,f
   220  0505                     __stringbase:	
   221  0505  3400               	retlw	0
   222  0506                     __end_of__stringtab:	
   223  0506                     _dpowers:	
   224  0506  3401               	retlw	1
   225  0507  3400               	retlw	0
   226  0508  340A               	retlw	10
   227  0509  3400               	retlw	0
   228  050A  3464               	retlw	100
   229  050B  3400               	retlw	0
   230  050C  34E8               	retlw	232
   231  050D  3403               	retlw	3
   232  050E  3410               	retlw	16
   233  050F  3427               	retlw	39
   234  0510                     __end_of_dpowers:	
   235  000B                     _INTCON	set	11
   236  0005                     _PORTA	set	5
   237  006C                     _EEIF	set	108
   238  005F                     _GIE	set	95
   239  005C                     _INTE	set	92
   240  0059                     _INTF	set	89
   241  002C                     _RA4	set	44
   242  002D                     _RA5	set	45
   243  0031                     _RB1	set	49
   244  0032                     _RB2	set	50
   245  0035                     _RB5	set	53
   246  0036                     _RB6	set	54
   247  0037                     _RB7	set	55
   248  005B                     _RBIE	set	91
   249  0058                     _RBIF	set	88
   250  003C                     _RC4	set	60
   251  003D                     _RC5	set	61
   252  003E                     _RC6	set	62
   253  003F                     _RC7	set	63
   254  0096                     _IOCB	set	150
   255  0081                     _OPTION_REG	set	129
   256  0085                     _TRISA	set	133
   257  0086                     _TRISB	set	134
   258  0087                     _TRISC	set	135
   259  046C                     _EEIE	set	1132
   260  010D                     _EEADR	set	269
   261  010C                     _EEDAT	set	268
   262  0188                     _ANSEL	set	392
   263  0189                     _ANSELH	set	393
   264  018C                     _EECON1	set	396
   265  018D                     _EECON2	set	397
   266  0C60                     _RD	set	3168
   267  0C61                     _WR	set	3169
   268  0C62                     _WREN	set	3170
   269  0510                     __stringdata:	
   270  0510                     STR_1:	
   271  0510  344E               	retlw	78	;'N'
   272  0511  346F               	retlw	111	;'o'
   273  0512  3476               	retlw	118	;'v'
   274  0513  3461               	retlw	97	;'a'
   275  0514  3473               	retlw	115	;'s'
   276  0515  3420               	retlw	32	;' '
   277  0516  3473               	retlw	115	;'s'
   278  0517  3465               	retlw	101	;'e'
   279  0518  346E               	retlw	110	;'n'
   280  0519  3468               	retlw	104	;'h'
   281  051A  3461               	retlw	97	;'a'
   282  051B  3473               	retlw	115	;'s'
   283  051C  343A               	retlw	58	;':'
   284  051D  340A               	retlw	10
   285  051E  3453               	retlw	83	;'S'
   286  051F  3465               	retlw	101	;'e'
   287  0520  346E               	retlw	110	;'n'
   288  0521  3468               	retlw	104	;'h'
   289  0522  3461               	retlw	97	;'a'
   290  0523  3420               	retlw	32	;' '
   291  0524  3431               	retlw	49	;'1'
   292  0525  343A               	retlw	58	;':'
   293  0526  3400               	retlw	0
   294  0527                     STR_5:	
   295  0527  344E               	retlw	78	;'N'
   296  0528  346F               	retlw	111	;'o'
   297  0529  3476               	retlw	118	;'v'
   298  052A  3461               	retlw	97	;'a'
   299  052B  3473               	retlw	115	;'s'
   300  052C  3420               	retlw	32	;' '
   301  052D  3473               	retlw	115	;'s'
   302  052E  3465               	retlw	101	;'e'
   303  052F  346E               	retlw	110	;'n'
   304  0530  3468               	retlw	104	;'h'
   305  0531  3461               	retlw	97	;'a'
   306  0532  3473               	retlw	115	;'s'
   307  0533  343A               	retlw	58	;':'
   308  0534  340A               	retlw	10
   309  0535  3453               	retlw	83	;'S'
   310  0536  3465               	retlw	101	;'e'
   311  0537  346E               	retlw	110	;'n'
   312  0538  3468               	retlw	104	;'h'
   313  0539  3461               	retlw	97	;'a'
   314  053A  3420               	retlw	32	;' '
   315  053B  3432               	retlw	50	;'2'
   316  053C  343A               	retlw	58	;':'
   317  053D  3400               	retlw	0
   318  053E                     STR_9:	
   319  053E  344E               	retlw	78	;'N'
   320  053F  346F               	retlw	111	;'o'
   321  0540  3476               	retlw	118	;'v'
   322  0541  3461               	retlw	97	;'a'
   323  0542  3473               	retlw	115	;'s'
   324  0543  3420               	retlw	32	;' '
   325  0544  3473               	retlw	115	;'s'
   326  0545  3465               	retlw	101	;'e'
   327  0546  346E               	retlw	110	;'n'
   328  0547  3468               	retlw	104	;'h'
   329  0548  3461               	retlw	97	;'a'
   330  0549  3473               	retlw	115	;'s'
   331  054A  343A               	retlw	58	;':'
   332  054B  340A               	retlw	10
   333  054C  3453               	retlw	83	;'S'
   334  054D  3465               	retlw	101	;'e'
   335  054E  346E               	retlw	110	;'n'
   336  054F  3468               	retlw	104	;'h'
   337  0550  3461               	retlw	97	;'a'
   338  0551  3420               	retlw	32	;' '
   339  0552  3433               	retlw	51	;'3'
   340  0553  343A               	retlw	58	;':'
   341  0554  3400               	retlw	0
   342  0555                     STR_14:	
   343  0555  3444               	retlw	68	;'D'
   344  0556  3469               	retlw	105	;'i'
   345  0557  3467               	retlw	103	;'g'
   346  0558  3469               	retlw	105	;'i'
   347  0559  3474               	retlw	116	;'t'
   348  055A  3465               	retlw	101	;'e'
   349  055B  3420               	retlw	32	;' '
   350  055C  3461               	retlw	97	;'a'
   351  055D  3420               	retlw	32	;' '
   352  055E  3473               	retlw	115	;'s'
   353  055F  3465               	retlw	101	;'e'
   354  0560  346E               	retlw	110	;'n'
   355  0561  3468               	retlw	104	;'h'
   356  0562  3461               	retlw	97	;'a'
   357  0563  343A               	retlw	58	;':'
   358  0564  340A               	retlw	10
   359  0565  3453               	retlw	83	;'S'
   360  0566  3465               	retlw	101	;'e'
   361  0567  346E               	retlw	110	;'n'
   362  0568  3468               	retlw	104	;'h'
   363  0569  3461               	retlw	97	;'a'
   364  056A  343A               	retlw	58	;':'
   365  056B  3400               	retlw	0
   366  056C                     STR_18:	
   367  056C  3453               	retlw	83	;'S'
   368  056D  3465               	retlw	101	;'e'
   369  056E  346E               	retlw	110	;'n'
   370  056F  3468               	retlw	104	;'h'
   371  0570  3461               	retlw	97	;'a'
   372  0571  3420               	retlw	32	;' '
   373  0572  3469               	retlw	105	;'i'
   374  0573  346E               	retlw	110	;'n'
   375  0574  3463               	retlw	99	;'c'
   376  0575  346F               	retlw	111	;'o'
   377  0576  3472               	retlw	114	;'r'
   378  0577  3472               	retlw	114	;'r'
   379  0578  3465               	retlw	101	;'e'
   380  0579  3474               	retlw	116	;'t'
   381  057A  3461               	retlw	97	;'a'
   382  057B  3400               	retlw	0
   383  057C                     STR_20:	
   384  057C  340A               	retlw	10
   385  057D  3454               	retlw	84	;'T'
   386  057E  3465               	retlw	101	;'e'
   387  057F  346E               	retlw	110	;'n'
   388  0580  3474               	retlw	116	;'t'
   389  0581  3465               	retlw	101	;'e'
   390  0582  3420               	retlw	32	;' '
   391  0583  3464               	retlw	100	;'d'
   392  0584  3465               	retlw	101	;'e'
   393  0585  3420               	retlw	32	;' '
   394  0586  346E               	retlw	110	;'n'
   395  0587  346F               	retlw	111	;'o'
   396  0588  3476               	retlw	118	;'v'
   397  0589  346F               	retlw	111	;'o'
   398  058A  3400               	retlw	0
   399  058B                     STR_19:	
   400  058B  340A               	retlw	10
   401  058C  3442               	retlw	66	;'B'
   402  058D  346C               	retlw	108	;'l'
   403  058E  346F               	retlw	111	;'o'
   404  058F  3471               	retlw	113	;'q'
   405  0590  3475               	retlw	117	;'u'
   406  0591  3465               	retlw	101	;'e'
   407  0592  3461               	retlw	97	;'a'
   408  0593  3464               	retlw	100	;'d'
   409  0594  346F               	retlw	111	;'o'
   410  0595  3421               	retlw	33	;'!'
   411  0596  3400               	retlw	0
   412  0597                     STR_13:	
   413  0597  3445               	retlw	69	;'E'
   414  0598  3473               	retlw	115	;'s'
   415  0599  3470               	retlw	112	;'p'
   416  059A  3465               	retlw	101	;'e'
   417  059B  3472               	retlw	114	;'r'
   418  059C  3465               	retlw	101	;'e'
   419  059D  3420               	retlw	32	;' '
   420  059E  3425               	retlw	37	;'%'
   421  059F  3464               	retlw	100	;'d'
   422  05A0  3473               	retlw	115	;'s'
   423  05A1  3400               	retlw	0
   424  05A2                     STR_2:	
   425  05A2  3425               	retlw	37	;'%'
   426  05A3  3464               	retlw	100	;'d'
   427  05A4  3400               	retlw	0
   428  05A5                     __end_of__stringdata:	
   429                           
   430                           ; #config settings
   431  0000                     
   432                           	psect	cinit
   433  07E1                     start_initialization:	
   434  07E1                     __initialization:	
   435                           
   436                           ; Clear objects allocated to BITCOMMON
   437  07E1  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   438                           
   439                           ; Clear objects allocated to BANK0
   440  07E2  01C8               	clrf	__pbssBANK0& (0+127)
   441  07E3  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   442                           
   443                           ; Initialize objects allocated to BANK0
   444  07E4  1383               	bcf	3,7	;select IRP bank0
   445  07E5  3048               	movlw	low (__pdataBANK0+7)
   446  07E6  00FD               	movwf	btemp+-1
   447  07E7  3004               	movlw	high __pidataBANK0
   448  07E8  00FE               	movwf	btemp
   449  07E9  30E5               	movlw	low __pidataBANK0
   450  07EA  00FF               	movwf	btemp+1
   451  07EB  3041               	movlw	low __pdataBANK0
   452  07EC  0084               	movwf	4
   453  07ED  120A  118A  24D0   	fcall	init_ram0
   454  07F0                     end_of_initialization:	
   455                           ;End of C runtime variable initialization code
   456                           
   457  07F0                     __end_of__initialization:	
   458  07F0  0183               	clrf	3
   459  07F1  120A  118A  2F2A   	ljmp	_main	;jump to C main() function
   460                           
   461                           	psect	bitbssCOMMON
   462  03B8                     __pbitbssCOMMON:	
   463  03B8                     _foi:	
   464  03B8                     	ds	1
   465  03B9                     _ok:	
   466  03B9                     	ds	1
   467                           
   468                           	psect	bssBANK0
   469  0048                     __pbssBANK0:	
   470  0048                     _tempo:	
   471  0048                     	ds	1
   472  0049                     _tentativas:	
   473  0049                     	ds	1
   474                           
   475                           	psect	dataBANK0
   476  0041                     __pdataBANK0:	
   477  0041                     _buffer:	
   478  0041                     	ds	1
   479  0042                     _senha_1:	
   480  0042                     	ds	1
   481  0043                     _senha_2:	
   482  0043                     	ds	1
   483  0044                     _senha_3:	
   484  0044                     	ds	1
   485  0045                     _senhar_1:	
   486  0045                     	ds	1
   487  0046                     _senhar_2:	
   488  0046                     	ds	1
   489  0047                     _senhar_3:	
   490  0047                     	ds	1
   491                           
   492                           	psect	inittext
   493  04CC                     init_fetch0:	
   494                           ;	Called with low address in FSR and high address in W
   495                           
   496  04CC  087E               	movf	126,w
   497  04CD  008A               	movwf	10
   498  04CE  087F               	movf	127,w
   499  04CF  0082               	movwf	2
   500  04D0                     init_ram0:	
   501                           ;Called with:
   502                           ;	high address of idata address in btemp 
   503                           ;	low address of idata address in btemp+1 
   504                           ;	low address of data in FSR
   505                           ;	high address + 1 of data in btemp-1
   506                           
   507  04D0  24CC  120A  118A   	fcall	init_fetch0
   508  04D3  0080               	movwf	0
   509  04D4  0A84               	incf	4,f
   510  04D5  0804               	movf	4,w
   511  04D6  067D               	xorwf	125,w
   512  04D7  1903               	btfsc	3,2
   513  04D8  3400               	retlw	0
   514  04D9  0AFF               	incf	127,f
   515  04DA  1903               	btfsc	3,2
   516  04DB  0AFE               	incf	126,f
   517  04DC  2CD0               	goto	init_ram0
   518                           
   519                           	psect	cstackCOMMON
   520  0070                     __pcstackCOMMON:	
   521  0070                     ?_lcd_clear:	
   522  0070                     ?_lcd_write:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ?_lcd_init:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ?_entrada_senhas:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0070                     ?_timer:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ?_senhas:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ?_xandi_lima:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ??_xandi_lima:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ?_main:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ?_lcd_goto:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0070                     ?_lcd_putc:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0070                     ?_putch:	
   553                           ; 0 bytes @ 0x0
   554                           
   555                           
   556                           ; 0 bytes @ 0x0
   557  0070                     	ds	6
   558  0076                     ?_write_ee:	
   559  0076                     ??___lwdiv:	
   560                           ; 0 bytes @ 0x6
   561                           
   562  0076                     write_ee@dado:	
   563                           ; 0 bytes @ 0x6
   564                           
   565  0076                     lcd_write@c:	
   566                           ; 1 bytes @ 0x6
   567                           
   568                           
   569                           ; 1 bytes @ 0x6
   570  0076                     	ds	1
   571  0077                     ??_write_ee:	
   572  0077                     ??_main:	
   573                           ; 0 bytes @ 0x7
   574                           
   575  0077                     ??_lcd_goto:	
   576                           ; 0 bytes @ 0x7
   577                           
   578  0077                     ??_lcd_putc:	
   579                           ; 0 bytes @ 0x7
   580                           
   581  0077                     ??_putch:	
   582                           ; 0 bytes @ 0x7
   583                           
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:	
   587                           ; 0 bytes @ 0x7
   588                           
   589  0020                     ??_lcd_write:	
   590  0020                     ?___lwdiv:	
   591                           ; 0 bytes @ 0x0
   592                           
   593  0020                     write_ee@adr:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0020                     ___lwdiv@divisor:	
   597                           ; 1 bytes @ 0x0
   598                           
   599                           
   600                           ; 2 bytes @ 0x0
   601  0020                     	ds	2
   602  0022                     ??_lcd_clear:	
   603  0022                     lcd_goto@pos:	
   604                           ; 0 bytes @ 0x2
   605                           
   606  0022                     ___lwdiv@dividend:	
   607                           ; 1 bytes @ 0x2
   608                           
   609                           
   610                           ; 2 bytes @ 0x2
   611  0022                     	ds	2
   612  0024                     ??_lcd_init:	
   613  0024                     lcd_putc@c:	
   614                           ; 0 bytes @ 0x4
   615                           
   616  0024                     ___lwdiv@quotient:	
   617                           ; 1 bytes @ 0x4
   618                           
   619                           
   620                           ; 2 bytes @ 0x4
   621  0024                     	ds	1
   622  0025                     putch@c:	
   623                           
   624                           ; 1 bytes @ 0x5
   625  0025                     	ds	1
   626  0026                     lcd_init@init_value:	
   627  0026                     ___lwdiv@counter:	
   628                           ; 1 bytes @ 0x6
   629                           
   630                           
   631                           ; 1 bytes @ 0x6
   632  0026                     	ds	1
   633  0027                     ?___lwmod:	
   634  0027                     ___lwmod@divisor:	
   635                           ; 2 bytes @ 0x7
   636                           
   637                           
   638                           ; 2 bytes @ 0x7
   639  0027                     	ds	2
   640  0029                     ___lwmod@dividend:	
   641                           
   642                           ; 2 bytes @ 0x9
   643  0029                     	ds	2
   644  002B                     ??___lwmod:	
   645                           
   646                           ; 0 bytes @ 0xB
   647  002B                     	ds	1
   648  002C                     ___lwmod@counter:	
   649                           
   650                           ; 1 bytes @ 0xC
   651  002C                     	ds	1
   652  002D                     ?_printf:	
   653                           
   654                           ; 2 bytes @ 0xD
   655  002D                     	ds	2
   656  002F                     ??_printf:	
   657                           
   658                           ; 0 bytes @ 0xF
   659  002F                     	ds	3
   660  0032                     printf@ap:	
   661                           
   662                           ; 1 bytes @ 0x12
   663  0032                     	ds	1
   664  0033                     printf@flag:	
   665                           
   666                           ; 1 bytes @ 0x13
   667  0033                     	ds	1
   668  0034                     printf@f:	
   669                           
   670                           ; 1 bytes @ 0x14
   671  0034                     	ds	1
   672  0035                     printf@prec:	
   673                           
   674                           ; 1 bytes @ 0x15
   675  0035                     	ds	1
   676  0036                     printf@_val:	
   677                           
   678                           ; 4 bytes @ 0x16
   679  0036                     	ds	4
   680  003A                     printf@c:	
   681                           
   682                           ; 1 bytes @ 0x1A
   683  003A                     	ds	1
   684  003B                     ??_entrada_senhas:	
   685  003B                     ??_timer:	
   686                           ; 0 bytes @ 0x1B
   687                           
   688                           
   689                           ; 0 bytes @ 0x1B
   690  003B                     	ds	3
   691  003E                     ??_senhas:	
   692                           
   693                           ; 0 bytes @ 0x1E
   694  003E                     	ds	3
   695                           
   696                           	psect	maintext
   697  072A                     __pmaintext:	
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 325 in file "../EEPROM.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;		None               void
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 17F/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0
   720 ;;      Totals:         0       0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels required when called:    8
   723 ;; This function calls:
   724 ;;		_entrada_senhas
   725 ;;		_senhas
   726 ;;		_lcd_init
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _main
   734  072A                     _main:	
   735                           
   736                           ;EEPROM.c: 326: ANSEL=0;
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _main: [allreg]
   740  072A  1683               	bsf	3,5	;RP0=1, select bank3
   741  072B  1703               	bsf	3,6	;RP1=1, select bank3
   742  072C  0188               	clrf	8	;volatile
   743                           
   744                           ;EEPROM.c: 327: ANSELH=0;
   745  072D  0189               	clrf	9	;volatile
   746                           
   747                           ;EEPROM.c: 328: TRISA=0;
   748  072E  1683               	bsf	3,5	;RP0=1, select bank1
   749  072F  1303               	bcf	3,6	;RP1=0, select bank1
   750  0730  0185               	clrf	5	;volatile
   751                           
   752                           ;EEPROM.c: 329: TRISB=0b11111001;
   753  0731  30F9               	movlw	249
   754  0732  0086               	movwf	6	;volatile
   755                           
   756                           ;EEPROM.c: 330: TRISC=0x0F;
   757  0733  300F               	movlw	15
   758  0734  0087               	movwf	7	;volatile
   759                           
   760                           ;EEPROM.c: 331: RC4=0;
   761  0735  1283               	bcf	3,5	;RP0=0, select bank0
   762  0736  1303               	bcf	3,6	;RP1=0, select bank0
   763  0737  1207               	bcf	7,4	;volatile
   764                           
   765                           ;EEPROM.c: 332: RC5=0;
   766  0738  1287               	bcf	7,5	;volatile
   767                           
   768                           ;EEPROM.c: 333: RC7=0;
   769  0739  1387               	bcf	7,7	;volatile
   770                           
   771                           ;EEPROM.c: 334: RC6=0;
   772  073A  1307               	bcf	7,6	;volatile
   773                           
   774                           ;EEPROM.c: 335: EECON1=0;
   775  073B  1683               	bsf	3,5	;RP0=1, select bank3
   776  073C  1703               	bsf	3,6	;RP1=1, select bank3
   777  073D  018C               	clrf	12	;volatile
   778                           
   779                           ;EEPROM.c: 336: INTCON=0b11011000;
   780  073E  30D8               	movlw	216
   781  073F  008B               	movwf	11	;volatile
   782                           
   783                           ;EEPROM.c: 337: IOCB=0b11100000;
   784  0740  30E0               	movlw	224
   785  0741  1683               	bsf	3,5	;RP0=1, select bank1
   786  0742  1303               	bcf	3,6	;RP1=0, select bank1
   787  0743  0096               	movwf	22	;volatile
   788                           
   789                           ;EEPROM.c: 338: OPTION_REG=0;
   790  0744  0181               	clrf	1	;volatile
   791                           
   792                           ;EEPROM.c: 339: lcd_init();
   793  0745  120A  118A  25A5   	fcall	_lcd_init
      +       120A  118A         
   794  074A                     l2365:	
   795                           ;EEPROM.c: 340: while(1){
   796                           
   797                           
   798                           ;EEPROM.c: 341: senhas();
   799  074A  120A  118A  2015   	fcall	_senhas
      +       120A  118A         
   800                           
   801                           ;EEPROM.c: 342: if(foi){
   802  074F  1C77               	btfss	_foi/(0+8),_foi& (0+7)
   803  0750  2F4A               	goto	l2365
   804                           
   805                           ;EEPROM.c: 343: foi=0;
   806  0751  1077               	bcf	_foi/(0+8),_foi& (0+7)
   807                           
   808                           ;EEPROM.c: 344: entrada_senhas();
   809  0752  120A  118A  220F   	fcall	_entrada_senhas
      +       120A  118A         
   810  0757  2F4A               	goto	l2365
   811  0758                     __end_of_main:	
   812                           
   813                           	psect	text1
   814  05A5                     __ptext1:	
   815 ;; *************** function _lcd_init *****************
   816 ;; Defined at:
   817 ;;		line 110 in file "../LCD_ModSauer.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  init_value      1    6[BANK0 ] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;		None               void
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       1       0       0       0
   833 ;;      Temps:          0       2       0       0       0
   834 ;;      Totals:         0       3       0       0       0
   835 ;;Total ram usage:        3 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    3
   838 ;; This function calls:
   839 ;;		_lcd_clear
   840 ;;		_lcd_write
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _lcd_init
   848  05A5                     _lcd_init:	
   849                           
   850                           ;LCD_ModSauer.c: 111: char init_value;
   851                           ;LCD_ModSauer.c: 114: init_value = 0x3;
   852                           
   853                           ;incstack = 0
   854                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   855  05A5  3003               	movlw	3
   856  05A6  1283               	bcf	3,5	;RP0=0, select bank0
   857  05A7  1303               	bcf	3,6	;RP1=0, select bank0
   858  05A8  00A4               	movwf	??_lcd_init
   859  05A9  0824               	movf	??_lcd_init,w
   860  05AA  00A6               	movwf	lcd_init@init_value
   861                           
   862                           ;LCD_ModSauer.c: 116: RA4 = 0;
   863  05AB  1205               	bcf	5,4	;volatile
   864                           
   865                           ;LCD_ModSauer.c: 117: RA5 = 0;
   866  05AC  1285               	bcf	5,5	;volatile
   867                           
   868                           ;LCD_ModSauer.c: 120: _delay((unsigned long)((15)*(4000000/4000.0)));
   869  05AD  3014               	movlw	20
   870  05AE  00A5               	movwf	??_lcd_init+1
   871  05AF  3079               	movlw	121
   872  05B0  00A4               	movwf	??_lcd_init
   873  05B1                     u2047:	
   874  05B1  0BA4               	decfsz	??_lcd_init,f
   875  05B2  2DB1               	goto	u2047
   876  05B3  0BA5               	decfsz	??_lcd_init+1,f
   877  05B4  2DB1               	goto	u2047
   878  05B5  2DB6               	nop2
   879                           
   880                           ;LCD_ModSauer.c: 121: PORTA = init_value;
   881  05B6  1283               	bcf	3,5	;RP0=0, select bank0
   882  05B7  1303               	bcf	3,6	;RP1=0, select bank0
   883  05B8  0826               	movf	lcd_init@init_value,w
   884  05B9  0085               	movwf	5	;volatile
   885                           
   886                           ;LCD_ModSauer.c: 122: ((RA5 = 1),(RA5=0));
   887  05BA  1685               	bsf	5,5	;volatile
   888  05BB  1285               	bcf	5,5	;volatile
   889                           
   890                           ;LCD_ModSauer.c: 123: _delay((unsigned long)((5)*(4000000/4000.0)));
   891  05BC  3007               	movlw	7
   892  05BD  00A5               	movwf	??_lcd_init+1
   893  05BE  307D               	movlw	125
   894  05BF  00A4               	movwf	??_lcd_init
   895  05C0                     u2057:	
   896  05C0  0BA4               	decfsz	??_lcd_init,f
   897  05C1  2DC0               	goto	u2057
   898  05C2  0BA5               	decfsz	??_lcd_init+1,f
   899  05C3  2DC0               	goto	u2057
   900                           
   901                           ;LCD_ModSauer.c: 124: ((RA5 = 1),(RA5=0));
   902  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   903  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   904  05C6  1685               	bsf	5,5	;volatile
   905  05C7  1285               	bcf	5,5	;volatile
   906                           
   907                           ;LCD_ModSauer.c: 125: _delay((unsigned long)((200)*(4000000/4000000.0)));
   908  05C8  3042               	movlw	66
   909  05C9  00A4               	movwf	??_lcd_init
   910  05CA                     u2067:	
   911  05CA  0BA4               	decfsz	??_lcd_init,f
   912  05CB  2DCA               	goto	u2067
   913  05CC  0000               	nop
   914                           
   915                           ;LCD_ModSauer.c: 126: ((RA5 = 1),(RA5=0));
   916  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   917  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   918  05CF  1685               	bsf	5,5	;volatile
   919  05D0  1285               	bcf	5,5	;volatile
   920                           
   921                           ;LCD_ModSauer.c: 127: _delay((unsigned long)((200)*(4000000/4000000.0)));
   922  05D1  3042               	movlw	66
   923  05D2  00A4               	movwf	??_lcd_init
   924  05D3                     u2077:	
   925  05D3  0BA4               	decfsz	??_lcd_init,f
   926  05D4  2DD3               	goto	u2077
   927  05D5  0000               	nop
   928                           
   929                           ;LCD_ModSauer.c: 128: PORTA = 2;
   930  05D6  3002               	movlw	2
   931  05D7  1283               	bcf	3,5	;RP0=0, select bank0
   932  05D8  1303               	bcf	3,6	;RP1=0, select bank0
   933  05D9  0085               	movwf	5	;volatile
   934                           
   935                           ;LCD_ModSauer.c: 129: ((RA5 = 1),(RA5=0));
   936  05DA  1685               	bsf	5,5	;volatile
   937  05DB  1285               	bcf	5,5	;volatile
   938                           
   939                           ;LCD_ModSauer.c: 131: lcd_write(0x28);
   940  05DC  3028               	movlw	40
   941  05DD  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
   942                           
   943                           ;LCD_ModSauer.c: 132: _delay((unsigned long)((50)*(4000000/4000000.0)));
   944  05E2  3010               	movlw	16
   945  05E3  1283               	bcf	3,5	;RP0=0, select bank0
   946  05E4  1303               	bcf	3,6	;RP1=0, select bank0
   947  05E5  00A4               	movwf	??_lcd_init
   948  05E6                     u2087:	
   949  05E6  0BA4               	decfsz	??_lcd_init,f
   950  05E7  2DE6               	goto	u2087
   951  05E8  0000               	nop
   952                           
   953                           ;LCD_ModSauer.c: 133: lcd_write(0x0C);
   954  05E9  300C               	movlw	12
   955  05EA  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
   956                           
   957                           ;LCD_ModSauer.c: 134: _delay((unsigned long)((50)*(4000000/4000000.0)));
   958  05EF  3010               	movlw	16
   959  05F0  1283               	bcf	3,5	;RP0=0, select bank0
   960  05F1  1303               	bcf	3,6	;RP1=0, select bank0
   961  05F2  00A4               	movwf	??_lcd_init
   962  05F3                     u2097:	
   963  05F3  0BA4               	decfsz	??_lcd_init,f
   964  05F4  2DF3               	goto	u2097
   965  05F5  0000               	nop
   966                           
   967                           ;LCD_ModSauer.c: 135: lcd_clear();
   968  05F6  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
   969                           
   970                           ;LCD_ModSauer.c: 136: _delay((unsigned long)((50)*(4000000/4000000.0)));
   971  05FB  3010               	movlw	16
   972  05FC  1283               	bcf	3,5	;RP0=0, select bank0
   973  05FD  1303               	bcf	3,6	;RP1=0, select bank0
   974  05FE  00A4               	movwf	??_lcd_init
   975  05FF                     u2107:	
   976  05FF  0BA4               	decfsz	??_lcd_init,f
   977  0600  2DFF               	goto	u2107
   978  0601  0000               	nop
   979                           
   980                           ;LCD_ModSauer.c: 137: lcd_write(0x6);
   981  0602  3006               	movlw	6
   982  0603  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
   983                           
   984                           ;LCD_ModSauer.c: 138: _delay((unsigned long)((50)*(4000000/4000000.0)));
   985  0608  3010               	movlw	16
   986  0609  1283               	bcf	3,5	;RP0=0, select bank0
   987  060A  1303               	bcf	3,6	;RP1=0, select bank0
   988  060B  00A4               	movwf	??_lcd_init
   989  060C                     u2117:	
   990  060C  0BA4               	decfsz	??_lcd_init,f
   991  060D  2E0C               	goto	u2117
   992  060E  0000               	nop
   993  060F  0008               	return
   994  0610                     __end_of_lcd_init:	
   995                           
   996                           	psect	text2
   997  0015                     __ptext2:	
   998 ;; *************** function _senhas *****************
   999 ;; Defined at:
  1000 ;;		line 150 in file "../EEPROM.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;		None               void
  1007 ;; Registers used:
  1008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0
  1016 ;;      Temps:          0       3       0       0       0
  1017 ;;      Totals:         0       3       0       0       0
  1018 ;;Total ram usage:        3 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    7
  1021 ;; This function calls:
  1022 ;;		_entrada_senhas
  1023 ;;		_lcd_clear
  1024 ;;		_printf
  1025 ;;		_lcd_write
  1026 ;;		_timer
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _senhas
  1034  0015                     _senhas:	
  1035                           
  1036                           ;EEPROM.c: 151: lcd_clear();
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in _senhas: [allreg]
  1040  0015  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
  1041                           
  1042                           ;EEPROM.c: 152: printf("Digite a senha:\nSenha:");
  1043  001A  3050               	movlw	(STR_14-__stringbase)& (0+255)
  1044  001B  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1045                           
  1046                           ;EEPROM.c: 153: RA4 = 0;
  1047  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0022  1205               	bcf	5,4	;volatile
  1050                           
  1051                           ;EEPROM.c: 154: lcd_write(0x0D);
  1052  0023  300D               	movlw	13
  1053  0024  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
  1054                           
  1055                           ;EEPROM.c: 155: RA4 = 1;
  1056  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1057  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1058  002B  1605               	bsf	5,4	;volatile
  1059                           
  1060                           ;EEPROM.c: 156: while(buffer==0xFF && foi==0)asm("sleep");
  1061  002C  2830               	goto	l2161
  1062  002D                     l2163:	
  1063  002D  1877               	btfsc	_foi/(0+8),_foi& (0+7)
  1064  002E  2836               	goto	l171
  1065  002F  0063               	sleep	;# 
  1066  0030                     l2161:	
  1067  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0031  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0032  0841               	movf	_buffer,w
  1070  0033  3AFF               	xorlw	255
  1071  0034  1903               	btfsc	3,2
  1072  0035  282D               	goto	l2163
  1073  0036                     l171:	
  1074                           
  1075                           ;EEPROM.c: 157: if(foi) return;
  1076  0036  1877               	btfsc	_foi/(0+8),_foi& (0+7)
  1077  0037  0008               	return
  1078                           
  1079                           ;EEPROM.c: 158: senha_1=buffer;
  1080  0038  0841               	movf	_buffer,w
  1081  0039  00BE               	movwf	??_senhas
  1082  003A  083E               	movf	??_senhas,w
  1083  003B  00C2               	movwf	_senha_1
  1084                           
  1085                           ;EEPROM.c: 159: printf("%d",buffer);
  1086  003C  0841               	movf	_buffer,w
  1087  003D  00BE               	movwf	??_senhas
  1088  003E  01BF               	clrf	??_senhas+1
  1089  003F  083E               	movf	??_senhas,w
  1090  0040  00AD               	movwf	?_printf
  1091  0041  083F               	movf	??_senhas+1,w
  1092  0042  00AE               	movwf	?_printf+1
  1093  0043  309D               	movlw	(STR_2-__stringbase)& (0+255)
  1094  0044  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1095                           
  1096                           ;EEPROM.c: 160: buffer=0xFF;
  1097  0049  30FF               	movlw	255
  1098  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1099  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1100  004C  00BE               	movwf	??_senhas
  1101  004D  083E               	movf	??_senhas,w
  1102  004E  00C1               	movwf	_buffer
  1103                           
  1104                           ;EEPROM.c: 161: while(buffer==0xFF && foi==0)asm("sleep");
  1105  004F  2853               	goto	l2173
  1106  0050                     l2175:	
  1107  0050  1877               	btfsc	_foi/(0+8),_foi& (0+7)
  1108  0051  2859               	goto	l178
  1109  0052  0063               	sleep	;# 
  1110  0053                     l2173:	
  1111  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0055  0841               	movf	_buffer,w
  1114  0056  3AFF               	xorlw	255
  1115  0057  1903               	btfsc	3,2
  1116  0058  2850               	goto	l2175
  1117  0059                     l178:	
  1118                           
  1119                           ;EEPROM.c: 162: if(foi) return;
  1120  0059  1877               	btfsc	_foi/(0+8),_foi& (0+7)
  1121  005A  0008               	return
  1122                           
  1123                           ;EEPROM.c: 163: senha_2=buffer;
  1124  005B  0841               	movf	_buffer,w
  1125  005C  00BE               	movwf	??_senhas
  1126  005D  083E               	movf	??_senhas,w
  1127  005E  00C3               	movwf	_senha_2
  1128                           
  1129                           ;EEPROM.c: 164: printf("%d",buffer);
  1130  005F  0841               	movf	_buffer,w
  1131  0060  00BE               	movwf	??_senhas
  1132  0061  01BF               	clrf	??_senhas+1
  1133  0062  083E               	movf	??_senhas,w
  1134  0063  00AD               	movwf	?_printf
  1135  0064  083F               	movf	??_senhas+1,w
  1136  0065  00AE               	movwf	?_printf+1
  1137  0066  309D               	movlw	(STR_2-__stringbase)& (0+255)
  1138  0067  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1139                           
  1140                           ;EEPROM.c: 165: buffer=0xFF;
  1141  006C  30FF               	movlw	255
  1142  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1143  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1144  006F  00BE               	movwf	??_senhas
  1145  0070  083E               	movf	??_senhas,w
  1146  0071  00C1               	movwf	_buffer
  1147                           
  1148                           ;EEPROM.c: 166: while(buffer==0xFF && foi==0)asm("sleep");
  1149  0072  2876               	goto	l2185
  1150  0073                     l2187:	
  1151  0073  1877               	btfsc	_foi/(0+8),_foi& (0+7)
  1152  0074  287C               	goto	l184
  1153  0075  0063               	sleep	;# 
  1154  0076                     l2185:	
  1155  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0078  0841               	movf	_buffer,w
  1158  0079  3AFF               	xorlw	255
  1159  007A  1903               	btfsc	3,2
  1160  007B  2873               	goto	l2187
  1161  007C                     l184:	
  1162                           
  1163                           ;EEPROM.c: 167: if(foi) return;
  1164  007C  1877               	btfsc	_foi/(0+8),_foi& (0+7)
  1165  007D  0008               	return
  1166                           
  1167                           ;EEPROM.c: 168: senha_3=buffer;
  1168  007E  0841               	movf	_buffer,w
  1169  007F  00BE               	movwf	??_senhas
  1170  0080  083E               	movf	??_senhas,w
  1171  0081  00C4               	movwf	_senha_3
  1172                           
  1173                           ;EEPROM.c: 169: printf("%d",buffer);
  1174  0082  0841               	movf	_buffer,w
  1175  0083  00BE               	movwf	??_senhas
  1176  0084  01BF               	clrf	??_senhas+1
  1177  0085  083E               	movf	??_senhas,w
  1178  0086  00AD               	movwf	?_printf
  1179  0087  083F               	movf	??_senhas+1,w
  1180  0088  00AE               	movwf	?_printf+1
  1181  0089  309D               	movlw	(STR_2-__stringbase)& (0+255)
  1182  008A  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1183                           
  1184                           ;EEPROM.c: 170: buffer=0xFF;
  1185  008F  30FF               	movlw	255
  1186  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0092  00BE               	movwf	??_senhas
  1189  0093  083E               	movf	??_senhas,w
  1190  0094  00C1               	movwf	_buffer
  1191                           
  1192                           ;EEPROM.c: 171: RA4 = 0;
  1193  0095  1205               	bcf	5,4	;volatile
  1194                           
  1195                           ;EEPROM.c: 172: lcd_write(0x0C);
  1196  0096  300C               	movlw	12
  1197  0097  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
  1198                           
  1199                           ;EEPROM.c: 173: RA4 = 1;
  1200  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1201  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1202  009E  1605               	bsf	5,4	;volatile
  1203                           
  1204                           ;EEPROM.c: 174: _delay((unsigned long)((500)*(4000000/4000.0)));
  1205  009F  3003               	movlw	3
  1206  00A0  00C0               	movwf	??_senhas+2
  1207  00A1  308A               	movlw	138
  1208  00A2  00BF               	movwf	??_senhas+1
  1209  00A3  3056               	movlw	86
  1210  00A4  00BE               	movwf	??_senhas
  1211  00A5                     u2127:	
  1212  00A5  0BBE               	decfsz	??_senhas,f
  1213  00A6  28A5               	goto	u2127
  1214  00A7  0BBF               	decfsz	??_senhas+1,f
  1215  00A8  28A5               	goto	u2127
  1216  00A9  0BC0               	decfsz	??_senhas+2,f
  1217  00AA  28A5               	goto	u2127
  1218  00AB  28AC               	nop2
  1219                           
  1220                           ;EEPROM.c: 175: EEADR=0x10;
  1221  00AC  3010               	movlw	16
  1222  00AD  1283               	bcf	3,5	;RP0=0, select bank2
  1223  00AE  1703               	bsf	3,6	;RP1=1, select bank2
  1224  00AF  008D               	movwf	13	;volatile
  1225                           
  1226                           ;EEPROM.c: 176: RD=1;
  1227  00B0  1683               	bsf	3,5	;RP0=1, select bank3
  1228  00B1  1703               	bsf	3,6	;RP1=1, select bank3
  1229  00B2  140C               	bsf	12,0	;volatile
  1230                           
  1231                           ;EEPROM.c: 177: _nop();
  1232  00B3  0000               	nop
  1233                           
  1234                           ;EEPROM.c: 178: senhar_1=EEDAT;
  1235  00B4  1283               	bcf	3,5	;RP0=0, select bank2
  1236  00B5  1703               	bsf	3,6	;RP1=1, select bank2
  1237  00B6  080C               	movf	12,w	;volatile
  1238  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1239  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1240  00B9  00BE               	movwf	??_senhas
  1241  00BA  083E               	movf	??_senhas,w
  1242  00BB  00C5               	movwf	_senhar_1
  1243                           
  1244                           ;EEPROM.c: 179: EEADR=0x11;
  1245  00BC  3011               	movlw	17
  1246  00BD  1283               	bcf	3,5	;RP0=0, select bank2
  1247  00BE  1703               	bsf	3,6	;RP1=1, select bank2
  1248  00BF  008D               	movwf	13	;volatile
  1249                           
  1250                           ;EEPROM.c: 180: RD=1;
  1251  00C0  1683               	bsf	3,5	;RP0=1, select bank3
  1252  00C1  1703               	bsf	3,6	;RP1=1, select bank3
  1253  00C2  140C               	bsf	12,0	;volatile
  1254                           
  1255                           ;EEPROM.c: 181: _nop();
  1256  00C3  0000               	nop
  1257                           
  1258                           ;EEPROM.c: 182: senhar_2=EEDAT;
  1259  00C4  1283               	bcf	3,5	;RP0=0, select bank2
  1260  00C5  1703               	bsf	3,6	;RP1=1, select bank2
  1261  00C6  080C               	movf	12,w	;volatile
  1262  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1263  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1264  00C9  00BE               	movwf	??_senhas
  1265  00CA  083E               	movf	??_senhas,w
  1266  00CB  00C6               	movwf	_senhar_2
  1267                           
  1268                           ;EEPROM.c: 183: EEADR=0x12;
  1269  00CC  3012               	movlw	18
  1270  00CD  1283               	bcf	3,5	;RP0=0, select bank2
  1271  00CE  1703               	bsf	3,6	;RP1=1, select bank2
  1272  00CF  008D               	movwf	13	;volatile
  1273                           
  1274                           ;EEPROM.c: 184: RD=1;
  1275  00D0  1683               	bsf	3,5	;RP0=1, select bank3
  1276  00D1  1703               	bsf	3,6	;RP1=1, select bank3
  1277  00D2  140C               	bsf	12,0	;volatile
  1278                           
  1279                           ;EEPROM.c: 185: _nop();
  1280  00D3  0000               	nop
  1281                           
  1282                           ;EEPROM.c: 186: senhar_3=EEDAT;
  1283  00D4  1283               	bcf	3,5	;RP0=0, select bank2
  1284  00D5  1703               	bsf	3,6	;RP1=1, select bank2
  1285  00D6  080C               	movf	12,w	;volatile
  1286  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1287  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1288  00D9  00BE               	movwf	??_senhas
  1289  00DA  083E               	movf	??_senhas,w
  1290  00DB  00C7               	movwf	_senhar_3
  1291                           
  1292                           ;EEPROM.c: 187: if((senha_1==senhar_1)&&(senha_2==senhar_2)&&(senha_3==senhar_3)){
  1293  00DC  0842               	movf	_senha_1,w
  1294  00DD  0645               	xorwf	_senhar_1,w
  1295  00DE  1D03               	skipz
  1296  00DF  28EF               	goto	l2243
  1297  00E0  0843               	movf	_senha_2,w
  1298  00E1  0646               	xorwf	_senhar_2,w
  1299  00E2  1D03               	skipz
  1300  00E3  28EF               	goto	l2243
  1301  00E4  0844               	movf	_senha_3,w
  1302  00E5  0647               	xorwf	_senhar_3,w
  1303  00E6  1D03               	skipz
  1304  00E7  28EF               	goto	l2243
  1305                           
  1306                           ;EEPROM.c: 188: RC4=0;
  1307  00E8  1207               	bcf	7,4	;volatile
  1308                           
  1309                           ;EEPROM.c: 189: RC5=0;
  1310  00E9  1287               	bcf	7,5	;volatile
  1311                           
  1312                           ;EEPROM.c: 190: RC7=0;
  1313  00EA  1387               	bcf	7,7	;volatile
  1314                           
  1315                           ;EEPROM.c: 191: RC6=0;
  1316  00EB  1307               	bcf	7,6	;volatile
  1317                           
  1318                           ;EEPROM.c: 192: RC4=1;
  1319  00EC  1607               	bsf	7,4	;volatile
  1320                           
  1321                           ;EEPROM.c: 193: tentativas=0;
  1322  00ED  01C9               	clrf	_tentativas
  1323                           
  1324                           ;EEPROM.c: 194: return;
  1325  00EE  0008               	return
  1326  00EF                     l2243:	
  1327                           ;EEPROM.c: 195: }
  1328                           
  1329                           
  1330                           ;EEPROM.c: 196: else{
  1331                           ;EEPROM.c: 197: senhar_1=0xFF;
  1332  00EF  30FF               	movlw	255
  1333  00F0  00BE               	movwf	??_senhas
  1334  00F1  083E               	movf	??_senhas,w
  1335  00F2  00C5               	movwf	_senhar_1
  1336                           
  1337                           ;EEPROM.c: 198: senhar_2=0xFF;
  1338  00F3  30FF               	movlw	255
  1339  00F4  00BE               	movwf	??_senhas
  1340  00F5  083E               	movf	??_senhas,w
  1341  00F6  00C6               	movwf	_senhar_2
  1342                           
  1343                           ;EEPROM.c: 199: senhar_3=0xFF;
  1344  00F7  30FF               	movlw	255
  1345  00F8  00BE               	movwf	??_senhas
  1346  00F9  083E               	movf	??_senhas,w
  1347  00FA  00C7               	movwf	_senhar_3
  1348                           
  1349                           ;EEPROM.c: 200: }
  1350                           ;EEPROM.c: 201: EEADR=0x20;
  1351  00FB  3020               	movlw	32
  1352  00FC  1283               	bcf	3,5	;RP0=0, select bank2
  1353  00FD  1703               	bsf	3,6	;RP1=1, select bank2
  1354  00FE  008D               	movwf	13	;volatile
  1355                           
  1356                           ;EEPROM.c: 202: RD=1;
  1357  00FF  1683               	bsf	3,5	;RP0=1, select bank3
  1358  0100  1703               	bsf	3,6	;RP1=1, select bank3
  1359  0101  140C               	bsf	12,0	;volatile
  1360                           
  1361                           ;EEPROM.c: 203: _nop();
  1362  0102  0000               	nop
  1363                           
  1364                           ;EEPROM.c: 204: senhar_1=EEDAT;
  1365  0103  1283               	bcf	3,5	;RP0=0, select bank2
  1366  0104  1703               	bsf	3,6	;RP1=1, select bank2
  1367  0105  080C               	movf	12,w	;volatile
  1368  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0108  00BE               	movwf	??_senhas
  1371  0109  083E               	movf	??_senhas,w
  1372  010A  00C5               	movwf	_senhar_1
  1373                           
  1374                           ;EEPROM.c: 205: EEADR=0x21;
  1375  010B  3021               	movlw	33
  1376  010C  1283               	bcf	3,5	;RP0=0, select bank2
  1377  010D  1703               	bsf	3,6	;RP1=1, select bank2
  1378  010E  008D               	movwf	13	;volatile
  1379                           
  1380                           ;EEPROM.c: 206: RD=1;
  1381  010F  1683               	bsf	3,5	;RP0=1, select bank3
  1382  0110  1703               	bsf	3,6	;RP1=1, select bank3
  1383  0111  140C               	bsf	12,0	;volatile
  1384                           
  1385                           ;EEPROM.c: 207: _nop();
  1386  0112  0000               	nop
  1387                           
  1388                           ;EEPROM.c: 208: senhar_2=EEDAT;
  1389  0113  1283               	bcf	3,5	;RP0=0, select bank2
  1390  0114  1703               	bsf	3,6	;RP1=1, select bank2
  1391  0115  080C               	movf	12,w	;volatile
  1392  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0118  00BE               	movwf	??_senhas
  1395  0119  083E               	movf	??_senhas,w
  1396  011A  00C6               	movwf	_senhar_2
  1397                           
  1398                           ;EEPROM.c: 209: EEADR=0x22;
  1399  011B  3022               	movlw	34
  1400  011C  1283               	bcf	3,5	;RP0=0, select bank2
  1401  011D  1703               	bsf	3,6	;RP1=1, select bank2
  1402  011E  008D               	movwf	13	;volatile
  1403                           
  1404                           ;EEPROM.c: 210: RD=1;
  1405  011F  1683               	bsf	3,5	;RP0=1, select bank3
  1406  0120  1703               	bsf	3,6	;RP1=1, select bank3
  1407  0121  140C               	bsf	12,0	;volatile
  1408                           
  1409                           ;EEPROM.c: 211: _nop();
  1410  0122  0000               	nop
  1411                           
  1412                           ;EEPROM.c: 212: senhar_3=EEDAT;
  1413  0123  1283               	bcf	3,5	;RP0=0, select bank2
  1414  0124  1703               	bsf	3,6	;RP1=1, select bank2
  1415  0125  080C               	movf	12,w	;volatile
  1416  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0128  00BE               	movwf	??_senhas
  1419  0129  083E               	movf	??_senhas,w
  1420  012A  00C7               	movwf	_senhar_3
  1421                           
  1422                           ;EEPROM.c: 213: if((senha_1==senhar_1)&&(senha_2==senhar_2)&&(senha_3==senhar_3)){
  1423  012B  0842               	movf	_senha_1,w
  1424  012C  0645               	xorwf	_senhar_1,w
  1425  012D  1D03               	skipz
  1426  012E  293E               	goto	l2269
  1427  012F  0843               	movf	_senha_2,w
  1428  0130  0646               	xorwf	_senhar_2,w
  1429  0131  1D03               	skipz
  1430  0132  293E               	goto	l2269
  1431  0133  0844               	movf	_senha_3,w
  1432  0134  0647               	xorwf	_senhar_3,w
  1433  0135  1D03               	skipz
  1434  0136  293E               	goto	l2269
  1435                           
  1436                           ;EEPROM.c: 214: RC4=0;
  1437  0137  1207               	bcf	7,4	;volatile
  1438                           
  1439                           ;EEPROM.c: 215: RC5=0;
  1440  0138  1287               	bcf	7,5	;volatile
  1441                           
  1442                           ;EEPROM.c: 216: RC7=0;
  1443  0139  1387               	bcf	7,7	;volatile
  1444                           
  1445                           ;EEPROM.c: 217: RC6=0;
  1446  013A  1307               	bcf	7,6	;volatile
  1447                           
  1448                           ;EEPROM.c: 218: RC6=1;
  1449  013B  1707               	bsf	7,6	;volatile
  1450                           
  1451                           ;EEPROM.c: 219: tentativas=0;
  1452  013C  01C9               	clrf	_tentativas
  1453                           
  1454                           ;EEPROM.c: 220: return;
  1455  013D  0008               	return
  1456  013E                     l2269:	
  1457                           ;EEPROM.c: 221: }
  1458                           
  1459                           
  1460                           ;EEPROM.c: 222: else{
  1461                           ;EEPROM.c: 223: senhar_1=0xFF;
  1462  013E  30FF               	movlw	255
  1463  013F  00BE               	movwf	??_senhas
  1464  0140  083E               	movf	??_senhas,w
  1465  0141  00C5               	movwf	_senhar_1
  1466                           
  1467                           ;EEPROM.c: 224: senhar_2=0xFF;
  1468  0142  30FF               	movlw	255
  1469  0143  00BE               	movwf	??_senhas
  1470  0144  083E               	movf	??_senhas,w
  1471  0145  00C6               	movwf	_senhar_2
  1472                           
  1473                           ;EEPROM.c: 225: senhar_3=0xFF;
  1474  0146  30FF               	movlw	255
  1475  0147  00BE               	movwf	??_senhas
  1476  0148  083E               	movf	??_senhas,w
  1477  0149  00C7               	movwf	_senhar_3
  1478                           
  1479                           ;EEPROM.c: 226: }
  1480                           ;EEPROM.c: 227: EEADR=0x30;
  1481  014A  3030               	movlw	48
  1482  014B  1283               	bcf	3,5	;RP0=0, select bank2
  1483  014C  1703               	bsf	3,6	;RP1=1, select bank2
  1484  014D  008D               	movwf	13	;volatile
  1485                           
  1486                           ;EEPROM.c: 228: RD=1;
  1487  014E  1683               	bsf	3,5	;RP0=1, select bank3
  1488  014F  1703               	bsf	3,6	;RP1=1, select bank3
  1489  0150  140C               	bsf	12,0	;volatile
  1490                           
  1491                           ;EEPROM.c: 229: _nop();
  1492  0151  0000               	nop
  1493                           
  1494                           ;EEPROM.c: 230: senhar_1=EEDAT;
  1495  0152  1283               	bcf	3,5	;RP0=0, select bank2
  1496  0153  1703               	bsf	3,6	;RP1=1, select bank2
  1497  0154  080C               	movf	12,w	;volatile
  1498  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0157  00BE               	movwf	??_senhas
  1501  0158  083E               	movf	??_senhas,w
  1502  0159  00C5               	movwf	_senhar_1
  1503                           
  1504                           ;EEPROM.c: 231: EEADR=0x31;
  1505  015A  3031               	movlw	49
  1506  015B  1283               	bcf	3,5	;RP0=0, select bank2
  1507  015C  1703               	bsf	3,6	;RP1=1, select bank2
  1508  015D  008D               	movwf	13	;volatile
  1509                           
  1510                           ;EEPROM.c: 232: RD=1;
  1511  015E  1683               	bsf	3,5	;RP0=1, select bank3
  1512  015F  1703               	bsf	3,6	;RP1=1, select bank3
  1513  0160  140C               	bsf	12,0	;volatile
  1514                           
  1515                           ;EEPROM.c: 233: _nop();
  1516  0161  0000               	nop
  1517                           
  1518                           ;EEPROM.c: 234: senhar_2=EEDAT;
  1519  0162  1283               	bcf	3,5	;RP0=0, select bank2
  1520  0163  1703               	bsf	3,6	;RP1=1, select bank2
  1521  0164  080C               	movf	12,w	;volatile
  1522  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0167  00BE               	movwf	??_senhas
  1525  0168  083E               	movf	??_senhas,w
  1526  0169  00C6               	movwf	_senhar_2
  1527                           
  1528                           ;EEPROM.c: 235: EEADR=0x32;
  1529  016A  3032               	movlw	50
  1530  016B  1283               	bcf	3,5	;RP0=0, select bank2
  1531  016C  1703               	bsf	3,6	;RP1=1, select bank2
  1532  016D  008D               	movwf	13	;volatile
  1533                           
  1534                           ;EEPROM.c: 236: RD=1;
  1535  016E  1683               	bsf	3,5	;RP0=1, select bank3
  1536  016F  1703               	bsf	3,6	;RP1=1, select bank3
  1537  0170  140C               	bsf	12,0	;volatile
  1538                           
  1539                           ;EEPROM.c: 237: _nop();
  1540  0171  0000               	nop
  1541                           
  1542                           ;EEPROM.c: 238: senhar_3=EEDAT;
  1543  0172  1283               	bcf	3,5	;RP0=0, select bank2
  1544  0173  1703               	bsf	3,6	;RP1=1, select bank2
  1545  0174  080C               	movf	12,w	;volatile
  1546  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0177  00BE               	movwf	??_senhas
  1549  0178  083E               	movf	??_senhas,w
  1550  0179  00C7               	movwf	_senhar_3
  1551                           
  1552                           ;EEPROM.c: 239: if((senha_1==senhar_1)&&(senha_2==senhar_2)&&(senha_3==senhar_3)){
  1553  017A  0842               	movf	_senha_1,w
  1554  017B  0645               	xorwf	_senhar_1,w
  1555  017C  1D03               	skipz
  1556  017D  298D               	goto	l2295
  1557  017E  0843               	movf	_senha_2,w
  1558  017F  0646               	xorwf	_senhar_2,w
  1559  0180  1D03               	skipz
  1560  0181  298D               	goto	l2295
  1561  0182  0844               	movf	_senha_3,w
  1562  0183  0647               	xorwf	_senhar_3,w
  1563  0184  1D03               	skipz
  1564  0185  298D               	goto	l2295
  1565                           
  1566                           ;EEPROM.c: 240: RC4=0;
  1567  0186  1207               	bcf	7,4	;volatile
  1568                           
  1569                           ;EEPROM.c: 241: RC5=0;
  1570  0187  1287               	bcf	7,5	;volatile
  1571                           
  1572                           ;EEPROM.c: 242: RC7=0;
  1573  0188  1387               	bcf	7,7	;volatile
  1574                           
  1575                           ;EEPROM.c: 243: RC6=0;
  1576  0189  1307               	bcf	7,6	;volatile
  1577                           
  1578                           ;EEPROM.c: 244: RC5=1;
  1579  018A  1687               	bsf	7,5	;volatile
  1580                           
  1581                           ;EEPROM.c: 245: tentativas=0;
  1582  018B  01C9               	clrf	_tentativas
  1583                           
  1584                           ;EEPROM.c: 246: return;
  1585  018C  0008               	return
  1586  018D                     l2295:	
  1587                           ;EEPROM.c: 247: }
  1588                           
  1589                           
  1590                           ;EEPROM.c: 248: else{
  1591                           ;EEPROM.c: 249: senhar_1=0xFF;
  1592  018D  30FF               	movlw	255
  1593  018E  00BE               	movwf	??_senhas
  1594  018F  083E               	movf	??_senhas,w
  1595  0190  00C5               	movwf	_senhar_1
  1596                           
  1597                           ;EEPROM.c: 250: senhar_2=0xFF;
  1598  0191  30FF               	movlw	255
  1599  0192  00BE               	movwf	??_senhas
  1600  0193  083E               	movf	??_senhas,w
  1601  0194  00C6               	movwf	_senhar_2
  1602                           
  1603                           ;EEPROM.c: 251: senhar_3=0xFF;
  1604  0195  30FF               	movlw	255
  1605  0196  00BE               	movwf	??_senhas
  1606  0197  083E               	movf	??_senhas,w
  1607  0198  00C7               	movwf	_senhar_3
  1608                           
  1609                           ;EEPROM.c: 252: }
  1610                           ;EEPROM.c: 253: lcd_clear();
  1611  0199  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
  1612                           
  1613                           ;EEPROM.c: 254: printf("Senha incorreta");
  1614  019E  3067               	movlw	(STR_18-__stringbase)& (0+255)
  1615  019F  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1616                           
  1617                           ;EEPROM.c: 255: RC4=0;
  1618  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1619  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1620  01A6  1207               	bcf	7,4	;volatile
  1621                           
  1622                           ;EEPROM.c: 256: RC5=0;
  1623  01A7  1287               	bcf	7,5	;volatile
  1624                           
  1625                           ;EEPROM.c: 257: RC7=0;
  1626  01A8  1387               	bcf	7,7	;volatile
  1627                           
  1628                           ;EEPROM.c: 258: RC6=0;
  1629  01A9  1307               	bcf	7,6	;volatile
  1630                           
  1631                           ;EEPROM.c: 259: tentativas++;
  1632  01AA  3001               	movlw	1
  1633  01AB  00BE               	movwf	??_senhas
  1634  01AC  083E               	movf	??_senhas,w
  1635  01AD  07C9               	addwf	_tentativas,f
  1636                           
  1637                           ;EEPROM.c: 260: if(tentativas==4){
  1638  01AE  0849               	movf	_tentativas,w
  1639  01AF  3A04               	xorlw	4
  1640  01B0  1D03               	skipz
  1641  01B1  29EA               	goto	l2339
  1642                           
  1643                           ;EEPROM.c: 261: printf("\nBloqueado!");
  1644  01B2  3086               	movlw	(STR_19-__stringbase)& (0+255)
  1645  01B3  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1646                           
  1647                           ;EEPROM.c: 262: tentativas=0;
  1648  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1649  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1650  01BA  01C9               	clrf	_tentativas
  1651                           
  1652                           ;EEPROM.c: 263: _delay((unsigned long)((500)*(4000000/4000.0)));
  1653  01BB  3003               	movlw	3
  1654  01BC  00C0               	movwf	??_senhas+2
  1655  01BD  308A               	movlw	138
  1656  01BE  00BF               	movwf	??_senhas+1
  1657  01BF  3056               	movlw	86
  1658  01C0  00BE               	movwf	??_senhas
  1659  01C1                     u2137:	
  1660  01C1  0BBE               	decfsz	??_senhas,f
  1661  01C2  29C1               	goto	u2137
  1662  01C3  0BBF               	decfsz	??_senhas+1,f
  1663  01C4  29C1               	goto	u2137
  1664  01C5  0BC0               	decfsz	??_senhas+2,f
  1665  01C6  29C1               	goto	u2137
  1666  01C7  29C8               	nop2
  1667                           
  1668                           ;EEPROM.c: 264: _delay((unsigned long)((500)*(4000000/4000.0)));
  1669  01C8  3003               	movlw	3
  1670  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1671  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1672  01CB  00C0               	movwf	??_senhas+2
  1673  01CC  308A               	movlw	138
  1674  01CD  00BF               	movwf	??_senhas+1
  1675  01CE  3056               	movlw	86
  1676  01CF  00BE               	movwf	??_senhas
  1677  01D0                     u2147:	
  1678  01D0  0BBE               	decfsz	??_senhas,f
  1679  01D1  29D0               	goto	u2147
  1680  01D2  0BBF               	decfsz	??_senhas+1,f
  1681  01D3  29D0               	goto	u2147
  1682  01D4  0BC0               	decfsz	??_senhas+2,f
  1683  01D5  29D0               	goto	u2147
  1684  01D6  29D7               	nop2
  1685                           
  1686                           ;EEPROM.c: 265: RC4=0;
  1687  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1688  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1689  01D9  1207               	bcf	7,4	;volatile
  1690                           
  1691                           ;EEPROM.c: 266: RC5=0;
  1692  01DA  1287               	bcf	7,5	;volatile
  1693                           
  1694                           ;EEPROM.c: 267: RC7=0;
  1695  01DB  1387               	bcf	7,7	;volatile
  1696                           
  1697                           ;EEPROM.c: 268: RC6=0;
  1698  01DC  1307               	bcf	7,6	;volatile
  1699                           
  1700                           ;EEPROM.c: 269: RC7=1;
  1701  01DD  1787               	bsf	7,7	;volatile
  1702                           
  1703                           ;EEPROM.c: 270: timer();
  1704  01DE  120A  118A  2671   	fcall	_timer
      +       120A  118A         
  1705                           
  1706                           ;EEPROM.c: 271: RC7=0;
  1707  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1708  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1709  01E5  1387               	bcf	7,7	;volatile
  1710                           
  1711                           ;EEPROM.c: 272: entrada_senhas();
  1712  01E6  120A  118A  220F   	fcall	_entrada_senhas
  1713                           
  1714                           ;EEPROM.c: 273: return;
  1715  01E9  0008               	return
  1716  01EA                     l2339:	
  1717                           
  1718                           ;EEPROM.c: 274: }
  1719                           ;EEPROM.c: 275: printf("\nTente de novo");
  1720  01EA  3077               	movlw	(STR_20-__stringbase)& (0+255)
  1721  01EB  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1722                           
  1723                           ;EEPROM.c: 276: _delay((unsigned long)((500)*(4000000/4000.0)));
  1724  01F0  3003               	movlw	3
  1725  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1726  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1727  01F3  00C0               	movwf	??_senhas+2
  1728  01F4  308A               	movlw	138
  1729  01F5  00BF               	movwf	??_senhas+1
  1730  01F6  3056               	movlw	86
  1731  01F7  00BE               	movwf	??_senhas
  1732  01F8                     u2157:	
  1733  01F8  0BBE               	decfsz	??_senhas,f
  1734  01F9  29F8               	goto	u2157
  1735  01FA  0BBF               	decfsz	??_senhas+1,f
  1736  01FB  29F8               	goto	u2157
  1737  01FC  0BC0               	decfsz	??_senhas+2,f
  1738  01FD  29F8               	goto	u2157
  1739  01FE  29FF               	nop2
  1740                           
  1741                           ;EEPROM.c: 277: _delay((unsigned long)((500)*(4000000/4000.0)));
  1742  01FF  3003               	movlw	3
  1743  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0202  00C0               	movwf	??_senhas+2
  1746  0203  308A               	movlw	138
  1747  0204  00BF               	movwf	??_senhas+1
  1748  0205  3056               	movlw	86
  1749  0206  00BE               	movwf	??_senhas
  1750  0207                     u2167:	
  1751  0207  0BBE               	decfsz	??_senhas,f
  1752  0208  2A07               	goto	u2167
  1753  0209  0BBF               	decfsz	??_senhas+1,f
  1754  020A  2A07               	goto	u2167
  1755  020B  0BC0               	decfsz	??_senhas+2,f
  1756  020C  2A07               	goto	u2167
  1757  020D  2A0E               	nop2
  1758  020E  0008               	return
  1759  020F                     __end_of_senhas:	
  1760                           
  1761                           	psect	text3
  1762  0671                     __ptext3:	
  1763 ;; *************** function _timer *****************
  1764 ;; Defined at:
  1765 ;;		line 137 in file "../EEPROM.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;		None               void
  1772 ;; Registers used:
  1773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0
  1781 ;;      Temps:          0       3       0       0       0
  1782 ;;      Totals:         0       3       0       0       0
  1783 ;;Total ram usage:        3 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    6
  1786 ;; This function calls:
  1787 ;;		_lcd_clear
  1788 ;;		_printf
  1789 ;; This function is called by:
  1790 ;;		_senhas
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _timer
  1796  0671                     _timer:	
  1797                           
  1798                           ;EEPROM.c: 138: GIE=0;
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _timer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1802  0671  138B               	bcf	11,7	;volatile
  1803  0672                     l2145:	
  1804                           ;EEPROM.c: 139: while(tempo<=30){
  1805                           
  1806  0672  301F               	movlw	31
  1807  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0675  0248               	subwf	_tempo,w
  1810  0676  1803               	btfsc	3,0
  1811  0677  2EB1               	goto	l2147
  1812                           
  1813                           ;EEPROM.c: 140: lcd_clear();
  1814  0678  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
  1815                           
  1816                           ;EEPROM.c: 141: printf("Espere %ds",tempo);
  1817  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1818  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1819  067F  0848               	movf	_tempo,w
  1820  0680  00BB               	movwf	??_timer
  1821  0681  01BC               	clrf	??_timer+1
  1822  0682  083B               	movf	??_timer,w
  1823  0683  00AD               	movwf	?_printf
  1824  0684  083C               	movf	??_timer+1,w
  1825  0685  00AE               	movwf	?_printf+1
  1826  0686  3092               	movlw	(STR_13-__stringbase)& (0+255)
  1827  0687  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1828                           
  1829                           ;EEPROM.c: 142: _delay((unsigned long)((500)*(4000000/4000.0)));
  1830  068C  3003               	movlw	3
  1831  068D  1283               	bcf	3,5	;RP0=0, select bank0
  1832  068E  1303               	bcf	3,6	;RP1=0, select bank0
  1833  068F  00BD               	movwf	??_timer+2
  1834  0690  308A               	movlw	138
  1835  0691  00BC               	movwf	??_timer+1
  1836  0692  3056               	movlw	86
  1837  0693  00BB               	movwf	??_timer
  1838  0694                     u2177:	
  1839  0694  0BBB               	decfsz	??_timer,f
  1840  0695  2E94               	goto	u2177
  1841  0696  0BBC               	decfsz	??_timer+1,f
  1842  0697  2E94               	goto	u2177
  1843  0698  0BBD               	decfsz	??_timer+2,f
  1844  0699  2E94               	goto	u2177
  1845  069A  2E9B               	nop2
  1846                           
  1847                           ;EEPROM.c: 143: _delay((unsigned long)((500)*(4000000/4000.0)));
  1848  069B  3003               	movlw	3
  1849  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1850  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1851  069E  00BD               	movwf	??_timer+2
  1852  069F  308A               	movlw	138
  1853  06A0  00BC               	movwf	??_timer+1
  1854  06A1  3056               	movlw	86
  1855  06A2  00BB               	movwf	??_timer
  1856  06A3                     u2187:	
  1857  06A3  0BBB               	decfsz	??_timer,f
  1858  06A4  2EA3               	goto	u2187
  1859  06A5  0BBC               	decfsz	??_timer+1,f
  1860  06A6  2EA3               	goto	u2187
  1861  06A7  0BBD               	decfsz	??_timer+2,f
  1862  06A8  2EA3               	goto	u2187
  1863  06A9  2EAA               	nop2
  1864                           
  1865                           ;EEPROM.c: 144: tempo++;
  1866  06AA  3001               	movlw	1
  1867  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1868  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1869  06AD  00BB               	movwf	??_timer
  1870  06AE  083B               	movf	??_timer,w
  1871  06AF  07C8               	addwf	_tempo,f
  1872  06B0  2E72               	goto	l2145
  1873  06B1                     l2147:	
  1874                           
  1875                           ;EEPROM.c: 145: }
  1876                           ;EEPROM.c: 146: tempo=0;
  1877  06B1  01C8               	clrf	_tempo
  1878                           
  1879                           ;EEPROM.c: 147: GIE=1;
  1880  06B2  178B               	bsf	11,7	;volatile
  1881  06B3  0008               	return
  1882  06B4                     __end_of_timer:	
  1883                           
  1884                           	psect	text4
  1885  020F                     __ptext4:	
  1886 ;; *************** function _entrada_senhas *****************
  1887 ;; Defined at:
  1888 ;;		line 55 in file "../EEPROM.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       3       0       0       0
  1905 ;;      Totals:         0       3       0       0       0
  1906 ;;Total ram usage:        3 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    6
  1909 ;; This function calls:
  1910 ;;		_write_ee
  1911 ;;		_lcd_clear
  1912 ;;		_printf
  1913 ;;		_lcd_write
  1914 ;; This function is called by:
  1915 ;;		_senhas
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _entrada_senhas
  1922  020F                     _entrada_senhas:	
  1923                           
  1924                           ;EEPROM.c: 56: INTE=0;
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _entrada_senhas: [allreg]
  1928  020F  120B               	bcf	11,4	;volatile
  1929                           
  1930                           ;EEPROM.c: 58: lcd_clear();
  1931  0210  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
  1932                           
  1933                           ;EEPROM.c: 59: printf("Novas senhas:\nSenha 1:");
  1934  0215  300B               	movlw	(STR_1-__stringbase)& (0+255)
  1935  0216  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1936                           
  1937                           ;EEPROM.c: 60: RA4 = 0;
  1938  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1939  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1940  021D  1205               	bcf	5,4	;volatile
  1941                           
  1942                           ;EEPROM.c: 61: lcd_write(0x0D);
  1943  021E  300D               	movlw	13
  1944  021F  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
  1945                           
  1946                           ;EEPROM.c: 62: RA4 = 1;
  1947  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0226  1605               	bsf	5,4	;volatile
  1950  0227                     l1967:	
  1951                           ;EEPROM.c: 63: while(buffer==0xFF) asm("sleep");
  1952                           
  1953  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0229  0841               	movf	_buffer,w
  1956  022A  3AFF               	xorlw	255
  1957  022B  1D03               	btfss	3,2
  1958  022C  2A2F               	goto	l1969
  1959  022D  0063               	sleep	;# 
  1960  022E  2A27               	goto	l1967
  1961  022F                     l1969:	
  1962                           
  1963                           ;EEPROM.c: 64: write_ee(0x10,buffer);
  1964  022F  0841               	movf	_buffer,w
  1965  0230  00BB               	movwf	??_entrada_senhas
  1966  0231  083B               	movf	??_entrada_senhas,w
  1967  0232  00F6               	movwf	?_write_ee
  1968  0233  3010               	movlw	16
  1969  0234  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  1970  0239                     l107:	
  1971                           ;EEPROM.c: 65: while(!ok)asm("sleep");
  1972                           
  1973  0239  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  1974  023A  2A3D               	goto	l109
  1975  023B  0063               	sleep	;# 
  1976  023C  2A39               	goto	l107
  1977  023D                     l109:	
  1978                           
  1979                           ;EEPROM.c: 66: ok=0;
  1980  023D  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  1981                           
  1982                           ;EEPROM.c: 67: printf("%d",buffer);
  1983  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1984  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0240  0841               	movf	_buffer,w
  1986  0241  00BB               	movwf	??_entrada_senhas
  1987  0242  01BC               	clrf	??_entrada_senhas+1
  1988  0243  083B               	movf	??_entrada_senhas,w
  1989  0244  00AD               	movwf	?_printf
  1990  0245  083C               	movf	??_entrada_senhas+1,w
  1991  0246  00AE               	movwf	?_printf+1
  1992  0247  309D               	movlw	(STR_2-__stringbase)& (0+255)
  1993  0248  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  1994                           
  1995                           ;EEPROM.c: 68: buffer=0xFF;
  1996  024D  30FF               	movlw	255
  1997  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1998  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0250  00BB               	movwf	??_entrada_senhas
  2000  0251  083B               	movf	??_entrada_senhas,w
  2001  0252  00C1               	movwf	_buffer
  2002  0253                     l1975:	
  2003                           ;EEPROM.c: 69: while(buffer==0xFF)asm("sleep");
  2004                           
  2005  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0255  0841               	movf	_buffer,w
  2008  0256  3AFF               	xorlw	255
  2009  0257  1D03               	btfss	3,2
  2010  0258  2A5B               	goto	l1977
  2011  0259  0063               	sleep	;# 
  2012  025A  2A53               	goto	l1975
  2013  025B                     l1977:	
  2014                           
  2015                           ;EEPROM.c: 70: write_ee(0x11,buffer);
  2016  025B  0841               	movf	_buffer,w
  2017  025C  00BB               	movwf	??_entrada_senhas
  2018  025D  083B               	movf	??_entrada_senhas,w
  2019  025E  00F6               	movwf	?_write_ee
  2020  025F  3011               	movlw	17
  2021  0260  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2022  0265                     l113:	
  2023                           ;EEPROM.c: 71: while(!ok)asm("sleep");
  2024                           
  2025  0265  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2026  0266  2A69               	goto	l115
  2027  0267  0063               	sleep	;# 
  2028  0268  2A65               	goto	l113
  2029  0269                     l115:	
  2030                           
  2031                           ;EEPROM.c: 72: ok=0;
  2032  0269  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2033                           
  2034                           ;EEPROM.c: 73: printf("%d",buffer);
  2035  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2036  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2037  026C  0841               	movf	_buffer,w
  2038  026D  00BB               	movwf	??_entrada_senhas
  2039  026E  01BC               	clrf	??_entrada_senhas+1
  2040  026F  083B               	movf	??_entrada_senhas,w
  2041  0270  00AD               	movwf	?_printf
  2042  0271  083C               	movf	??_entrada_senhas+1,w
  2043  0272  00AE               	movwf	?_printf+1
  2044  0273  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2045  0274  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2046                           
  2047                           ;EEPROM.c: 74: buffer=0xFF;
  2048  0279  30FF               	movlw	255
  2049  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2050  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2051  027C  00BB               	movwf	??_entrada_senhas
  2052  027D  083B               	movf	??_entrada_senhas,w
  2053  027E  00C1               	movwf	_buffer
  2054  027F                     l1983:	
  2055                           ;EEPROM.c: 75: while(buffer==0xFF)asm("sleep");
  2056                           
  2057  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0281  0841               	movf	_buffer,w
  2060  0282  3AFF               	xorlw	255
  2061  0283  1D03               	btfss	3,2
  2062  0284  2A87               	goto	l1985
  2063  0285  0063               	sleep	;# 
  2064  0286  2A7F               	goto	l1983
  2065  0287                     l1985:	
  2066                           
  2067                           ;EEPROM.c: 76: write_ee(0x12,buffer);
  2068  0287  0841               	movf	_buffer,w
  2069  0288  00BB               	movwf	??_entrada_senhas
  2070  0289  083B               	movf	??_entrada_senhas,w
  2071  028A  00F6               	movwf	?_write_ee
  2072  028B  3012               	movlw	18
  2073  028C  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2074  0291                     l119:	
  2075                           ;EEPROM.c: 77: while(!ok)asm("sleep");
  2076                           
  2077  0291  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2078  0292  2A95               	goto	l121
  2079  0293  0063               	sleep	;# 
  2080  0294  2A91               	goto	l119
  2081  0295                     l121:	
  2082                           
  2083                           ;EEPROM.c: 78: ok=0;
  2084  0295  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2085                           
  2086                           ;EEPROM.c: 79: printf("%d",buffer);
  2087  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0298  0841               	movf	_buffer,w
  2090  0299  00BB               	movwf	??_entrada_senhas
  2091  029A  01BC               	clrf	??_entrada_senhas+1
  2092  029B  083B               	movf	??_entrada_senhas,w
  2093  029C  00AD               	movwf	?_printf
  2094  029D  083C               	movf	??_entrada_senhas+1,w
  2095  029E  00AE               	movwf	?_printf+1
  2096  029F  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2097  02A0  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2098                           
  2099                           ;EEPROM.c: 80: buffer=0xFF;
  2100  02A5  30FF               	movlw	255
  2101  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2102  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2103  02A8  00BB               	movwf	??_entrada_senhas
  2104  02A9  083B               	movf	??_entrada_senhas,w
  2105  02AA  00C1               	movwf	_buffer
  2106                           
  2107                           ;EEPROM.c: 82: _delay((unsigned long)((500)*(4000000/4000.0)));
  2108  02AB  3003               	movlw	3
  2109  02AC  00BD               	movwf	??_entrada_senhas+2
  2110  02AD  308A               	movlw	138
  2111  02AE  00BC               	movwf	??_entrada_senhas+1
  2112  02AF  3056               	movlw	86
  2113  02B0  00BB               	movwf	??_entrada_senhas
  2114  02B1                     u2197:	
  2115  02B1  0BBB               	decfsz	??_entrada_senhas,f
  2116  02B2  2AB1               	goto	u2197
  2117  02B3  0BBC               	decfsz	??_entrada_senhas+1,f
  2118  02B4  2AB1               	goto	u2197
  2119  02B5  0BBD               	decfsz	??_entrada_senhas+2,f
  2120  02B6  2AB1               	goto	u2197
  2121  02B7  2AB8               	nop2
  2122                           
  2123                           ;EEPROM.c: 84: lcd_clear();
  2124  02B8  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
  2125                           
  2126                           ;EEPROM.c: 86: printf("Novas senhas:\nSenha 2:");
  2127  02BD  3022               	movlw	(STR_5-__stringbase)& (0+255)
  2128  02BE  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2129  02C3                     l1997:	
  2130                           ;EEPROM.c: 87: while(buffer==0xFF)asm("sleep");
  2131                           
  2132  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2133  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2134  02C5  0841               	movf	_buffer,w
  2135  02C6  3AFF               	xorlw	255
  2136  02C7  1D03               	btfss	3,2
  2137  02C8  2ACB               	goto	l1999
  2138  02C9  0063               	sleep	;# 
  2139  02CA  2AC3               	goto	l1997
  2140  02CB                     l1999:	
  2141                           
  2142                           ;EEPROM.c: 88: write_ee(0x20,buffer);
  2143  02CB  0841               	movf	_buffer,w
  2144  02CC  00BB               	movwf	??_entrada_senhas
  2145  02CD  083B               	movf	??_entrada_senhas,w
  2146  02CE  00F6               	movwf	?_write_ee
  2147  02CF  3020               	movlw	32
  2148  02D0  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2149  02D5                     l125:	
  2150                           ;EEPROM.c: 89: while(!ok)asm("sleep");
  2151                           
  2152  02D5  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2153  02D6  2AD9               	goto	l127
  2154  02D7  0063               	sleep	;# 
  2155  02D8  2AD5               	goto	l125
  2156  02D9                     l127:	
  2157                           
  2158                           ;EEPROM.c: 90: ok=0;
  2159  02D9  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2160                           
  2161                           ;EEPROM.c: 91: printf("%d",buffer);
  2162  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2163  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2164  02DC  0841               	movf	_buffer,w
  2165  02DD  00BB               	movwf	??_entrada_senhas
  2166  02DE  01BC               	clrf	??_entrada_senhas+1
  2167  02DF  083B               	movf	??_entrada_senhas,w
  2168  02E0  00AD               	movwf	?_printf
  2169  02E1  083C               	movf	??_entrada_senhas+1,w
  2170  02E2  00AE               	movwf	?_printf+1
  2171  02E3  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2172  02E4  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2173                           
  2174                           ;EEPROM.c: 92: buffer=0xFF;
  2175  02E9  30FF               	movlw	255
  2176  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2177  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2178  02EC  00BB               	movwf	??_entrada_senhas
  2179  02ED  083B               	movf	??_entrada_senhas,w
  2180  02EE  00C1               	movwf	_buffer
  2181  02EF                     l2005:	
  2182                           ;EEPROM.c: 93: while(buffer==0xFF)asm("sleep");
  2183                           
  2184  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2185  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2186  02F1  0841               	movf	_buffer,w
  2187  02F2  3AFF               	xorlw	255
  2188  02F3  1D03               	btfss	3,2
  2189  02F4  2AF7               	goto	l2007
  2190  02F5  0063               	sleep	;# 
  2191  02F6  2AEF               	goto	l2005
  2192  02F7                     l2007:	
  2193                           
  2194                           ;EEPROM.c: 94: write_ee(0x21,buffer);
  2195  02F7  0841               	movf	_buffer,w
  2196  02F8  00BB               	movwf	??_entrada_senhas
  2197  02F9  083B               	movf	??_entrada_senhas,w
  2198  02FA  00F6               	movwf	?_write_ee
  2199  02FB  3021               	movlw	33
  2200  02FC  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2201  0301                     l131:	
  2202                           ;EEPROM.c: 95: while(!ok)asm("sleep");
  2203                           
  2204  0301  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2205  0302  2B05               	goto	l133
  2206  0303  0063               	sleep	;# 
  2207  0304  2B01               	goto	l131
  2208  0305                     l133:	
  2209                           
  2210                           ;EEPROM.c: 96: ok=0;
  2211  0305  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2212                           
  2213                           ;EEPROM.c: 97: printf("%d",buffer);
  2214  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0308  0841               	movf	_buffer,w
  2217  0309  00BB               	movwf	??_entrada_senhas
  2218  030A  01BC               	clrf	??_entrada_senhas+1
  2219  030B  083B               	movf	??_entrada_senhas,w
  2220  030C  00AD               	movwf	?_printf
  2221  030D  083C               	movf	??_entrada_senhas+1,w
  2222  030E  00AE               	movwf	?_printf+1
  2223  030F  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2224  0310  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2225                           
  2226                           ;EEPROM.c: 98: buffer=0xFF;
  2227  0315  30FF               	movlw	255
  2228  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0318  00BB               	movwf	??_entrada_senhas
  2231  0319  083B               	movf	??_entrada_senhas,w
  2232  031A  00C1               	movwf	_buffer
  2233  031B                     l2013:	
  2234                           ;EEPROM.c: 99: while(buffer==0xFF)asm("sleep");
  2235                           
  2236  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2237  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2238  031D  0841               	movf	_buffer,w
  2239  031E  3AFF               	xorlw	255
  2240  031F  1D03               	btfss	3,2
  2241  0320  2B23               	goto	l2015
  2242  0321  0063               	sleep	;# 
  2243  0322  2B1B               	goto	l2013
  2244  0323                     l2015:	
  2245                           
  2246                           ;EEPROM.c: 100: write_ee(0x22,buffer);
  2247  0323  0841               	movf	_buffer,w
  2248  0324  00BB               	movwf	??_entrada_senhas
  2249  0325  083B               	movf	??_entrada_senhas,w
  2250  0326  00F6               	movwf	?_write_ee
  2251  0327  3022               	movlw	34
  2252  0328  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2253  032D                     l137:	
  2254                           ;EEPROM.c: 101: while(!ok)asm("sleep");
  2255                           
  2256  032D  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2257  032E  2B31               	goto	l139
  2258  032F  0063               	sleep	;# 
  2259  0330  2B2D               	goto	l137
  2260  0331                     l139:	
  2261                           
  2262                           ;EEPROM.c: 102: ok=0;
  2263  0331  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2264                           
  2265                           ;EEPROM.c: 103: printf("%d",buffer);
  2266  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0334  0841               	movf	_buffer,w
  2269  0335  00BB               	movwf	??_entrada_senhas
  2270  0336  01BC               	clrf	??_entrada_senhas+1
  2271  0337  083B               	movf	??_entrada_senhas,w
  2272  0338  00AD               	movwf	?_printf
  2273  0339  083C               	movf	??_entrada_senhas+1,w
  2274  033A  00AE               	movwf	?_printf+1
  2275  033B  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2276  033C  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2277                           
  2278                           ;EEPROM.c: 104: buffer=0xFF;
  2279  0341  30FF               	movlw	255
  2280  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0344  00BB               	movwf	??_entrada_senhas
  2283  0345  083B               	movf	??_entrada_senhas,w
  2284  0346  00C1               	movwf	_buffer
  2285                           
  2286                           ;EEPROM.c: 105: _delay((unsigned long)((500)*(4000000/4000.0)));
  2287  0347  3003               	movlw	3
  2288  0348  00BD               	movwf	??_entrada_senhas+2
  2289  0349  308A               	movlw	138
  2290  034A  00BC               	movwf	??_entrada_senhas+1
  2291  034B  3056               	movlw	86
  2292  034C  00BB               	movwf	??_entrada_senhas
  2293  034D                     u2207:	
  2294  034D  0BBB               	decfsz	??_entrada_senhas,f
  2295  034E  2B4D               	goto	u2207
  2296  034F  0BBC               	decfsz	??_entrada_senhas+1,f
  2297  0350  2B4D               	goto	u2207
  2298  0351  0BBD               	decfsz	??_entrada_senhas+2,f
  2299  0352  2B4D               	goto	u2207
  2300  0353  2B54               	nop2
  2301                           
  2302                           ;EEPROM.c: 107: lcd_clear();
  2303  0354  120A  118A  27C8   	fcall	_lcd_clear
      +       120A  118A         
  2304                           
  2305                           ;EEPROM.c: 109: printf("Novas senhas:\nSenha 3:");
  2306  0359  3039               	movlw	(STR_9-__stringbase)& (0+255)
  2307  035A  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2308  035F                     l2027:	
  2309                           ;EEPROM.c: 110: while(buffer==0xFF)asm("sleep");
  2310                           
  2311  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0361  0841               	movf	_buffer,w
  2314  0362  3AFF               	xorlw	255
  2315  0363  1D03               	btfss	3,2
  2316  0364  2B67               	goto	l2029
  2317  0365  0063               	sleep	;# 
  2318  0366  2B5F               	goto	l2027
  2319  0367                     l2029:	
  2320                           
  2321                           ;EEPROM.c: 111: write_ee(0x30,buffer);
  2322  0367  0841               	movf	_buffer,w
  2323  0368  00BB               	movwf	??_entrada_senhas
  2324  0369  083B               	movf	??_entrada_senhas,w
  2325  036A  00F6               	movwf	?_write_ee
  2326  036B  3030               	movlw	48
  2327  036C  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2328  0371                     l143:	
  2329                           ;EEPROM.c: 112: while(!ok)asm("sleep");
  2330                           
  2331  0371  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2332  0372  2B75               	goto	l145
  2333  0373  0063               	sleep	;# 
  2334  0374  2B71               	goto	l143
  2335  0375                     l145:	
  2336                           
  2337                           ;EEPROM.c: 113: ok=0;
  2338  0375  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2339                           
  2340                           ;EEPROM.c: 114: printf("%d",buffer);
  2341  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0378  0841               	movf	_buffer,w
  2344  0379  00BB               	movwf	??_entrada_senhas
  2345  037A  01BC               	clrf	??_entrada_senhas+1
  2346  037B  083B               	movf	??_entrada_senhas,w
  2347  037C  00AD               	movwf	?_printf
  2348  037D  083C               	movf	??_entrada_senhas+1,w
  2349  037E  00AE               	movwf	?_printf+1
  2350  037F  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2351  0380  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2352                           
  2353                           ;EEPROM.c: 115: buffer=0xFF;
  2354  0385  30FF               	movlw	255
  2355  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0388  00BB               	movwf	??_entrada_senhas
  2358  0389  083B               	movf	??_entrada_senhas,w
  2359  038A  00C1               	movwf	_buffer
  2360  038B                     l2035:	
  2361                           ;EEPROM.c: 116: while(buffer==0xFF)asm("sleep");
  2362                           
  2363  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2364  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2365  038D  0841               	movf	_buffer,w
  2366  038E  3AFF               	xorlw	255
  2367  038F  1D03               	btfss	3,2
  2368  0390  2B93               	goto	l2037
  2369  0391  0063               	sleep	;# 
  2370  0392  2B8B               	goto	l2035
  2371  0393                     l2037:	
  2372                           
  2373                           ;EEPROM.c: 117: write_ee(0x31,buffer);
  2374  0393  0841               	movf	_buffer,w
  2375  0394  00BB               	movwf	??_entrada_senhas
  2376  0395  083B               	movf	??_entrada_senhas,w
  2377  0396  00F6               	movwf	?_write_ee
  2378  0397  3031               	movlw	49
  2379  0398  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2380  039D                     l149:	
  2381                           ;EEPROM.c: 118: while(!ok)asm("sleep");
  2382                           
  2383  039D  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2384  039E  2BA1               	goto	l151
  2385  039F  0063               	sleep	;# 
  2386  03A0  2B9D               	goto	l149
  2387  03A1                     l151:	
  2388                           
  2389                           ;EEPROM.c: 119: ok=0;
  2390  03A1  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2391                           
  2392                           ;EEPROM.c: 120: printf("%d",buffer);
  2393  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2394  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2395  03A4  0841               	movf	_buffer,w
  2396  03A5  00BB               	movwf	??_entrada_senhas
  2397  03A6  01BC               	clrf	??_entrada_senhas+1
  2398  03A7  083B               	movf	??_entrada_senhas,w
  2399  03A8  00AD               	movwf	?_printf
  2400  03A9  083C               	movf	??_entrada_senhas+1,w
  2401  03AA  00AE               	movwf	?_printf+1
  2402  03AB  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2403  03AC  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2404                           
  2405                           ;EEPROM.c: 121: buffer=0xFF;
  2406  03B1  30FF               	movlw	255
  2407  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2408  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2409  03B4  00BB               	movwf	??_entrada_senhas
  2410  03B5  083B               	movf	??_entrada_senhas,w
  2411  03B6  00C1               	movwf	_buffer
  2412  03B7                     l2043:	
  2413                           ;EEPROM.c: 122: while(buffer==0xFF)asm("sleep");
  2414                           
  2415  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2416  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2417  03B9  0841               	movf	_buffer,w
  2418  03BA  3AFF               	xorlw	255
  2419  03BB  1D03               	btfss	3,2
  2420  03BC  2BBF               	goto	l2045
  2421  03BD  0063               	sleep	;# 
  2422  03BE  2BB7               	goto	l2043
  2423  03BF                     l2045:	
  2424                           
  2425                           ;EEPROM.c: 123: write_ee(0x32,buffer);
  2426  03BF  0841               	movf	_buffer,w
  2427  03C0  00BB               	movwf	??_entrada_senhas
  2428  03C1  083B               	movf	??_entrada_senhas,w
  2429  03C2  00F6               	movwf	?_write_ee
  2430  03C3  3032               	movlw	50
  2431  03C4  120A  118A  27AB   	fcall	_write_ee
      +       120A  118A         
  2432  03C9                     l155:	
  2433                           ;EEPROM.c: 124: while(!ok)asm("sleep");
  2434                           
  2435  03C9  18F7               	btfsc	_ok/(0+8),_ok& (0+7)
  2436  03CA  2BCD               	goto	l157
  2437  03CB  0063               	sleep	;# 
  2438  03CC  2BC9               	goto	l155
  2439  03CD                     l157:	
  2440                           
  2441                           ;EEPROM.c: 125: ok=0;
  2442  03CD  10F7               	bcf	_ok/(0+8),_ok& (0+7)
  2443                           
  2444                           ;EEPROM.c: 126: printf("%d",buffer);
  2445  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2446  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2447  03D0  0841               	movf	_buffer,w
  2448  03D1  00BB               	movwf	??_entrada_senhas
  2449  03D2  01BC               	clrf	??_entrada_senhas+1
  2450  03D3  083B               	movf	??_entrada_senhas,w
  2451  03D4  00AD               	movwf	?_printf
  2452  03D5  083C               	movf	??_entrada_senhas+1,w
  2453  03D6  00AE               	movwf	?_printf+1
  2454  03D7  309D               	movlw	(STR_2-__stringbase)& (0+255)
  2455  03D8  120A  118A  23FC   	fcall	_printf
      +       120A  118A         
  2456                           
  2457                           ;EEPROM.c: 127: buffer=0xFF;
  2458  03DD  30FF               	movlw	255
  2459  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2460  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2461  03E0  00BB               	movwf	??_entrada_senhas
  2462  03E1  083B               	movf	??_entrada_senhas,w
  2463  03E2  00C1               	movwf	_buffer
  2464                           
  2465                           ;EEPROM.c: 128: RA4 = 0;
  2466  03E3  1205               	bcf	5,4	;volatile
  2467                           
  2468                           ;EEPROM.c: 129: lcd_write(0x0C);
  2469  03E4  300C               	movlw	12
  2470  03E5  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
  2471                           
  2472                           ;EEPROM.c: 130: RA4 = 1;
  2473  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2474  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2475  03EC  1605               	bsf	5,4	;volatile
  2476                           
  2477                           ;EEPROM.c: 131: _delay((unsigned long)((500)*(4000000/4000.0)));
  2478  03ED  3003               	movlw	3
  2479  03EE  00BD               	movwf	??_entrada_senhas+2
  2480  03EF  308A               	movlw	138
  2481  03F0  00BC               	movwf	??_entrada_senhas+1
  2482  03F1  3056               	movlw	86
  2483  03F2  00BB               	movwf	??_entrada_senhas
  2484  03F3                     u2217:	
  2485  03F3  0BBB               	decfsz	??_entrada_senhas,f
  2486  03F4  2BF3               	goto	u2217
  2487  03F5  0BBC               	decfsz	??_entrada_senhas+1,f
  2488  03F6  2BF3               	goto	u2217
  2489  03F7  0BBD               	decfsz	??_entrada_senhas+2,f
  2490  03F8  2BF3               	goto	u2217
  2491  03F9  2BFA               	nop2
  2492                           
  2493                           ;EEPROM.c: 133: INTE=1;
  2494  03FA  160B               	bsf	11,4	;volatile
  2495  03FB  0008               	return
  2496  03FC                     __end_of_entrada_senhas:	
  2497                           
  2498                           	psect	text5
  2499  03FC                     __ptext5:	
  2500 ;; *************** function _printf *****************
  2501 ;; Defined at:
  2502 ;;		line 465 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  f               1    wreg     PTR const unsigned char 
  2505 ;;		 -> STR_20(15), STR_19(12), STR_18(16), STR_17(3), 
  2506 ;;		 -> STR_16(3), STR_15(3), STR_14(23), STR_13(11), 
  2507 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(23), 
  2508 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
  2509 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(23), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  2512 ;;		 -> STR_20(15), STR_19(12), STR_18(16), STR_17(3), 
  2513 ;;		 -> STR_16(3), STR_15(3), STR_14(23), STR_13(11), 
  2514 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(23), 
  2515 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
  2516 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(23), 
  2517 ;;  _val            4   22[BANK0 ] struct .
  2518 ;;  c               1   26[BANK0 ] char 
  2519 ;;  prec            1   21[BANK0 ] char 
  2520 ;;  flag            1   19[BANK0 ] unsigned char 
  2521 ;;  ap              1   18[BANK0 ] PTR void [1]
  2522 ;;		 -> ?_printf(2), 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2   13[BANK0 ] int 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       2       0       0       0
  2533 ;;      Locals:         0       9       0       0       0
  2534 ;;      Temps:          0       3       0       0       0
  2535 ;;      Totals:         0      14       0       0       0
  2536 ;;Total ram usage:       14 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    5
  2539 ;; This function calls:
  2540 ;;		_putch
  2541 ;;		___lwdiv
  2542 ;;		___lwmod
  2543 ;; This function is called by:
  2544 ;;		_entrada_senhas
  2545 ;;		_timer
  2546 ;;		_senhas
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _printf
  2552  03FC                     _printf:	
  2553                           
  2554                           ;incstack = 0
  2555 ;; using string table level
  2556                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2557                           ;printf@f stored from wreg
  2558  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2559  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2560  03FE  00B4               	movwf	printf@f
  2561                           
  2562                           ;doprnt.c: 466: va_list ap;
  2563                           ;doprnt.c: 499: signed char c;
  2564                           ;doprnt.c: 506: signed char prec;
  2565                           ;doprnt.c: 508: unsigned char flag;
  2566                           ;doprnt.c: 527: union {
  2567                           ;doprnt.c: 528: unsigned int _val;
  2568                           ;doprnt.c: 529: struct {
  2569                           ;doprnt.c: 530: const char * _cp;
  2570                           ;doprnt.c: 531: unsigned _len;
  2571                           ;doprnt.c: 532: } _str;
  2572                           ;doprnt.c: 533: } _val;
  2573                           ;doprnt.c: 542: *ap = __va_start();
  2574  03FF  302D               	movlw	?_printf& (0+255)
  2575  0400  00AF               	movwf	??_printf
  2576  0401  082F               	movf	??_printf,w
  2577  0402  00B2               	movwf	printf@ap
  2578  0403                     l2113:	
  2579                           ;doprnt.c: 545: while(c = *f++) {
  2580                           
  2581  0403  3001               	movlw	1
  2582  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0406  07B4               	addwf	printf@f,f
  2585  0407  30FF               	movlw	-1
  2586  0408  0734               	addwf	printf@f,w
  2587  0409  0084               	movwf	4
  2588  040A  120A  118A  2500   	fcall	stringdir
      +       120A  118A         
  2589  040F  00AF               	movwf	??_printf
  2590  0410  082F               	movf	??_printf,w
  2591  0411  00BA               	movwf	printf@c
  2592  0412  08BA               	movf	printf@c,f
  2593  0413  1903               	btfsc	3,2
  2594  0414  0008               	return
  2595                           
  2596                           ;doprnt.c: 547: if(c != '%')
  2597  0415  083A               	movf	printf@c,w
  2598  0416  3A25               	xorlw	37
  2599  0417  1903               	skipnz
  2600  0418  2C20               	goto	l2075
  2601                           
  2602                           ;doprnt.c: 549: {
  2603                           ;doprnt.c: 550: (putch(c) );
  2604  0419  083A               	movf	printf@c,w
  2605  041A  120A  118A  24DD   	fcall	_putch
      +       120A  118A         
  2606                           
  2607                           ;doprnt.c: 551: continue;
  2608  041F  2C03               	goto	l2113
  2609  0420                     l2075:	
  2610                           
  2611                           ;doprnt.c: 552: }
  2612                           ;doprnt.c: 557: flag = 0;
  2613  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0422  01B3               	clrf	printf@flag
  2616                           
  2617                           ;doprnt.c: 831: }
  2618                           
  2619                           ;doprnt.c: 822: continue;
  2620                           
  2621                           ;doprnt.c: 811: default:
  2622                           
  2623                           ;doprnt.c: 707: case 'i':
  2624                           ;doprnt.c: 708: break;
  2625                           
  2626                           ;doprnt.c: 706: case 'd':
  2627                           
  2628                           ;doprnt.c: 647: goto alldone;
  2629                           
  2630                           ;doprnt.c: 646: case 0:
  2631                           
  2632                           ;doprnt.c: 644: switch(c = *f++) {
  2633  0423  3001               	movlw	1
  2634  0424  07B4               	addwf	printf@f,f
  2635  0425  30FF               	movlw	-1
  2636  0426  0734               	addwf	printf@f,w
  2637  0427  0084               	movwf	4
  2638  0428  120A  118A  2500   	fcall	stringdir
      +       120A  118A         
  2639  042D  00BA               	movwf	printf@c
  2640                           
  2641                           ; Switch size 1, requested type "space"
  2642                           ; Number of cases is 3, Range of values is 0 to 105
  2643                           ; switch strategies available:
  2644                           ; Name         Instructions Cycles
  2645                           ; simple_byte           10     6 (average)
  2646                           ; jumptable            260     6 (fixed)
  2647                           ; rangetable           110     6 (fixed)
  2648                           ; spacedrange          218     9 (fixed)
  2649                           ; locatedrange         106     3 (fixed)
  2650                           ;	Chosen strategy is simple_byte
  2651  042E  3A00               	xorlw	0	; case 0
  2652  042F  1903               	skipnz
  2653  0430  2CCB               	goto	l282
  2654  0431  3A64               	xorlw	100	; case 100
  2655  0432  1903               	skipnz
  2656  0433  2C38               	goto	l2081
  2657  0434  3A0D               	xorlw	13	; case 105
  2658  0435  1903               	skipnz
  2659  0436  2C38               	goto	l2081
  2660  0437  2C03               	goto	l2113
  2661  0438                     l2081:	
  2662                           
  2663                           ;doprnt.c: 1260: {
  2664                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2665  0438  0832               	movf	printf@ap,w
  2666  0439  0084               	movwf	4
  2667  043A  1383               	bcf	3,7	;select IRP bank0
  2668  043B  0800               	movf	0,w
  2669  043C  00B6               	movwf	printf@_val
  2670  043D  0A84               	incf	4,f
  2671  043E  0800               	movf	0,w
  2672  043F  00B7               	movwf	printf@_val+1
  2673  0440  3002               	movlw	2
  2674  0441  00AF               	movwf	??_printf
  2675  0442  082F               	movf	??_printf,w
  2676  0443  07B2               	addwf	printf@ap,f
  2677                           
  2678                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  2679  0444  1FB7               	btfss	printf@_val+1,7
  2680  0445  2C4F               	goto	l2091
  2681                           
  2682                           ;doprnt.c: 1269: flag |= 0x03;
  2683  0446  3003               	movlw	3
  2684  0447  00AF               	movwf	??_printf
  2685  0448  082F               	movf	??_printf,w
  2686  0449  04B3               	iorwf	printf@flag,f
  2687                           
  2688                           ;doprnt.c: 1270: _val._val = -_val._val;
  2689  044A  09B6               	comf	printf@_val,f
  2690  044B  09B7               	comf	printf@_val+1,f
  2691  044C  0AB6               	incf	printf@_val,f
  2692  044D  1903               	skipnz
  2693  044E  0AB7               	incf	printf@_val+1,f
  2694  044F                     l2091:	
  2695                           
  2696                           ;doprnt.c: 1271: }
  2697                           ;doprnt.c: 1273: }
  2698                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2699  044F  01BA               	clrf	printf@c
  2700  0450  0ABA               	incf	printf@c,f
  2701  0451  083A               	movf	printf@c,w
  2702  0452  3A05               	xorlw	5
  2703  0453  1903               	btfsc	3,2
  2704  0454  2C76               	goto	l2103
  2705  0455                     l2095:	
  2706                           
  2707                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  2708  0455  083A               	movf	printf@c,w
  2709  0456  00AF               	movwf	??_printf
  2710  0457  072F               	addwf	??_printf,w
  2711  0458  3E01               	addlw	low (_dpowers-__stringbase)
  2712  0459  0084               	movwf	4
  2713  045A  120A  118A  2500   	fcall	stringdir
      +       120A  118A         
  2714  045F  00B0               	movwf	??_printf+1
  2715  0460  120A  118A  2500   	fcall	stringdir
      +       120A  118A         
  2716  0465  00B1               	movwf	??_printf+2
  2717  0466  0831               	movf	??_printf+2,w
  2718  0467  0237               	subwf	printf@_val+1,w
  2719  0468  1D03               	skipz
  2720  0469  2C6C               	goto	u1705
  2721  046A  0830               	movf	??_printf+1,w
  2722  046B  0236               	subwf	printf@_val,w
  2723  046C                     u1705:	
  2724  046C  1C03               	btfss	3,0
  2725  046D  2C76               	goto	l2103
  2726                           
  2727                           ;doprnt.c: 1314: break;
  2728  046E  3001               	movlw	1
  2729  046F  00AF               	movwf	??_printf
  2730  0470  082F               	movf	??_printf,w
  2731  0471  07BA               	addwf	printf@c,f
  2732  0472  083A               	movf	printf@c,w
  2733  0473  3A05               	xorlw	5
  2734  0474  1D03               	skipz
  2735  0475  2C55               	goto	l2095
  2736  0476                     l2103:	
  2737                           
  2738                           ;doprnt.c: 1429: {
  2739                           ;doprnt.c: 1445: if(flag & 0x03)
  2740  0476  0833               	movf	printf@flag,w
  2741  0477  3903               	andlw	3
  2742  0478  1903               	btfsc	3,2
  2743  0479  2C80               	goto	l2107
  2744                           
  2745                           ;doprnt.c: 1446: (putch('-') );
  2746  047A  302D               	movlw	45
  2747  047B  120A  118A  24DD   	fcall	_putch
      +       120A  118A         
  2748  0480                     l2107:	
  2749                           
  2750                           ;doprnt.c: 1476: }
  2751                           ;doprnt.c: 1479: prec = c;
  2752  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0482  083A               	movf	printf@c,w
  2755  0483  00AF               	movwf	??_printf
  2756  0484  082F               	movf	??_printf,w
  2757  0485  00B5               	movwf	printf@prec
  2758  0486                     l2111:	
  2759                           ;doprnt.c: 1481: while(prec--) {
  2760                           
  2761  0486  30FF               	movlw	-1
  2762  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0489  00AF               	movwf	??_printf
  2765  048A  082F               	movf	??_printf,w
  2766  048B  07B5               	addwf	printf@prec,f
  2767  048C  0835               	movf	printf@prec,w
  2768  048D  3AFF               	xorlw	-1
  2769  048E  1903               	btfsc	3,2
  2770  048F  2C03               	goto	l2113
  2771                           
  2772                           ;doprnt.c: 1485: {
  2773                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  2774  0490  300A               	movlw	10
  2775  0491  00A7               	movwf	?___lwmod
  2776  0492  3000               	movlw	0
  2777  0493  00A8               	movwf	?___lwmod+1
  2778  0494  0835               	movf	printf@prec,w
  2779  0495  00AF               	movwf	??_printf
  2780  0496  072F               	addwf	??_printf,w
  2781  0497  3E01               	addlw	low (_dpowers-__stringbase)
  2782  0498  0084               	movwf	4
  2783  0499  120A  118A  2500   	fcall	stringdir
      +       120A  118A         
  2784  049E  00A0               	movwf	?___lwdiv
  2785  049F  120A  118A  2500   	fcall	stringdir
      +       120A  118A         
  2786  04A4  00A1               	movwf	?___lwdiv+1
  2787  04A5  0837               	movf	printf@_val+1,w
  2788  04A6  01A3               	clrf	?___lwdiv+3
  2789  04A7  07A3               	addwf	?___lwdiv+3,f
  2790  04A8  0836               	movf	printf@_val,w
  2791  04A9  01A2               	clrf	?___lwdiv+2
  2792  04AA  07A2               	addwf	?___lwdiv+2,f
  2793  04AB  120A  118A  26B4   	fcall	___lwdiv
      +       120A  118A         
  2794  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2795  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2796  04B2  0821               	movf	?___lwdiv+1,w
  2797  04B3  01AA               	clrf	?___lwmod+3
  2798  04B4  07AA               	addwf	?___lwmod+3,f
  2799  04B5  0820               	movf	?___lwdiv,w
  2800  04B6  01A9               	clrf	?___lwmod+2
  2801  04B7  07A9               	addwf	?___lwmod+2,f
  2802  04B8  120A  118A  26F4   	fcall	___lwmod
      +       120A  118A         
  2803  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2804  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2805  04BF  0827               	movf	?___lwmod,w
  2806  04C0  3E30               	addlw	48
  2807  04C1  00B0               	movwf	??_printf+1
  2808  04C2  0830               	movf	??_printf+1,w
  2809  04C3  00BA               	movwf	printf@c
  2810                           
  2811                           ;doprnt.c: 1530: }
  2812                           ;doprnt.c: 1531: (putch(c) );
  2813  04C4  083A               	movf	printf@c,w
  2814  04C5  120A  118A  24DD   	fcall	_putch
      +       120A  118A         
  2815  04CA  2C86               	goto	l2111
  2816  04CB                     l282:	
  2817                           ;doprnt.c: 1547: return 0;
  2818                           ;	Return value of _printf is never used
  2819                           
  2820                           ;doprnt.c: 1532: }
  2821                           ;doprnt.c: 1540: }
  2822                           ;doprnt.c: 1542: alldone:
  2823                           
  2824  04CB  0008               	return
  2825  04CC                     __end_of_printf:	
  2826                           
  2827                           	psect	text6
  2828  06F4                     __ptext6:	
  2829 ;; *************** function ___lwmod *****************
  2830 ;; Defined at:
  2831 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwmod.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  divisor         2    7[BANK0 ] unsigned int 
  2834 ;;  dividend        2    9[BANK0 ] unsigned int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  counter         1   12[BANK0 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    7[BANK0 ] unsigned int 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       4       0       0       0
  2847 ;;      Locals:         0       1       0       0       0
  2848 ;;      Temps:          0       1       0       0       0
  2849 ;;      Totals:         0       6       0       0       0
  2850 ;;Total ram usage:        6 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_printf
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function ___lwmod
  2862  06F4                     ___lwmod:	
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2866  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2867  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2868  06F6  0828               	movf	___lwmod@divisor+1,w
  2869  06F7  0427               	iorwf	___lwmod@divisor,w
  2870  06F8  1903               	skipnz
  2871  06F9  2F23               	goto	l2453
  2872  06FA  01AC               	clrf	___lwmod@counter
  2873  06FB  0AAC               	incf	___lwmod@counter,f
  2874  06FC                     l2443:	
  2875  06FC  1BA8               	btfsc	___lwmod@divisor+1,7
  2876  06FD  2F0A               	goto	l2445
  2877  06FE  3001               	movlw	1
  2878  06FF                     u1995:	
  2879  06FF  1003               	clrc
  2880  0700  0DA7               	rlf	___lwmod@divisor,f
  2881  0701  0DA8               	rlf	___lwmod@divisor+1,f
  2882  0702  3EFF               	addlw	-1
  2883  0703  1D03               	skipz
  2884  0704  2EFF               	goto	u1995
  2885  0705  3001               	movlw	1
  2886  0706  00AB               	movwf	??___lwmod
  2887  0707  082B               	movf	??___lwmod,w
  2888  0708  07AC               	addwf	___lwmod@counter,f
  2889  0709  2EFC               	goto	l2443
  2890  070A                     l2445:	
  2891  070A  0828               	movf	___lwmod@divisor+1,w
  2892  070B  022A               	subwf	___lwmod@dividend+1,w
  2893  070C  1D03               	skipz
  2894  070D  2F10               	goto	u2015
  2895  070E  0827               	movf	___lwmod@divisor,w
  2896  070F  0229               	subwf	___lwmod@dividend,w
  2897  0710                     u2015:	
  2898  0710  1C03               	skipc
  2899  0711  2F18               	goto	l2449
  2900  0712  0827               	movf	___lwmod@divisor,w
  2901  0713  02A9               	subwf	___lwmod@dividend,f
  2902  0714  0828               	movf	___lwmod@divisor+1,w
  2903  0715  1C03               	skipc
  2904  0716  03AA               	decf	___lwmod@dividend+1,f
  2905  0717  02AA               	subwf	___lwmod@dividend+1,f
  2906  0718                     l2449:	
  2907  0718  3001               	movlw	1
  2908  0719                     u2025:	
  2909  0719  1003               	clrc
  2910  071A  0CA8               	rrf	___lwmod@divisor+1,f
  2911  071B  0CA7               	rrf	___lwmod@divisor,f
  2912  071C  3EFF               	addlw	-1
  2913  071D  1D03               	skipz
  2914  071E  2F19               	goto	u2025
  2915  071F  3001               	movlw	1
  2916  0720  02AC               	subwf	___lwmod@counter,f
  2917  0721  1D03               	btfss	3,2
  2918  0722  2F0A               	goto	l2445
  2919  0723                     l2453:	
  2920  0723  082A               	movf	___lwmod@dividend+1,w
  2921  0724  01A8               	clrf	?___lwmod+1
  2922  0725  07A8               	addwf	?___lwmod+1,f
  2923  0726  0829               	movf	___lwmod@dividend,w
  2924  0727  01A7               	clrf	?___lwmod
  2925  0728  07A7               	addwf	?___lwmod,f
  2926  0729  0008               	return
  2927  072A                     __end_of___lwmod:	
  2928                           
  2929                           	psect	text7
  2930  06B4                     __ptext7:	
  2931 ;; *************** function ___lwdiv *****************
  2932 ;; Defined at:
  2933 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwdiv.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  divisor         2    0[BANK0 ] unsigned int 
  2936 ;;  dividend        2    2[BANK0 ] unsigned int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  quotient        2    4[BANK0 ] unsigned int 
  2939 ;;  counter         1    6[BANK0 ] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  2    0[BANK0 ] unsigned int 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       4       0       0       0
  2950 ;;      Locals:         0       3       0       0       0
  2951 ;;      Temps:          1       0       0       0       0
  2952 ;;      Totals:         1       7       0       0       0
  2953 ;;Total ram usage:        8 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_printf
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function ___lwdiv
  2965  06B4                     ___lwdiv:	
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2969  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2970  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2971  06B6  01A4               	clrf	___lwdiv@quotient
  2972  06B7  01A5               	clrf	___lwdiv@quotient+1
  2973  06B8  0821               	movf	___lwdiv@divisor+1,w
  2974  06B9  0420               	iorwf	___lwdiv@divisor,w
  2975  06BA  1903               	skipnz
  2976  06BB  2EED               	goto	l1859
  2977  06BC  01A6               	clrf	___lwdiv@counter
  2978  06BD  0AA6               	incf	___lwdiv@counter,f
  2979  06BE                     l1847:	
  2980  06BE  1BA1               	btfsc	___lwdiv@divisor+1,7
  2981  06BF  2ECC               	goto	l1849
  2982  06C0  3001               	movlw	1
  2983  06C1                     u1255:	
  2984  06C1  1003               	clrc
  2985  06C2  0DA0               	rlf	___lwdiv@divisor,f
  2986  06C3  0DA1               	rlf	___lwdiv@divisor+1,f
  2987  06C4  3EFF               	addlw	-1
  2988  06C5  1D03               	skipz
  2989  06C6  2EC1               	goto	u1255
  2990  06C7  3001               	movlw	1
  2991  06C8  00F6               	movwf	??___lwdiv
  2992  06C9  0876               	movf	??___lwdiv,w
  2993  06CA  07A6               	addwf	___lwdiv@counter,f
  2994  06CB  2EBE               	goto	l1847
  2995  06CC                     l1849:	
  2996  06CC  3001               	movlw	1
  2997  06CD                     u1275:	
  2998  06CD  1003               	clrc
  2999  06CE  0DA4               	rlf	___lwdiv@quotient,f
  3000  06CF  0DA5               	rlf	___lwdiv@quotient+1,f
  3001  06D0  3EFF               	addlw	-1
  3002  06D1  1D03               	skipz
  3003  06D2  2ECD               	goto	u1275
  3004  06D3  0821               	movf	___lwdiv@divisor+1,w
  3005  06D4  0223               	subwf	___lwdiv@dividend+1,w
  3006  06D5  1D03               	skipz
  3007  06D6  2ED9               	goto	u1285
  3008  06D7  0820               	movf	___lwdiv@divisor,w
  3009  06D8  0222               	subwf	___lwdiv@dividend,w
  3010  06D9                     u1285:	
  3011  06D9  1C03               	skipc
  3012  06DA  2EE2               	goto	l1855
  3013  06DB  0820               	movf	___lwdiv@divisor,w
  3014  06DC  02A2               	subwf	___lwdiv@dividend,f
  3015  06DD  0821               	movf	___lwdiv@divisor+1,w
  3016  06DE  1C03               	skipc
  3017  06DF  03A3               	decf	___lwdiv@dividend+1,f
  3018  06E0  02A3               	subwf	___lwdiv@dividend+1,f
  3019  06E1  1424               	bsf	___lwdiv@quotient,0
  3020  06E2                     l1855:	
  3021  06E2  3001               	movlw	1
  3022  06E3                     u1295:	
  3023  06E3  1003               	clrc
  3024  06E4  0CA1               	rrf	___lwdiv@divisor+1,f
  3025  06E5  0CA0               	rrf	___lwdiv@divisor,f
  3026  06E6  3EFF               	addlw	-1
  3027  06E7  1D03               	skipz
  3028  06E8  2EE3               	goto	u1295
  3029  06E9  3001               	movlw	1
  3030  06EA  02A6               	subwf	___lwdiv@counter,f
  3031  06EB  1D03               	btfss	3,2
  3032  06EC  2ECC               	goto	l1849
  3033  06ED                     l1859:	
  3034  06ED  0825               	movf	___lwdiv@quotient+1,w
  3035  06EE  01A1               	clrf	?___lwdiv+1
  3036  06EF  07A1               	addwf	?___lwdiv+1,f
  3037  06F0  0824               	movf	___lwdiv@quotient,w
  3038  06F1  01A0               	clrf	?___lwdiv
  3039  06F2  07A0               	addwf	?___lwdiv,f
  3040  06F3  0008               	return
  3041  06F4                     __end_of___lwdiv:	
  3042                           
  3043                           	psect	text8
  3044  04DD                     __ptext8:	
  3045 ;; *************** function _putch *****************
  3046 ;; Defined at:
  3047 ;;		line 144 in file "../LCD_ModSauer.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  c               1    wreg     unsigned char 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  c               1    5[BANK0 ] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         0       1       0       0       0
  3063 ;;      Temps:          0       0       0       0       0
  3064 ;;      Totals:         0       1       0       0       0
  3065 ;;Total ram usage:        1 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    4
  3068 ;; This function calls:
  3069 ;;		_lcd_putc
  3070 ;; This function is called by:
  3071 ;;		_printf
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _putch
  3077  04DD                     _putch:	
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3081                           ;putch@c stored from wreg
  3082  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3083  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3084  04DF  00A5               	movwf	putch@c
  3085                           
  3086                           ;LCD_ModSauer.c: 145: lcd_putc(c);
  3087  04E0  0825               	movf	putch@c,w
  3088  04E1  120A  118A  2784   	fcall	_lcd_putc
  3089  04E4  0008               	return
  3090  04E5                     __end_of_putch:	
  3091                           
  3092                           	psect	text9
  3093  0784                     __ptext9:	
  3094 ;; *************** function _lcd_putc *****************
  3095 ;; Defined at:
  3096 ;;		line 82 in file "../LCD_ModSauer.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  c               1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  c               1    4[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;		None               void
  3103 ;; Registers used:
  3104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         0       1       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       1       0       0       0
  3114 ;;Total ram usage:        1 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    3
  3117 ;; This function calls:
  3118 ;;		_lcd_clear
  3119 ;;		_lcd_write
  3120 ;;		_lcd_goto
  3121 ;; This function is called by:
  3122 ;;		_putch
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _lcd_putc
  3128  0784                     _lcd_putc:	
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3132                           ;lcd_putc@c stored from wreg
  3133  0784  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0785  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0786  00A4               	movwf	lcd_putc@c
  3136                           
  3137                           ;LCD_ModSauer.c: 83: switch (c) {
  3138  0787  2F9D               	goto	l2431
  3139  0788                     l2421:	
  3140                           ;LCD_ModSauer.c: 84: case '\f' :
  3141                           
  3142                           
  3143                           ;LCD_ModSauer.c: 86: lcd_clear();
  3144  0788  120A  118A  27C8   	fcall	_lcd_clear
  3145                           
  3146                           ;LCD_ModSauer.c: 87: break;
  3147  078B  0008               	return
  3148  078C                     l2423:	
  3149                           ;LCD_ModSauer.c: 88: case '\n' :
  3150                           
  3151                           
  3152                           ;LCD_ModSauer.c: 89: lcd_goto(0x40);
  3153  078C  3040               	movlw	64
  3154  078D  120A  118A  27F4   	fcall	_lcd_goto
  3155                           
  3156                           ;LCD_ModSauer.c: 90: break;
  3157  0790  0008               	return
  3158  0791                     l244:	
  3159                           ;LCD_ModSauer.c: 91: case '\r' :
  3160                           
  3161                           
  3162                           ;LCD_ModSauer.c: 92: RA4 = 0;
  3163  0791  1205               	bcf	5,4	;volatile
  3164                           
  3165                           ;LCD_ModSauer.c: 93: lcd_write(0x80);
  3166  0792  3080               	movlw	128
  3167  0793  120A  118A  2758   	fcall	_lcd_write
  3168                           
  3169                           ;LCD_ModSauer.c: 94: break;
  3170  0796  0008               	return
  3171  0797                     l245:	
  3172                           ;LCD_ModSauer.c: 95: default :
  3173                           
  3174                           
  3175                           ;LCD_ModSauer.c: 96: RA4 = 1;
  3176  0797  1605               	bsf	5,4	;volatile
  3177                           
  3178                           ;LCD_ModSauer.c: 97: lcd_write( c );
  3179  0798  0824               	movf	lcd_putc@c,w
  3180  0799  120A  118A  2758   	fcall	_lcd_write
  3181                           
  3182                           ;LCD_ModSauer.c: 99: }
  3183                           
  3184                           ;LCD_ModSauer.c: 98: break;
  3185  079C  0008               	return
  3186  079D                     l2431:	
  3187  079D  1283               	bcf	3,5	;RP0=0, select bank0
  3188  079E  1303               	bcf	3,6	;RP1=0, select bank0
  3189  079F  0824               	movf	lcd_putc@c,w
  3190                           
  3191                           ; Switch size 1, requested type "space"
  3192                           ; Number of cases is 3, Range of values is 10 to 13
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte           10     6 (average)
  3196                           ; direct_byte           23    11 (fixed)
  3197                           ; jumptable            263     9 (fixed)
  3198                           ;	Chosen strategy is simple_byte
  3199  07A0  3A0A               	xorlw	10	; case 10
  3200  07A1  1903               	skipnz
  3201  07A2  2F8C               	goto	l2423
  3202  07A3  3A06               	xorlw	6	; case 12
  3203  07A4  1903               	skipnz
  3204  07A5  2F88               	goto	l2421
  3205  07A6  3A01               	xorlw	1	; case 13
  3206  07A7  1903               	skipnz
  3207  07A8  2F91               	goto	l244
  3208  07A9  2F97               	goto	l245
  3209  07AA  0008               	return
  3210  07AB                     __end_of_lcd_putc:	
  3211                           
  3212                           	psect	text10
  3213  07F4                     __ptext10:	
  3214 ;; *************** function _lcd_goto *****************
  3215 ;; Defined at:
  3216 ;;		line 55 in file "../LCD_ModSauer.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  pos             1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  pos             1    2[BANK0 ] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       1       0       0       0
  3232 ;;      Temps:          0       0       0       0       0
  3233 ;;      Totals:         0       1       0       0       0
  3234 ;;Total ram usage:        1 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    2
  3237 ;; This function calls:
  3238 ;;		_lcd_write
  3239 ;; This function is called by:
  3240 ;;		_lcd_putc
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _lcd_goto
  3246  07F4                     _lcd_goto:	
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  3250                           ;lcd_goto@pos stored from wreg
  3251  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3252  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3253  07F6  00A2               	movwf	lcd_goto@pos
  3254                           
  3255                           ;LCD_ModSauer.c: 56: RA4 = 0;
  3256  07F7  1205               	bcf	5,4	;volatile
  3257                           
  3258                           ;LCD_ModSauer.c: 57: lcd_write(0x80+pos);
  3259  07F8  0822               	movf	lcd_goto@pos,w
  3260  07F9  3E80               	addlw	128
  3261  07FA  120A  118A  2758   	fcall	_lcd_write
  3262  07FD  0008               	return
  3263  07FE                     __end_of_lcd_goto:	
  3264                           
  3265                           	psect	text11
  3266  07C8                     __ptext11:	
  3267 ;; *************** function _lcd_clear *****************
  3268 ;; Defined at:
  3269 ;;		line 62 in file "../LCD_ModSauer.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0
  3285 ;;      Temps:          0       2       0       0       0
  3286 ;;      Totals:         0       2       0       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_lcd_write
  3292 ;; This function is called by:
  3293 ;;		_entrada_senhas
  3294 ;;		_timer
  3295 ;;		_senhas
  3296 ;;		_lcd_putc
  3297 ;;		_lcd_init
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _lcd_clear
  3303  07C8                     _lcd_clear:	
  3304                           
  3305                           ;LCD_ModSauer.c: 63: RA4 = 0;
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  3309  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  3310  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  3311  07CA  1205               	bcf	5,4	;volatile
  3312                           
  3313                           ;LCD_ModSauer.c: 64: _delay((unsigned long)((40)*(4000000/4000000.0)));
  3314  07CB  300D               	movlw	13
  3315  07CC  00A2               	movwf	??_lcd_clear
  3316  07CD                     u2227:	
  3317  07CD  0BA2               	decfsz	??_lcd_clear,f
  3318  07CE  2FCD               	goto	u2227
  3319                           
  3320                           ;LCD_ModSauer.c: 65: lcd_write(0x1);
  3321  07CF  3001               	movlw	1
  3322  07D0  120A  118A  2758   	fcall	_lcd_write
      +       120A  118A         
  3323                           
  3324                           ;LCD_ModSauer.c: 66: _delay((unsigned long)((2)*(4000000/4000.0)));
  3325  07D5  3003               	movlw	3
  3326  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3327  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3328  07D8  00A3               	movwf	??_lcd_clear+1
  3329  07D9  3097               	movlw	151
  3330  07DA  00A2               	movwf	??_lcd_clear
  3331  07DB                     u2237:	
  3332  07DB  0BA2               	decfsz	??_lcd_clear,f
  3333  07DC  2FDB               	goto	u2237
  3334  07DD  0BA3               	decfsz	??_lcd_clear+1,f
  3335  07DE  2FDB               	goto	u2237
  3336  07DF  2FE0               	nop2
  3337  07E0  0008               	return
  3338  07E1                     __end_of_lcd_clear:	
  3339                           
  3340                           	psect	text12
  3341  0758                     __ptext12:	
  3342 ;; *************** function _lcd_write *****************
  3343 ;; Defined at:
  3344 ;;		line 38 in file "../LCD_ModSauer.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  c               1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  c               1    6[COMMON] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;		None               void
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         0       0       0       0       0
  3359 ;;      Locals:         1       0       0       0       0
  3360 ;;      Temps:          0       2       0       0       0
  3361 ;;      Totals:         1       2       0       0       0
  3362 ;;Total ram usage:        3 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_entrada_senhas
  3369 ;;		_senhas
  3370 ;;		_lcd_goto
  3371 ;;		_lcd_clear
  3372 ;;		_lcd_putc
  3373 ;;		_lcd_init
  3374 ;;		_lcd_puts
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           
  3379                           ;psect for function _lcd_write
  3380  0758                     _lcd_write:	
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  3384                           ;lcd_write@c stored from wreg
  3385  0758  00F6               	movwf	lcd_write@c
  3386                           
  3387                           ;LCD_ModSauer.c: 39: _delay((unsigned long)((40)*(4000000/4000000.0)));
  3388  0759  300D               	movlw	13
  3389  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3390  075B  1303               	bcf	3,6	;RP1=0, select bank0
  3391  075C  00A0               	movwf	??_lcd_write
  3392  075D                     u2247:	
  3393  075D  0BA0               	decfsz	??_lcd_write,f
  3394  075E  2F5D               	goto	u2247
  3395                           
  3396                           ;LCD_ModSauer.c: 40: PORTA &= 0xF0;
  3397  075F  30F0               	movlw	240
  3398  0760  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0761  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0762  00A0               	movwf	??_lcd_write
  3401  0763  0820               	movf	??_lcd_write,w
  3402  0764  0585               	andwf	5,f	;volatile
  3403                           
  3404                           ;LCD_ModSauer.c: 41: PORTA |= ( ( c >> 4 ) & 0x0F );
  3405  0765  0876               	movf	lcd_write@c,w
  3406  0766  00A0               	movwf	??_lcd_write
  3407  0767  3004               	movlw	4
  3408  0768                     u1755:	
  3409  0768  1003               	clrc
  3410  0769  0CA0               	rrf	??_lcd_write,f
  3411  076A  3EFF               	addlw	-1
  3412  076B  1D03               	skipz
  3413  076C  2F68               	goto	u1755
  3414  076D  0820               	movf	??_lcd_write,w
  3415  076E  390F               	andlw	15
  3416  076F  00A1               	movwf	??_lcd_write+1
  3417  0770  0821               	movf	??_lcd_write+1,w
  3418  0771  0485               	iorwf	5,f	;volatile
  3419                           
  3420                           ;LCD_ModSauer.c: 42: ((RA5 = 1),(RA5=0));
  3421  0772  1685               	bsf	5,5	;volatile
  3422  0773  1285               	bcf	5,5	;volatile
  3423                           
  3424                           ;LCD_ModSauer.c: 43: PORTA &=0xF0;
  3425  0774  30F0               	movlw	240
  3426  0775  00A0               	movwf	??_lcd_write
  3427  0776  0820               	movf	??_lcd_write,w
  3428  0777  0585               	andwf	5,f	;volatile
  3429                           
  3430                           ;LCD_ModSauer.c: 44: PORTA |= ( c & 0x0F );
  3431  0778  0876               	movf	lcd_write@c,w
  3432  0779  390F               	andlw	15
  3433  077A  00A0               	movwf	??_lcd_write
  3434  077B  0820               	movf	??_lcd_write,w
  3435  077C  0485               	iorwf	5,f	;volatile
  3436                           
  3437                           ;LCD_ModSauer.c: 45: ((RA5 = 1),(RA5=0));
  3438  077D  1685               	bsf	5,5	;volatile
  3439  077E  1285               	bcf	5,5	;volatile
  3440                           
  3441                           ;LCD_ModSauer.c: 46: _delay((unsigned long)((40)*(4000000/4000000.0)));
  3442  077F  300D               	movlw	13
  3443  0780  00A0               	movwf	??_lcd_write
  3444  0781                     u2257:	
  3445  0781  0BA0               	decfsz	??_lcd_write,f
  3446  0782  2F81               	goto	u2257
  3447  0783  0008               	return
  3448  0784                     __end_of_lcd_write:	
  3449                           
  3450                           	psect	text13
  3451  07AB                     __ptext13:	
  3452 ;; *************** function _write_ee *****************
  3453 ;; Defined at:
  3454 ;;		line 42 in file "../EEPROM.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  adr             1    wreg     unsigned char 
  3457 ;;  dado            1    6[COMMON] unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  adr             1    0[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;		None               void
  3462 ;; Registers used:
  3463 ;;		wreg
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         1       0       0       0       0
  3470 ;;      Locals:         0       1       0       0       0
  3471 ;;      Temps:          0       0       0       0       0
  3472 ;;      Totals:         1       1       0       0       0
  3473 ;;Total ram usage:        2 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_entrada_senhas
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _write_ee
  3485  07AB                     _write_ee:	
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in _write_ee: [wreg]
  3489                           ;write_ee@adr stored from wreg
  3490  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3491  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3492  07AD  00A0               	movwf	write_ee@adr
  3493                           
  3494                           ;EEPROM.c: 43: GIE=0;
  3495  07AE  138B               	bcf	11,7	;volatile
  3496                           
  3497                           ;EEPROM.c: 44: WREN=1;
  3498  07AF  1683               	bsf	3,5	;RP0=1, select bank3
  3499  07B0  1703               	bsf	3,6	;RP1=1, select bank3
  3500  07B1  150C               	bsf	12,2	;volatile
  3501                           
  3502                           ;EEPROM.c: 45: EEDAT=dado;
  3503  07B2  0876               	movf	write_ee@dado,w
  3504  07B3  1283               	bcf	3,5	;RP0=0, select bank2
  3505  07B4  1703               	bsf	3,6	;RP1=1, select bank2
  3506  07B5  008C               	movwf	12	;volatile
  3507                           
  3508                           ;EEPROM.c: 46: EEADR=adr;
  3509  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3510  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3511  07B8  0820               	movf	write_ee@adr,w
  3512  07B9  1283               	bcf	3,5	;RP0=0, select bank2
  3513  07BA  1703               	bsf	3,6	;RP1=1, select bank2
  3514  07BB  008D               	movwf	13	;volatile
  3515                           
  3516                           ;EEPROM.c: 47: EECON2=0x55;
  3517  07BC  3055               	movlw	85
  3518  07BD  1683               	bsf	3,5	;RP0=1, select bank3
  3519  07BE  1703               	bsf	3,6	;RP1=1, select bank3
  3520  07BF  008D               	movwf	13	;volatile
  3521                           
  3522                           ;EEPROM.c: 48: EECON2=0xAA;
  3523  07C0  30AA               	movlw	170
  3524  07C1  008D               	movwf	13	;volatile
  3525                           
  3526                           ;EEPROM.c: 49: WR=1;
  3527  07C2  148C               	bsf	12,1	;volatile
  3528                           
  3529                           ;EEPROM.c: 50: GIE=1;
  3530  07C3  178B               	bsf	11,7	;volatile
  3531                           
  3532                           ;EEPROM.c: 51: EEIE=1;
  3533  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3534  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3535  07C6  160D               	bsf	13,4	;volatile
  3536  07C7  0008               	return
  3537  07C8                     __end_of_write_ee:	
  3538                           ;EEPROM.c: 52: return;
  3539                           
  3540                           
  3541                           	psect	text14
  3542  0610                     __ptext14:	
  3543 ;; *************** function _xandi_lima *****************
  3544 ;; Defined at:
  3545 ;;		line 280 in file "../EEPROM.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;		None               void
  3552 ;; Registers used:
  3553 ;;		wreg, status,2
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0
  3561 ;;      Temps:          6       0       0       0       0
  3562 ;;      Totals:         6       0       0       0       0
  3563 ;;Total ram usage:        6 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		Interrupt level 1
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _xandi_lima
  3574  0610                     _xandi_lima:	
  3575                           
  3576                           ;EEPROM.c: 282: if(EEIF && EEIE){
  3577  0610  1E0D               	btfss	13,4	;volatile
  3578  0611  2E1D               	goto	i1l195
  3579  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3581  0614  1E0D               	btfss	13,4	;volatile
  3582  0615  2E1D               	goto	i1l195
  3583                           
  3584                           ;EEPROM.c: 283: EEIF=0;
  3585  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0618  120D               	bcf	13,4	;volatile
  3588                           
  3589                           ;EEPROM.c: 284: WREN=0;
  3590  0619  1683               	bsf	3,5	;RP0=1, select bank3
  3591  061A  1703               	bsf	3,6	;RP1=1, select bank3
  3592  061B  110C               	bcf	12,2	;volatile
  3593                           
  3594                           ;EEPROM.c: 285: ok=1;
  3595  061C  14F7               	bsf	_ok/(0+8),_ok& (0+7)
  3596  061D                     i1l195:	
  3597                           
  3598                           ;EEPROM.c: 286: }
  3599                           ;EEPROM.c: 288: if (RBIF && RBIE){
  3600  061D  180B               	btfsc	11,0	;volatile
  3601  061E  1D8B               	btfss	11,3	;volatile
  3602  061F  2E50               	goto	i1l1921
  3603                           
  3604                           ;EEPROM.c: 289: _delay((unsigned long)((50)*(4000000/4000.0)));
  3605  0620  3041               	movlw	65
  3606  0621  00F1               	movwf	??_xandi_lima+1
  3607  0622  30EE               	movlw	238
  3608  0623  00F0               	movwf	??_xandi_lima
  3609  0624                     u226_27:	
  3610  0624  0BF0               	decfsz	??_xandi_lima,f
  3611  0625  2E24               	goto	u226_27
  3612  0626  0BF1               	decfsz	??_xandi_lima+1,f
  3613  0627  2E24               	goto	u226_27
  3614  0628  0000               	nop
  3615                           
  3616                           ;EEPROM.c: 290: RBIF=0;
  3617  0629  100B               	bcf	11,0	;volatile
  3618                           
  3619                           ;EEPROM.c: 291: if(!RB5){
  3620  062A  1283               	bcf	3,5	;RP0=0, select bank0
  3621  062B  1303               	bcf	3,6	;RP1=0, select bank0
  3622  062C  1A86               	btfsc	6,5	;volatile
  3623  062D  2E36               	goto	i1l197
  3624                           
  3625                           ;EEPROM.c: 292: RB1=1;
  3626  062E  1486               	bsf	6,1	;volatile
  3627                           
  3628                           ;EEPROM.c: 293: RB2=0;
  3629  062F  1106               	bcf	6,2	;volatile
  3630                           
  3631                           ;EEPROM.c: 294: if(!RB5) buffer=0;
  3632  0630  1A86               	btfsc	6,5	;volatile
  3633  0631  2E34               	goto	i1l198
  3634  0632  01C1               	clrf	_buffer
  3635  0633  2E36               	goto	i1l197
  3636  0634                     i1l198:	
  3637                           
  3638                           ;EEPROM.c: 295: else buffer=1;
  3639  0634  01C1               	clrf	_buffer
  3640  0635  0AC1               	incf	_buffer,f
  3641  0636                     i1l197:	
  3642                           
  3643                           ;EEPROM.c: 296: }
  3644                           ;EEPROM.c: 297: if(!RB6){
  3645  0636  1B06               	btfsc	6,6	;volatile
  3646  0637  2E42               	goto	i1l1909
  3647                           
  3648                           ;EEPROM.c: 298: RB1=1;
  3649  0638  1486               	bsf	6,1	;volatile
  3650                           
  3651                           ;EEPROM.c: 299: RB2=0;
  3652  0639  1106               	bcf	6,2	;volatile
  3653                           
  3654                           ;EEPROM.c: 300: if(!RB6) buffer=2;
  3655  063A  1B06               	btfsc	6,6	;volatile
  3656  063B  2E3E               	goto	i1l1907
  3657  063C  3002               	movlw	2
  3658  063D  2E3F               	goto	L1
  3659  063E                     i1l1907:	
  3660                           
  3661                           ;EEPROM.c: 301: else buffer=3;
  3662  063E  3003               	movlw	3
  3663  063F                     L1:	
  3664  063F  00F0               	movwf	??_xandi_lima
  3665  0640  0870               	movf	??_xandi_lima,w
  3666  0641  00C1               	movwf	_buffer
  3667  0642                     i1l1909:	
  3668                           
  3669                           ;EEPROM.c: 302: }
  3670                           ;EEPROM.c: 303: if(!RB7){
  3671  0642  1B86               	btfsc	6,7	;volatile
  3672  0643  2E4E               	goto	i1l1917
  3673                           
  3674                           ;EEPROM.c: 304: RB1=1;
  3675  0644  1486               	bsf	6,1	;volatile
  3676                           
  3677                           ;EEPROM.c: 305: RB2=0;
  3678  0645  1106               	bcf	6,2	;volatile
  3679                           
  3680                           ;EEPROM.c: 306: if(!RB7) buffer=4;
  3681  0646  1B86               	btfsc	6,7	;volatile
  3682  0647  2E4A               	goto	i1l1915
  3683  0648  3004               	movlw	4
  3684  0649  2E4B               	goto	L2
  3685  064A                     i1l1915:	
  3686                           
  3687                           ;EEPROM.c: 307: else buffer=5;
  3688  064A  3005               	movlw	5
  3689  064B                     L2:	
  3690  064B  00F0               	movwf	??_xandi_lima
  3691  064C  0870               	movf	??_xandi_lima,w
  3692  064D  00C1               	movwf	_buffer
  3693  064E                     i1l1917:	
  3694                           
  3695                           ;EEPROM.c: 308: }
  3696                           ;EEPROM.c: 309: RB1=0;
  3697  064E  1086               	bcf	6,1	;volatile
  3698                           
  3699                           ;EEPROM.c: 310: RB2=0;
  3700  064F  1106               	bcf	6,2	;volatile
  3701  0650                     i1l1921:	
  3702                           
  3703                           ;EEPROM.c: 311: }
  3704                           ;EEPROM.c: 313: if(INTE && INTF){
  3705  0650  1A0B               	btfsc	11,4	;volatile
  3706  0651  1C8B               	btfss	11,1	;volatile
  3707  0652  2E64               	goto	i1l207
  3708                           
  3709                           ;EEPROM.c: 314: _delay((unsigned long)((50)*(4000000/4000.0)));
  3710  0653  3041               	movlw	65
  3711  0654  00F1               	movwf	??_xandi_lima+1
  3712  0655  30EE               	movlw	238
  3713  0656  00F0               	movwf	??_xandi_lima
  3714  0657                     u227_27:	
  3715  0657  0BF0               	decfsz	??_xandi_lima,f
  3716  0658  2E57               	goto	u227_27
  3717  0659  0BF1               	decfsz	??_xandi_lima+1,f
  3718  065A  2E57               	goto	u227_27
  3719  065B  0000               	nop
  3720                           
  3721                           ;EEPROM.c: 315: INTF=0;
  3722  065C  108B               	bcf	11,1	;volatile
  3723                           
  3724                           ;EEPROM.c: 316: foi=1;
  3725  065D  1477               	bsf	_foi/(0+8),_foi& (0+7)
  3726                           
  3727                           ;EEPROM.c: 317: RC4=0;
  3728  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3729  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0660  1207               	bcf	7,4	;volatile
  3731                           
  3732                           ;EEPROM.c: 318: RC5=0;
  3733  0661  1287               	bcf	7,5	;volatile
  3734                           
  3735                           ;EEPROM.c: 319: RC7=0;
  3736  0662  1387               	bcf	7,7	;volatile
  3737                           
  3738                           ;EEPROM.c: 320: RC6=0;
  3739  0663  1307               	bcf	7,6	;volatile
  3740  0664                     i1l207:	
  3741  0664  0875               	movf	??_xandi_lima+5,w
  3742  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0667  00FF               	movwf	127
  3745  0668  0874               	movf	??_xandi_lima+4,w
  3746  0669  008A               	movwf	10
  3747  066A  0873               	movf	??_xandi_lima+3,w
  3748  066B  0084               	movwf	4
  3749  066C  0E72               	swapf	(??_xandi_lima+2)^(0+-128),w
  3750  066D  0083               	movwf	3
  3751  066E  0EFE               	swapf	126,f
  3752  066F  0E7E               	swapf	126,w
  3753  0670  0009               	retfie
  3754  0671                     __end_of_xandi_lima:	
  3755  007E                     btemp	set	126	;btemp
  3756  007E                     wtemp0	set	126
  3757                           
  3758                           	psect	intentry
  3759  0004                     __pintentry:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _xandi_lima: [wreg+status,2]
  3762                           
  3763  0004                     interrupt_function:	
  3764  007E                     saved_w	set	btemp
  3765  0004  00FE               	movwf	btemp
  3766  0005  0E03               	swapf	3,w
  3767  0006  00F2               	movwf	??_xandi_lima+2
  3768  0007  0804               	movf	4,w
  3769  0008  00F3               	movwf	??_xandi_lima+3
  3770  0009  080A               	movf	10,w
  3771  000A  00F4               	movwf	??_xandi_lima+4
  3772  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3773  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3774  000D  087F               	movf	btemp+1,w
  3775  000E  00F5               	movwf	??_xandi_lima+5
  3776  000F  120A  118A  2E10   	ljmp	_xandi_lima


Data Sizes:
    Strings     149
    Constant    10
    Data        7
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     33      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    printf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_20(CODE[15]), STR_19(CODE[12]), STR_18(CODE[16]), STR_17(CODE[3]), 
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[23]), STR_13(CODE[11]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[23]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[23]), 

    ?_printf	int  size(1) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S152$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _lcd_init->_lcd_write
    _senhas->_lcd_write
    _entrada_senhas->_write_ee
    _entrada_senhas->_lcd_write
    _printf->___lwdiv
    ___lwmod->___lwdiv
    _lcd_putc->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write

Critical Paths under _xandi_lima in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_senhas
    _lcd_init->_lcd_clear
    _senhas->_entrada_senhas
    _senhas->_timer
    _timer->_printf
    _entrada_senhas->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _putch->_lcd_putc
    _lcd_putc->_lcd_clear
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write

Critical Paths under _xandi_lima in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _xandi_lima in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _xandi_lima in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _xandi_lima in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5784
                     _entrada_senhas
                             _senhas
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     158
                                              4 BANK0      3     3      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _senhas                                               3     3      0    4173
                                             30 BANK0      3     3      0
                     _entrada_senhas
                          _lcd_clear
                             _printf
                          _lcd_write
                              _timer
 ---------------------------------------------------------------------------------
 (2) _timer                                                3     3      0    1329
                                             27 BANK0      3     3      0
                          _lcd_clear
                             _printf
 ---------------------------------------------------------------------------------
 (2) _entrada_senhas                                       3     3      0    1453
                                             27 BANK0      3     3      0
                           _write_ee
                          _lcd_clear
                             _printf
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _printf                                              14    12      2    1267
                                             13 BANK0     14    12      2
                              _putch
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     232
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     162
                                              6 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     310
                                              5 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0     279
                                              4 BANK0      1     1      0
                          _lcd_clear
                          _lcd_write
                           _lcd_goto
 ---------------------------------------------------------------------------------
 (6) _lcd_goto                                             1     1      0      93
                                              2 BANK0      1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     2      0      62
                                              2 BANK0      2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            3     3      0      62
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _write_ee                                             2     1      1      62
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _xandi_lima                                           6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _entrada_senhas
     _write_ee
     _lcd_clear
       _lcd_write
     _printf
       _putch
         _lcd_putc
           _lcd_clear
             _lcd_write
           _lcd_write
           _lcd_goto
             _lcd_write
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _lcd_write
   _senhas
     _entrada_senhas
       _write_ee
       _lcd_clear
         _lcd_write
       _printf
         _putch
           _lcd_putc
             _lcd_clear
               _lcd_write
             _lcd_write
             _lcd_goto
               _lcd_write
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _lcd_write
     _lcd_clear
       _lcd_write
     _printf
       _putch
         _lcd_putc
           _lcd_clear
             _lcd_write
           _lcd_write
           _lcd_goto
             _lcd_write
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _lcd_write
     _timer
       _lcd_clear
         _lcd_write
       _printf
         _putch
           _lcd_putc
             _lcd_clear
               _lcd_write
             _lcd_write
             _lcd_goto
               _lcd_write
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _lcd_init
     _lcd_clear
       _lcd_write
     _lcd_write

 _xandi_lima (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       7       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Mon Oct 07 08:47:05 2013

                       pc 0002               __CFG_CP$OFF 0000                        _RD 0C60  
                      _WR 0C61                        _ok 03B9                        fsr 0004  
                     l121 0295                       l113 0265                       l131 0301  
                     l115 0269                       l107 0239                       l133 0305  
                     l125 02D5                       l109 023D                       l151 03A1  
                     l143 0371                       l127 02D9                       l119 0291  
                     l145 0375                       l137 032D                       l155 03C9  
                     l139 0331                       l171 0036                       l244 0791  
                     l245 0797                       l157 03CD                       l149 039D  
                     l184 007C                       l282 04CB                       l178 0059  
                     _GIE 005F                       _RB1 0031                       _RB2 0032  
                     _RA4 002C                       _RA5 002D                       _RB5 0035  
                     _RC4 003C                       _RB6 0036                       _RC5 003D  
                     _RB7 0037                       _RC6 003E                       _RC7 003F  
            __CFG_CPD$OFF 0000                       _foi 03B8                       fsr0 0004  
                     indf 0000               lcd_goto@pos 0022              __CFG_LVP$OFF 0000  
                    l2013 031B                      l2005 02EF                      l2111 0486  
                    l2103 0476                      l2015 0323                      l2007 02F7  
                    l2113 0403                      l2107 0480                      l2043 03B7  
                    l2035 038B                      l2027 035F                      l2045 03BF  
                    l2037 0393                      l2029 0367                      l2081 0438  
                    l2145 0672                      l2161 0030                      l2091 044F  
                    l2075 0420                      l2147 06B1                      l2243 00EF  
                    l2163 002D                      l2421 0788                      l2173 0053  
                    l2423 078C                      l2431 079D                      l2095 0455  
                    l2175 0050                      l2185 0076                      l2443 06FC  
                    l2339 01EA                      l2187 0073                      l2445 070A  
                    l2453 0723                      l2269 013E                      l2365 074A  
                    l2295 018D                      l2449 0718                      l1855 06E2  
                    l1847 06BE                      l1849 06CC                      l1859 06ED  
                    l1983 027F                      l1975 0253                      l1967 0227  
                    l1985 0287                      l1977 025B                      l1969 022F  
                    l1997 02C3                      l1999 02CB                      _EEIE 046C  
                    _EEIF 006C                      STR_1 0510                      STR_2 05A2  
                    STR_3 05A2                      STR_4 05A2                      STR_5 0527  
                    STR_6 05A2                      STR_7 05A2                      STR_8 05A2  
                    STR_9 053E                      u2015 0710                      u2025 0719  
                    u2107 05FF                      _IOCB 0096                      u2117 060C  
                    u1255 06C1                      u2207 034D                      u2127 00A5  
                    u2047 05B1                      u2217 03F3                      u2137 01C1  
                    u2057 05C0                      u2227 07CD                      u1275 06CD  
                    u2147 01D0                      u2067 05CA                      u2237 07DB  
                    u1285 06D9                      u2157 01F8                      u2077 05D3  
                    u2247 075D                      u1295 06E3                      u2167 0207  
                    u2087 05E6                      u2257 0781                      u1705 046C  
                    u2177 0694                      u2097 05F3                      u2187 06A3  
                    u2197 02B1                      u1755 0768                      _INTE 005C  
                    _INTF 0059                      _RBIE 005B                      _RBIF 0058  
                    u1995 06FF                      _WREN 0C62              __CFG_WRT$OFF 0000  
                    _main 072A                      btemp 007E                      start 0012  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   _EEADR 010D                     STR_10 05A2                     _EEDAT 010C  
                   STR_11 05A2                     STR_12 05A2                     STR_20 057C  
                   STR_13 0597                     STR_14 0555                     STR_15 05A2  
                   STR_16 05A2                     STR_17 05A2             __CFG_WDTE$OFF 0000  
                   STR_18 056C                     STR_19 058B                     _ANSEL 0188  
         __end_of___lwdiv 06F4                     i1l207 0664           __end_of___lwmod 072A  
                   i1l195 061D                     i1l197 0636                     i1l198 0634  
                   _PORTA 0005                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
         __end_of_dpowers 0510                     _tempo 0048                     _timer 0671  
                   _putch 04DD            __pbitbssCOMMON 03B8            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 07E1              __end_of_main 0758                    ??_main 0077  
                  _EECON1 018C                    _EECON2 018D                    ?_timer 0070  
                  ?_putch 0070                    _ANSELH 0189                    i1l1921 0650  
                  i1l1915 064A                    i1l1907 063E                    i1l1917 064E  
                  i1l1909 0642   __size_of_entrada_senhas 01ED                    _INTCON 000B  
                  u226_27 0624                    u227_27 0657          __end_of_lcd_init 0610  
        __end_of_lcd_goto 07FE          __end_of_lcd_putc 07AB                 ??___lwdiv 0076  
               ??___lwmod 002B                    _buffer 0041                    _senhas 0015  
                  _printf 03FC                    saved_w 007E                    putch@c 0025  
        __end_of_write_ee 07C8   __end_of__initialization 07F0            __pcstackCOMMON 0070  
            __pidataBANK0 04E5             __end_of_timer 06B4             __end_of_putch 04E5  
      __size_of_lcd_clear 0019        __size_of_lcd_write 002C                   ??_timer 003B  
                 ??_putch 0077                __pbssBANK0 0048                __pmaintext 072A  
              __pintentry 0004                   ?_senhas 0070                   ?_printf 002D  
               ?_lcd_init 0070                 ?_lcd_goto 0070                 ?_lcd_putc 0070  
              __stringtab 0500            _entrada_senhas 020F         __end_of_lcd_clear 07E1  
       __end_of_lcd_write 0784                   ___lwdiv 06B4                   ___lwmod 06F4  
         __size_of_senhas 01FA                   __ptext1 05A5                   __ptext2 0015  
                 __ptext3 0671                   __ptext4 020F                   __ptext5 03FC  
                 __ptext6 06F4                   __ptext7 06B4                   __ptext8 04DD  
                 __ptext9 0784                 ?_write_ee 0076           __size_of_printf 00D0  
                 _dpowers 0506                   _senha_1 0042                   _senha_2 0043  
                 _senha_3 0044    __end_of_entrada_senhas 03FC                ??_lcd_init 0024  
              ??_lcd_goto 0077                ??_lcd_putc 0077      end_of_initialization 07F0  
                 printf@c 003A                   printf@f 0034                _xandi_lima 0610  
              _tentativas 0049                ??_write_ee 0077           ?_entrada_senhas 0070  
            write_ee@dado 0076                lcd_write@c 0076            __end_of_senhas 020F  
          __end_of_printf 04CC       start_initialization 07E1        lcd_init@init_value 0026  
__CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 04CC               __pdataBANK0 0041  
             ?_xandi_lima 0070                  ??_senhas 003E                  ??_printf 002F  
           __pcstackBANK0 0020       __end_of__stringdata 05A5         __size_of_lcd_init 006B  
       __size_of_lcd_goto 000A         __size_of_lcd_putc 0027          ___lwdiv@dividend 0022  
                ?___lwdiv 0020                  ?___lwmod 0027                 _lcd_clear 07C8  
               __pstrings 0500                 _lcd_write 0758         __size_of_write_ee 001D  
        ___lwdiv@quotient 0024            __size_of_timer 0043            __size_of_putch 0008  
       interrupt_function 0004       __size_of_xandi_lima 0061                ?_lcd_clear 0070  
             __stringbase 0505               __stringdata 0510                ?_lcd_write 0070  
             write_ee@adr 0020          ??_entrada_senhas 003B                printf@_val 0036  
              printf@flag 0033                printf@prec 0035                 lcd_putc@c 0024  
        __size_of___lwdiv 0040          __size_of___lwmod 0036        __end_of__stringtab 0506  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0026                  __ptext10 07F4  
                __ptext11 07C8                  __ptext12 0758                  __ptext13 07AB  
                __ptext14 0610         __CFG_BOR4V$BOR40V 0000                  _lcd_init 05A5  
                _lcd_goto 07F4                  _lcd_putc 0784             __size_of_main 002E  
                _senhar_1 0045                  _senhar_2 0046                  _senhar_3 0047  
             ??_lcd_clear 0022              ??_xandi_lima 0070               ??_lcd_write 0020  
                _write_ee 07AB                  init_ram0 04D0                  intlevel1 0000  
        ___lwmod@dividend 0029        __end_of_xandi_lima 0671                 stringcode 0500  
                printf@ap 0032                _OPTION_REG 0081           ___lwmod@divisor 0027  
         ___lwmod@counter 002C                  stringdir 0500                  stringtab 0500  
