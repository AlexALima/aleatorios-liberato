

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Nov 26 19:12:20 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F690
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 5 "SERIAL_1.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 5 "SERIAL_1.c"
    45  2007  F0C4               	dw 0xFFFC & 0xFFF7 & 0xFFEF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF ;#
    46                           	FNCALL	_main,_init_serial
    47                           	FNCALL	_main,_tx_serial
    48                           	FNROOT	_main
    49                           	FNCALL	intlevel1,_xandi
    50                           	global	intlevel1
    51                           	FNROOT	intlevel1
    52                           	global	_DADO_RX
    53                           	global	_lixo
    54                           psect	idataCOMMON,class=CODE,space=0,delta=2
    55                           global __pidataCOMMON
    56  00AC                     __pidataCOMMON:
    57                           	file	"SERIAL_1.c"
    58                           	line	11
    59                           
    60                           ;initializer for _DADO_RX
    61  00AC  34FF               	retlw	0FFh
    62                           	line	12
    63                           
    64                           ;initializer for _lixo
    65  00AD  34FF               	retlw	0FFh
    66                           	global	_carro
    67                           	global	_oi
    68                           	global	_INTCON
    69  000B                     _INTCON	set	11
    70                           	global	_RCREG
    71  001A                     _RCREG	set	26
    72                           	global	_TXREG
    73  0019                     _TXREG	set	25
    74                           	global	_CARRY
    75  0018                     _CARRY	set	24
    76                           	global	_CREN
    77  00C4                     _CREN	set	196
    78                           	global	_FERR
    79  00C2                     _FERR	set	194
    80                           	global	_GIE
    81  005F                     _GIE	set	95
    82                           	global	_INTE
    83  005C                     _INTE	set	92
    84                           	global	_INTF
    85  0059                     _INTF	set	89
    86                           	global	_PEIE
    87  005E                     _PEIE	set	94
    88                           	global	_RCIF
    89  0065                     _RCIF	set	101
    90                           	global	_RX9
    91  00C6                     _RX9	set	198
    92                           	global	_SPEN
    93  00C7                     _SPEN	set	199
    94                           	global	_OPTION_REG
    95  0081                     _OPTION_REG	set	129
    96                           	global	_OSCCON
    97  008F                     _OSCCON	set	143
    98                           	global	_SPBRG
    99  0099                     _SPBRG	set	153
   100                           	global	_SPBRGH
   101  009A                     _SPBRGH	set	154
   102                           	global	_TRISA
   103  0085                     _TRISA	set	133
   104                           	global	_TRISB
   105  0086                     _TRISB	set	134
   106                           	global	_TRISC
   107  0087                     _TRISC	set	135
   108                           	global	_BRG16
   109  04DB                     _BRG16	set	1243
   110                           	global	_BRGH
   111  04C2                     _BRGH	set	1218
   112                           	global	_RCIE
   113  0465                     _RCIE	set	1125
   114                           	global	_SYNC
   115  04C4                     _SYNC	set	1220
   116                           	global	_TRISA2
   117  042A                     _TRISA2	set	1066
   118                           	global	_TRMT
   119  04C1                     _TRMT	set	1217
   120                           	global	_TX9
   121  04C6                     _TX9	set	1222
   122                           	global	_TX9D
   123  04C0                     _TX9D	set	1216
   124                           	global	_TXEN
   125  04C5                     _TXEN	set	1221
   126                           	global	_ANSEL
   127  011E                     _ANSEL	set	286
   128                           	global	_ANSELH
   129  011F                     _ANSELH	set	287
   130                           	global	_EEADR
   131  010D                     _EEADR	set	269
   132                           	global	_EEDATA
   133  010C                     _EEDATA	set	268
   134                           	global	_EECON1
   135  018C                     _EECON1	set	396
   136                           	global	_EECON2
   137  018D                     _EECON2	set	397
   138                           	global	_RD
   139  0C60                     _RD	set	3168
   140                           	global	_WR
   141  0C61                     _WR	set	3169
   142                           	global	_WREN
   143  0C62                     _WREN	set	3170
   144                           	file	"C:\Users\ALEXAN~1\AppData\Local\Temp\s1pj0."
   145                           	line	#
   146                           psect cinit,class=CODE,delta=2
   147                           global start_initialization
   148  009F                     start_initialization:
   149                           
   150                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   151                           global __pbitbssCOMMON
   152  03C8                     __pbitbssCOMMON:
   153  03C8                     _oi:
   154  03C8                            ds      1
   155                           
   156                           psect	bssCOMMON,class=COMMON,space=1
   157                           global __pbssCOMMON
   158  007A                     __pbssCOMMON:
   159  007A                     _carro:
   160  007A                            ds      1
   161                           
   162                           psect	dataCOMMON,class=COMMON,space=1
   163                           global __pdataCOMMON
   164  0077                     __pdataCOMMON:
   165                           	file	"SERIAL_1.c"
   166                           	line	11
   167  0077                     _DADO_RX:
   168  0077                            ds      1
   169                           
   170                           psect	dataCOMMON
   171                           	file	"SERIAL_1.c"
   172                           	line	12
   173  0078                     _lixo:
   174  0078                            ds      1
   175                           
   176                           ; Clear objects allocated to BITCOMMON
   177                           psect cinit,class=CODE,delta=2
   178  009F  01F9               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   179                           ; Clear objects allocated to COMMON
   180                           psect cinit,class=CODE,delta=2
   181  00A0  01FA               	clrf	((__pbssCOMMON)+0)&07Fh
   182                           ; Initialize objects allocated to COMMON
   183                           	global __pidataCOMMON
   184                           psect cinit,class=CODE,delta=2
   185  00A1  118A  20AC  118A   	fcall	__pidataCOMMON+0		;fetch initializer
   186  00A4  00F7               	movwf	__pdataCOMMON+0&07fh		
   187  00A5  118A  20AD  118A   	fcall	__pidataCOMMON+1		;fetch initializer
   188  00A8  00F8               	movwf	__pdataCOMMON+1&07fh		
   189                           psect cinit,class=CODE,delta=2
   190                           global end_of_initialization
   191                           
   192                           ;End of C runtime variable initialization code
   193                           
   194  00A9                     end_of_initialization:
   195  00A9  0183               clrf status
   196  00AA  118A  284B         ljmp _main	;jump to C main() function
   197                           psect	cstackCOMMON,class=COMMON,space=1
   198                           global __pcstackCOMMON
   199  0070                     __pcstackCOMMON:
   200                           	global	?_init_serial
   201  0070                     ?_init_serial:	; 0 bytes @ 0x0
   202                           	global	?_tx_serial
   203  0070                     ?_tx_serial:	; 0 bytes @ 0x0
   204                           	global	?_xandi
   205  0070                     ?_xandi:	; 0 bytes @ 0x0
   206                           	global	??_xandi
   207  0070                     ??_xandi:	; 0 bytes @ 0x0
   208                           	global	?_main
   209  0070                     ?_main:	; 0 bytes @ 0x0
   210  0070                     	ds	6
   211                           	global	??_init_serial
   212  0076                     ??_init_serial:	; 0 bytes @ 0x6
   213                           	global	??_tx_serial
   214  0076                     ??_tx_serial:	; 0 bytes @ 0x6
   215                           	global	tx_serial@dado
   216  0076                     tx_serial@dado:	; 1 bytes @ 0x6
   217  0076                     	ds	1
   218                           	global	??_main
   219  0077                     ??_main:	; 0 bytes @ 0x7
   220 ;;Data sizes: Strings 0, constant 0, data 2, bss 1, persistent 0 stack 0
   221 ;;Auto spaces:   Size  Autos    Used
   222 ;; COMMON          14      7      11
   223 ;; BANK0           80      0       0
   224 ;; BANK1           80      0       0
   225 ;; BANK2           80      0       0
   226                           
   227 ;;
   228 ;; Pointer list with targets:
   229                           
   230                           
   231                           
   232 ;;
   233 ;; Critical Paths under _main in COMMON
   234 ;;
   235 ;;   _main->_tx_serial
   236 ;;
   237 ;; Critical Paths under _xandi in COMMON
   238 ;;
   239 ;;   None.
   240 ;;
   241 ;; Critical Paths under _main in BANK0
   242 ;;
   243 ;;   None.
   244 ;;
   245 ;; Critical Paths under _xandi in BANK0
   246 ;;
   247 ;;   None.
   248 ;;
   249 ;; Critical Paths under _main in BANK1
   250 ;;
   251 ;;   None.
   252 ;;
   253 ;; Critical Paths under _xandi in BANK1
   254 ;;
   255 ;;   None.
   256 ;;
   257 ;; Critical Paths under _main in BANK2
   258 ;;
   259 ;;   None.
   260 ;;
   261 ;; Critical Paths under _xandi in BANK2
   262 ;;
   263 ;;   None.
   264                           
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   267 ;;
   268                           
   269 ;;
   270 ;;Call Graph Tables:
   271 ;;
   272 ;; ---------------------------------------------------------------------------------
   273 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   274 ;; ---------------------------------------------------------------------------------
   275 ;; (0) _main                                                 0     0      0      15
   276 ;;                        _init_serial
   277 ;;                          _tx_serial
   278 ;; ---------------------------------------------------------------------------------
   279 ;; (1) _tx_serial                                            1     1      0      15
   280 ;;                                              6 COMMON     1     1      0
   281 ;; ---------------------------------------------------------------------------------
   282 ;; (1) _init_serial                                          0     0      0       0
   283 ;; ---------------------------------------------------------------------------------
   284 ;; Estimated maximum stack depth 1
   285 ;; ---------------------------------------------------------------------------------
   286 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (2) _xandi                                                6     6      0       0
   289 ;;                                              0 COMMON     6     6      0
   290 ;; ---------------------------------------------------------------------------------
   291 ;; Estimated maximum stack depth 2
   292 ;; ---------------------------------------------------------------------------------
   293                           
   294 ;; Call Graph Graphs:
   295                           
   296 ;; _main (ROOT)
   297 ;;   _init_serial
   298 ;;   _tx_serial
   299 ;;
   300 ;; _xandi (ROOT)
   301 ;;
   302                           
   303 ;; Address spaces:
   304                           
   305 ;;Name               Size   Autos  Total    Cost      Usage
   306 ;;SFR3                 0      0       0       4        0.0%
   307 ;;BITSFR3              0      0       0       4        0.0%
   308 ;;BANK2               50      0       0       7        0.0%
   309 ;;BITBANK2            50      0       0       6        0.0%
   310 ;;SFR2                 0      0       0       5        0.0%
   311 ;;BITSFR2              0      0       0       5        0.0%
   312 ;;SFR1                 0      0       0       2        0.0%
   313 ;;BITSFR1              0      0       0       2        0.0%
   314 ;;BANK1               50      0       0       5        0.0%
   315 ;;BITBANK1            50      0       0       4        0.0%
   316 ;;CODE                 0      0       0       0        0.0%
   317 ;;DATA                 0      0       C      10        0.0%
   318 ;;ABS                  0      0       B       8        0.0%
   319 ;;NULL                 0      0       0       0        0.0%
   320 ;;STACK                0      0       1       2        0.0%
   321 ;;BANK0               50      0       0       3        0.0%
   322 ;;BITBANK0            50      0       0       9        0.0%
   323 ;;SFR0                 0      0       0       1        0.0%
   324 ;;BITSFR0              0      0       0       1        0.0%
   325 ;;COMMON               E      7       B       1       78.6%
   326 ;;BITCOMMON            E      0       1       0        7.1%
   327 ;;EEDATA             100      0       0       0        0.0%
   328                           
   329                           	global	_main
   330                           psect	maintext,global,class=CODE,delta=2
   331                           global __pmaintext
   332  004B                     __pmaintext:
   333                           
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 67 in file "SERIAL_1.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;		None               void
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, pclath, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 17F/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   350 ;;      Params:         0       0       0       0
   351 ;;      Locals:         0       0       0       0
   352 ;;      Temps:          0       0       0       0
   353 ;;      Totals:         0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels required when called:    2
   356 ;; This function calls:
   357 ;;		_init_serial
   358 ;;		_tx_serial
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           psect	maintext
   364                           	file	"SERIAL_1.c"
   365                           	line	67
   366                           	global	__size_of_main
   367  002F                     	__size_of_main	equ	__end_of_main-_main
   368                           	
   369  004B                     _main:	
   370                           	opt	stack 6
   371                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   372                           	line	68
   373                           	
   374  004B                     l3049:	
   375                           ;SERIAL_1.c: 68: OSCCON=0b01110000;
   376  004B  3070               	movlw	(070h)
   377  004C  1683               	bsf	status, 5	;RP0=1, select bank1
   378  004D  1303               	bcf	status, 6	;RP1=0, select bank1
   379  004E  008F               	movwf	(143)^080h	;volatile
   380                           	line	69
   381                           	
   382  004F                     l3051:	
   383                           ;SERIAL_1.c: 69: ANSEL=0;
   384  004F  1283               	bcf	status, 5	;RP0=0, select bank2
   385  0050  1703               	bsf	status, 6	;RP1=1, select bank2
   386  0051  019E               	clrf	(286)^0100h	;volatile
   387                           	line	70
   388                           	
   389  0052                     l3053:	
   390                           ;SERIAL_1.c: 70: ANSELH=0;
   391  0052  019F               	clrf	(287)^0100h	;volatile
   392                           	line	71
   393                           	
   394  0053                     l3055:	
   395                           ;SERIAL_1.c: 71: TRISA=0;
   396  0053  1683               	bsf	status, 5	;RP0=1, select bank1
   397  0054  1303               	bcf	status, 6	;RP1=0, select bank1
   398  0055  0185               	clrf	(133)^080h	;volatile
   399                           	line	72
   400                           	
   401  0056                     l3057:	
   402                           ;SERIAL_1.c: 72: TRISA2=1;
   403  0056  1505               	bsf	(1066/8)^080h,(1066)&7
   404                           	line	73
   405                           	
   406  0057                     l3059:	
   407                           ;SERIAL_1.c: 73: TRISB=0xFF;
   408  0057  30FF               	movlw	(0FFh)
   409  0058  0086               	movwf	(134)^080h	;volatile
   410                           	line	74
   411                           ;SERIAL_1.c: 74: TRISC=0;
   412  0059  0187               	clrf	(135)^080h	;volatile
   413                           	line	75
   414                           	
   415  005A                     l3061:	
   416                           ;SERIAL_1.c: 75: INTCON=0b11011000;
   417  005A  30D8               	movlw	(0D8h)
   418  005B  008B               	movwf	(11)	;volatile
   419                           	line	76
   420                           	
   421  005C                     l3063:	
   422                           ;SERIAL_1.c: 76: OPTION_REG=0;
   423  005C  0181               	clrf	(129)^080h	;volatile
   424                           	line	77
   425                           	
   426  005D                     l3065:	
   427                           ;SERIAL_1.c: 77: init_serial();
   428  005D  118A  207A  118A   	fcall	_init_serial
   429                           	line	78
   430                           	
   431  0060                     l3067:	
   432                           ;SERIAL_1.c: 78: oi=0;
   433  0060  1079               	bcf	(_oi/8),(_oi)&7
   434  0061  2862               	goto	l3069
   435                           	line	79
   436                           ;SERIAL_1.c: 79: while(1){
   437                           	
   438  0062                     l916:	
   439                           	line	80
   440                           	
   441  0062                     l3069:	
   442                           ;SERIAL_1.c: 80: if(oi){
   443  0062  1C79               	btfss	(_oi/8),(_oi)&7
   444  0063  2865               	goto	u2271
   445  0064  2866               	goto	u2270
   446  0065                     u2271:
   447  0065  2862               	goto	l3069
   448  0066                     u2270:
   449                           	line	81
   450                           	
   451  0066                     l3071:	
   452                           ;SERIAL_1.c: 81: oi=0;
   453  0066  1079               	bcf	(_oi/8),(_oi)&7
   454                           	line	82
   455                           ;SERIAL_1.c: 82: TX9D = 1;
   456  0067  1683               	bsf	status, 5	;RP0=1, select bank1
   457  0068  1303               	bcf	status, 6	;RP1=0, select bank1
   458  0069  1418               	bsf	(1216/8)^080h,(1216)&7
   459                           	line	83
   460                           	
   461  006A                     l3073:	
   462                           ;SERIAL_1.c: 83: tx_serial(100);
   463  006A  3064               	movlw	(064h)
   464  006B  118A  2091  118A   	fcall	_tx_serial
   465                           	line	84
   466                           	
   467  006E                     l3075:	
   468                           ;SERIAL_1.c: 84: TX9D = 0;
   469  006E  1683               	bsf	status, 5	;RP0=1, select bank1
   470  006F  1303               	bcf	status, 6	;RP1=0, select bank1
   471  0070  1018               	bcf	(1216/8)^080h,(1216)&7
   472                           	line	85
   473                           ;SERIAL_1.c: 85: tx_serial(carro);
   474  0071  087A               	movf	(_carro),w
   475  0072  118A  2091  118A   	fcall	_tx_serial
   476  0075  2862               	goto	l3069
   477                           	line	86
   478                           	
   479  0076                     l917:	
   480  0076  2862               	goto	l3069
   481                           	line	87
   482                           	
   483  0077                     l918:	
   484                           	line	79
   485  0077  2862               	goto	l3069
   486                           	
   487  0078                     l919:	
   488                           	line	88
   489                           	
   490  0078                     l920:	
   491                           	global	start
   492  0078  118A  2811         	ljmp	start
   493                           	opt stack 0
   494                           GLOBAL	__end_of_main
   495  007A                     	__end_of_main:
   496 ;; =============== function _main ends ============
   497                           
   498                           	signat	_main,88
   499                           	global	_tx_serial
   500                           psect	text102,local,class=CODE,delta=2
   501                           global __ptext102
   502  0091                     __ptext102:
   503                           
   504 ;; *************** function _tx_serial *****************
   505 ;; Defined at:
   506 ;;		line 40 in file "SERIAL_1.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  dado            1    wreg     unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  dado            1    6[COMMON] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;		None               void
   513 ;; Registers used:
   514 ;;		wreg
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   520 ;;      Params:         0       0       0       0
   521 ;;      Locals:         1       0       0       0
   522 ;;      Temps:          0       0       0       0
   523 ;;      Totals:         1       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;;		_putch
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           psect	text102
   535                           	file	"SERIAL_1.c"
   536                           	line	40
   537                           	global	__size_of_tx_serial
   538  000E                     	__size_of_tx_serial	equ	__end_of_tx_serial-_tx_serial
   539                           	
   540  0091                     _tx_serial:	
   541                           	opt	stack 6
   542                           ; Regs used in _tx_serial: [wreg]
   543                           ;tx_serial@dado stored from wreg
   544  0091  00F6               	movwf	(tx_serial@dado)
   545                           	line	41
   546                           	
   547  0092                     l2165:	
   548                           ;SERIAL_1.c: 41: while (!TRMT) {
   549  0092  2893               	goto	l900
   550                           	
   551  0093                     l901:	
   552                           	line	42
   553                           	
   554  0093                     l900:	
   555                           	line	41
   556  0093  1683               	bsf	status, 5	;RP0=1, select bank1
   557  0094  1303               	bcf	status, 6	;RP1=0, select bank1
   558  0095  1C98               	btfss	(1217/8)^080h,(1217)&7
   559  0096  2898               	goto	u11
   560  0097  2899               	goto	u10
   561  0098                     u11:
   562  0098  2893               	goto	l900
   563  0099                     u10:
   564  0099  289A               	goto	l2167
   565                           	
   566  009A                     l902:	
   567                           	line	43
   568                           	
   569  009A                     l2167:	
   570                           ;SERIAL_1.c: 42: };
   571                           ;SERIAL_1.c: 43: TXREG = dado;
   572  009A  0876               	movf	(tx_serial@dado),w
   573  009B  1283               	bcf	status, 5	;RP0=0, select bank0
   574  009C  1303               	bcf	status, 6	;RP1=0, select bank0
   575  009D  0099               	movwf	(25)	;volatile
   576                           	line	44
   577                           	
   578  009E                     l903:	
   579  009E  0008               	return
   580                           	opt stack 0
   581                           GLOBAL	__end_of_tx_serial
   582  009F                     	__end_of_tx_serial:
   583 ;; =============== function _tx_serial ends ============
   584                           
   585                           	signat	_tx_serial,4216
   586                           	global	_init_serial
   587                           psect	text103,local,class=CODE,delta=2
   588                           global __ptext103
   589  007A                     __ptext103:
   590                           
   591 ;; *************** function _init_serial *****************
   592 ;; Defined at:
   593 ;;		line 16 in file "SERIAL_1.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg, status,2
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   607 ;;      Params:         0       0       0       0
   608 ;;      Locals:         0       0       0       0
   609 ;;      Temps:          0       0       0       0
   610 ;;      Totals:         0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           psect	text103
   621                           	file	"SERIAL_1.c"
   622                           	line	16
   623                           	global	__size_of_init_serial
   624  0017                     	__size_of_init_serial	equ	__end_of_init_serial-_init_serial
   625                           	
   626  007A                     _init_serial:	
   627                           	opt	stack 6
   628                           ; Regs used in _init_serial: [wreg+status,2]
   629                           	line	21
   630                           	
   631  007A                     l2143:	
   632                           ;SERIAL_1.c: 21: SYNC = 0;
   633  007A  1683               	bsf	status, 5	;RP0=1, select bank1
   634  007B  1303               	bcf	status, 6	;RP1=0, select bank1
   635  007C  1218               	bcf	(1220/8)^080h,(1220)&7
   636                           	line	22
   637                           ;SERIAL_1.c: 22: BRGH = 0;
   638  007D  1118               	bcf	(1218/8)^080h,(1218)&7
   639                           	line	23
   640                           ;SERIAL_1.c: 23: BRG16 = 1;
   641  007E  159B               	bsf	(1243/8)^080h,(1243)&7
   642                           	line	24
   643                           	
   644  007F                     l2145:	
   645                           ;SERIAL_1.c: 24: SPBRG = 129;
   646  007F  3081               	movlw	(081h)
   647  0080  0099               	movwf	(153)^080h	;volatile
   648                           	line	25
   649                           	
   650  0081                     l2147:	
   651                           ;SERIAL_1.c: 25: SPBRGH = 0;
   652  0081  019A               	clrf	(154)^080h	;volatile
   653                           	line	27
   654                           	
   655  0082                     l2149:	
   656                           ;SERIAL_1.c: 27: SPEN = 1;
   657  0082  1283               	bcf	status, 5	;RP0=0, select bank0
   658  0083  1303               	bcf	status, 6	;RP1=0, select bank0
   659  0084  1798               	bsf	(199/8),(199)&7
   660                           	line	28
   661                           	
   662  0085                     l2151:	
   663                           ;SERIAL_1.c: 28: TX9 = 1;
   664  0085  1683               	bsf	status, 5	;RP0=1, select bank1
   665  0086  1303               	bcf	status, 6	;RP1=0, select bank1
   666  0087  1718               	bsf	(1222/8)^080h,(1222)&7
   667                           	line	29
   668                           	
   669  0088                     l2153:	
   670                           ;SERIAL_1.c: 29: TX9D = 1;
   671  0088  1418               	bsf	(1216/8)^080h,(1216)&7
   672                           	line	30
   673                           	
   674  0089                     l2155:	
   675                           ;SERIAL_1.c: 30: TXEN = 1;
   676  0089  1698               	bsf	(1221/8)^080h,(1221)&7
   677                           	line	34
   678                           	
   679  008A                     l2157:	
   680                           ;SERIAL_1.c: 34: RCIE = 1;
   681  008A  168C               	bsf	(1125/8)^080h,(1125)&7
   682                           	line	35
   683                           	
   684  008B                     l2159:	
   685                           ;SERIAL_1.c: 35: PEIE = 1;
   686  008B  170B               	bsf	(94/8),(94)&7
   687                           	line	36
   688                           	
   689  008C                     l2161:	
   690                           ;SERIAL_1.c: 36: RX9 = 0;
   691  008C  1283               	bcf	status, 5	;RP0=0, select bank0
   692  008D  1303               	bcf	status, 6	;RP1=0, select bank0
   693  008E  1318               	bcf	(198/8),(198)&7
   694                           	line	37
   695                           	
   696  008F                     l2163:	
   697                           ;SERIAL_1.c: 37: CREN = 1;
   698  008F  1618               	bsf	(196/8),(196)&7
   699                           	line	38
   700                           	
   701  0090                     l897:	
   702  0090  0008               	return
   703                           	opt stack 0
   704                           GLOBAL	__end_of_init_serial
   705  0091                     	__end_of_init_serial:
   706 ;; =============== function _init_serial ends ============
   707                           
   708                           	signat	_init_serial,88
   709                           	global	_xandi
   710                           psect	text104,local,class=CODE,delta=2
   711                           global __ptext104
   712  0013                     __ptext104:
   713                           
   714 ;; *************** function _xandi *****************
   715 ;; Defined at:
   716 ;;		line 50 in file "SERIAL_1.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;		None               void
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   730 ;;      Params:         0       0       0       0
   731 ;;      Locals:         0       0       0       0
   732 ;;      Temps:          6       0       0       0
   733 ;;      Totals:         6       0       0       0
   734 ;;Total ram usage:        6 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		Interrupt level 1
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           psect	text104
   743                           	file	"SERIAL_1.c"
   744                           	line	50
   745                           	global	__size_of_xandi
   746  0038                     	__size_of_xandi	equ	__end_of_xandi-_xandi
   747                           	
   748  0013                     _xandi:	
   749                           	opt	stack 6
   750                           ; Regs used in _xandi: [wreg+status,2+status,0]
   751                           psect	intentry,class=CODE,delta=2
   752                           global __pintentry
   753  0004                     __pintentry:
   754                           global interrupt_function
   755  0004                     interrupt_function:
   756                           	global saved_w
   757  007E                     	saved_w	set	btemp+0
   758  0004  00FE               	movwf	saved_w
   759  0005  0E03               	swapf	status,w
   760  0006  00F2               	movwf	(??_xandi+2)
   761  0007  0804               	movf	fsr0,w
   762  0008  00F3               	movwf	(??_xandi+3)
   763  0009  080A               	movf	pclath,w
   764  000A  00F4               	movwf	(??_xandi+4)
   765  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   766  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   767  000D  087F               	movf	btemp+1,w
   768  000E  00F5               	movwf	(??_xandi+5)
   769  000F  118A  2813         	ljmp	_xandi
   770                           psect	text104
   771                           	line	51
   772                           	
   773  0013                     i1l2171:	
   774                           ;SERIAL_1.c: 51: if (RCIF) {
   775  0013  1E8C               	btfss	(101/8),(101)&7
   776  0014  2816               	goto	u2_21
   777  0015  2817               	goto	u2_20
   778  0016                     u2_21:
   779  0016  2826               	goto	i1l2179
   780  0017                     u2_20:
   781                           	line	52
   782                           	
   783  0017                     i1l2173:	
   784                           ;SERIAL_1.c: 52: if (FERR) {
   785  0017  1D18               	btfss	(194/8),(194)&7
   786  0018  281A               	goto	u3_21
   787  0019  281B               	goto	u3_20
   788  001A                     u3_21:
   789  001A  2820               	goto	i1l2177
   790  001B                     u3_20:
   791                           	line	53
   792                           	
   793  001B                     i1l2175:	
   794                           ;SERIAL_1.c: 53: lixo = RCREG;
   795  001B  081A               	movf	(26),w	;volatile
   796  001C  00F0               	movwf	(??_xandi+0)+0
   797  001D  0870               	movf	(??_xandi+0)+0,w
   798  001E  00F8               	movwf	(_lixo)
   799                           	line	54
   800                           ;SERIAL_1.c: 54: } else {
   801  001F  2826               	goto	i1l2179
   802                           	
   803  0020                     i1l910:	
   804                           	line	55
   805                           	
   806  0020                     i1l2177:	
   807                           ;SERIAL_1.c: 55: DADO_RX = RCREG;
   808  0020  081A               	movf	(26),w	;volatile
   809  0021  00F0               	movwf	(??_xandi+0)+0
   810  0022  0870               	movf	(??_xandi+0)+0,w
   811  0023  00F7               	movwf	(_DADO_RX)
   812  0024  2826               	goto	i1l2179
   813                           	line	56
   814                           	
   815  0025                     i1l911:	
   816  0025  2826               	goto	i1l2179
   817                           	line	57
   818                           	
   819  0026                     i1l909:	
   820                           	line	58
   821                           	
   822  0026                     i1l2179:	
   823                           ;SERIAL_1.c: 56: }
   824                           ;SERIAL_1.c: 57: }
   825                           ;SERIAL_1.c: 58: if(INTE && INTF){
   826  0026  1E0B               	btfss	(92/8),(92)&7
   827  0027  2829               	goto	u4_21
   828  0028  282A               	goto	u4_20
   829  0029                     u4_21:
   830  0029  283E               	goto	i1l913
   831  002A                     u4_20:
   832                           	
   833  002A                     i1l2181:	
   834  002A  1C8B               	btfss	(89/8),(89)&7
   835  002B  282D               	goto	u5_21
   836  002C  282E               	goto	u5_20
   837  002D                     u5_21:
   838  002D  283E               	goto	i1l913
   839  002E                     u5_20:
   840                           	line	59
   841                           	
   842  002E                     i1l2183:	
   843                           ;SERIAL_1.c: 59: _delay((unsigned long)((50)*(8000000/4000.0)));
   844                           	opt asmopt_off
   845  002E  3082               movlw	130
   846  002F  00F1               movwf	((??_xandi+0)+0+1),f
   847  0030  30DD               	movlw	221
   848  0031  00F0               movwf	((??_xandi+0)+0),f
   849  0032                     u228_27:
   850  0032  0BF0               	decfsz	((??_xandi+0)+0),f
   851  0033  2832               	goto	u228_27
   852  0034  0BF1               	decfsz	((??_xandi+0)+0+1),f
   853  0035  2832               	goto	u228_27
   854  0036  2837               	nop2
   855                           opt asmopt_on
   856                           
   857                           	line	60
   858                           	
   859  0037                     i1l2185:	
   860                           ;SERIAL_1.c: 60: INTF=0;
   861  0037  108B               	bcf	(89/8),(89)&7
   862                           	line	61
   863                           	
   864  0038                     i1l2187:	
   865                           ;SERIAL_1.c: 61: oi=1;
   866  0038  1479               	bsf	(_oi/8),(_oi)&7
   867                           	line	62
   868                           	
   869  0039                     i1l2189:	
   870                           ;SERIAL_1.c: 62: carro++;
   871  0039  3001               	movlw	(01h)
   872  003A  00F0               	movwf	(??_xandi+0)+0
   873  003B  0870               	movf	(??_xandi+0)+0,w
   874  003C  07FA               	addwf	(_carro),f
   875  003D  283E               	goto	i1l913
   876                           	line	63
   877                           	
   878  003E                     i1l912:	
   879                           	line	64
   880                           	
   881  003E                     i1l913:	
   882  003E  0875               	movf	(??_xandi+5),w
   883  003F  1283               	bcf	status, 5	;RP0=0, select bank0
   884  0040  1303               	bcf	status, 6	;RP1=0, select bank0
   885  0041  00FF               	movwf	btemp+1
   886  0042  0874               	movf	(??_xandi+4),w
   887  0043  008A               	movwf	pclath
   888  0044  0873               	movf	(??_xandi+3),w
   889  0045  0084               	movwf	fsr0
   890  0046  0E72               	swapf	(??_xandi+2)^0FFFFFF80h,w
   891  0047  0083               	movwf	status
   892  0048  0EFE               	swapf	saved_w,f
   893  0049  0E7E               	swapf	saved_w,w
   894  004A  0009               	retfie
   895                           	opt stack 0
   896                           GLOBAL	__end_of_xandi
   897  004B                     	__end_of_xandi:
   898 ;; =============== function _xandi ends ============
   899                           
   900                           	signat	_xandi,88
   901                           psect	text105,local,class=CODE,delta=2
   902                           global __ptext105
   903  0000                     __ptext105:
   904                           	global	btemp
   905  007E                     	btemp set 07Eh
   906                           
   907                           	DABS	1,126,2	;btemp
   908                           	global	wtemp0
   909  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Nov 26 19:12:20 2013

                  _RD 0C60                    u10 0099                    u11 0098                    _WR 0C61  
                  _oi 03C8                   l900 0093                   l901 0093                   l902 009A  
                 l903 009E                   l920 0078                   l916 0062                   l917 0076  
                 l918 0077                   l919 0078                   l897 0090                   _GIE 005F  
                 _RX9 00C6                   _TX9 04C6                   fsr0 0004                  l2151 0085  
                l2143 007A                  l2161 008C                  l2153 0088                  l2145 007F  
                l2163 008F                  l2155 0089                  l2147 0081                  l3051 004F  
                l2157 008A                  l2149 0082                  l2165 0092                  l3061 005A  
                l3053 0052                  l2159 008B                  l2167 009A                  l3071 0066  
                l3063 005C                  l3055 0053                  l3073 006A                  l3065 005D  
                l3057 0056                  l3049 004B                  l3075 006E                  l3067 0060  
                l3059 0057                  l3069 0062                  _BRGH 04C2                  _CREN 00C4  
                _FERR 00C2                  u2270 0066                  u2271 0065                  _PEIE 005E  
                _INTE 005C                  _INTF 0059                  _RCIE 0465                  _RCIF 0065  
                _SPEN 00C7                  _TX9D 04C0                  _TRMT 04C1                  _WREN 0C62  
                _TXEN 04C5                  _SYNC 04C4                  u2_20 0017                  u2_21 0016  
                u3_20 001B                  u3_21 001A                  u4_20 002A                  u4_21 0029  
                u5_20 002E                  u5_21 002D                  _main 004B                  _lixo 0078  
                btemp 007E                  start 0011                 ?_main 0070                 _EEADR 010D  
               _BRG16 04DB                 _CARRY 0018                 _ANSEL 011E                 i1l910 0020  
               i1l911 0025                 i1l912 003E                 i1l913 003E                 i1l909 0026  
               _RCREG 001A                 _SPBRG 0099                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TXREG 0019          ?_init_serial 0070                 _carro 007A  
               _xandi 0013        __pbitbssCOMMON 03C8                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 007A                ??_main 0077                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D                ?_xandi 0070                _ANSELH 011F  
              i1l2171 0013                i1l2181 002A                i1l2173 0017                i1l2183 002E  
              i1l2175 001B                i1l2185 0037                i1l2177 0020                i1l2187 0038  
              i1l2179 0026                i1l2189 0039                _INTCON 000B                u228_27 0032  
              _OSCCON 008F                _SPBRGH 009A                _TRISA2 042A          __pdataCOMMON 0077  
              saved_w 007E        __pcstackCOMMON 0070         __end_of_xandi 004B  __size_of_init_serial 0017  
             ??_xandi 0070            __pmaintext 004B            __pintentry 0004               _DADO_RX 0077  
  __size_of_tx_serial 000E  end_of_initialization 00A9     __end_of_tx_serial 009F         __pidataCOMMON 00AC  
 start_initialization 009F         ??_init_serial 0076           __pbssCOMMON 007A             __ptext102 0091  
           __ptext103 007A             __ptext104 0013             __ptext105 0000        __size_of_xandi 0038  
 __end_of_init_serial 0091     interrupt_function 0004         tx_serial@dado 0076             _tx_serial 0091  
         _init_serial 007A            ?_tx_serial 0070         __size_of_main 002F              intlevel1 0000  
          _OPTION_REG 0081           ??_tx_serial 0076  
